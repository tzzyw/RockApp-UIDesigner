//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#region 权限部分
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class UserArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.User>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.User\" mappingName=\"User\" isReadOnly=\"false\" isBatchUpd" +
    "ate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Propert" +
    "ies>\r\n    <Property name=\"UserID\" mappingName=\"UserID\" type=\"System.Int32\" mappi" +
    "ngColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false" +
    "\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"UserName\" mappingName=\"UserName\" type=\"System.String\" mappingColumnType=\"System" +
    ".String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimary" +
    "Key=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProper" +
    "ty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRel" +
    "ationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"TrueName\"" +
    " mappingName=\"TrueName\" type=\"System.String\" mappingColumnType=\"System.String\" i" +
    "sInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false" +
    "\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"" +
    "false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Password\" mappingNa" +
    "me=\"Password\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited" +
    "=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=" +
    "\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"UserType\" mappingName=\"UserTy" +
    "pe\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" s" +
    "qlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" is" +
    "ReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
    "=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializat" +
    "ionIgnore=\"false\" />\r\n    <Property name=\"Sex\" mappingName=\"Sex\" type=\"System.St" +
    "ring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(10" +
    "\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" is" +
    "FriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad" +
    "=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" /" +
    ">\r\n    <Property name=\"Telphone\" mappingName=\"Telphone\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Mobile\" mappingName=\"Mobile\" type=\"System.String\" mappingColumnTyp" +
    "e=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fa" +
    "lse\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"Address\" mappingName=\"Address\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(150\" isContained=\"false\" isPrimaryK" +
    "ey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRel" +
    "ationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"QQ\" mappi" +
    "ngName=\"QQ\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"" +
    "false\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"f" +
    "alse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
    "ertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSe" +
    "rializationIgnore=\"false\" />\r\n    <Property name=\"Fax\" mappingName=\"Fax\" type=\"S" +
    "ystem.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nva" +
    "rchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"f" +
    "alse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
    "LazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"" +
    "false\" />\r\n    <Property name=\"Email\" mappingName=\"Email\" type=\"System.String\" m" +
    "appingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"State\" mappingName=\"State\" type=\"System.String\" mappingColumnTyp" +
    "e=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fa" +
    "lse\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"CreateTime\" mappingName=\"CreateTime\" type=\"System.DateTime\" mappingColumnType=\"" +
    "System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" " +
    "isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Comm" +
    "ent\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType=\"System.String" +
    "\" isInherited=\"false\" sqlType=\"nvarchar(500\" isContained=\"false\" isPrimaryKey=\"f" +
    "alse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelation" +
    "Key=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfigura" +
    "tion>")]
    public partial class User : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _UserEntityConfiguration;

        protected int _UserID;

        protected string _UserName;

        protected string _TrueName;

        protected string _Password;

        protected string _UserType;

        protected string _Sex;

        protected string _Telphone;

        protected string _Mobile;

        protected string _Address;

        protected string _QQ;

        protected string _Fax;

        protected string _Email;

        protected string _State;

        protected global::System.DateTime _CreateTime;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.User left, global::Rock.StaticEntities.User right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.User left, global::Rock.StaticEntities.User right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                this.OnPropertyChanged("UserName", this._UserName, value);
                this._UserName = value;
            }
        }

        public string TrueName
        {
            get
            {
                return this._TrueName;
            }
            set
            {
                this.OnPropertyChanged("TrueName", this._TrueName, value);
                this._TrueName = value;
            }
        }

        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                this.OnPropertyChanged("Password", this._Password, value);
                this._Password = value;
            }
        }

        public string UserType
        {
            get
            {
                return this._UserType;
            }
            set
            {
                this.OnPropertyChanged("UserType", this._UserType, value);
                this._UserType = value;
            }
        }

        public string Sex
        {
            get
            {
                return this._Sex;
            }
            set
            {
                this.OnPropertyChanged("Sex", this._Sex, value);
                this._Sex = value;
            }
        }

        public string Telphone
        {
            get
            {
                return this._Telphone;
            }
            set
            {
                this.OnPropertyChanged("Telphone", this._Telphone, value);
                this._Telphone = value;
            }
        }

        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                this.OnPropertyChanged("Mobile", this._Mobile, value);
                this._Mobile = value;
            }
        }

        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnPropertyChanged("Address", this._Address, value);
                this._Address = value;
            }
        }

        public string QQ
        {
            get
            {
                return this._QQ;
            }
            set
            {
                this.OnPropertyChanged("QQ", this._QQ, value);
                this._QQ = value;
            }
        }

        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                this.OnPropertyChanged("Fax", this._Fax, value);
                this._Fax = value;
            }
        }

        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                this.OnPropertyChanged("Email", this._Email, value);
                this._Email = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public global::System.DateTime CreateTime
        {
            get
            {
                return this._CreateTime;
            }
            set
            {
                this.OnPropertyChanged("CreateTime", this._CreateTime, value);
                this._CreateTime = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((User._UserEntityConfiguration == null))
            {
                User._UserEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.User");
            }
            return User._UserEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._UserID,
                        this._UserName,
                        this._TrueName,
                        this._Password,
                        this._UserType,
                        this._Sex,
                        this._Telphone,
                        this._Mobile,
                        this._Address,
                        this._QQ,
                        this._Fax,
                        this._Email,
                        this._State,
                        this._CreateTime,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._UserID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._UserName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._TrueName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Password = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._UserType = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Sex = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Telphone = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Mobile = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Address = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._QQ = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Fax = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Email = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._State = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._CreateTime = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._Comment = reader.GetString(14);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._UserID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._UserName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._TrueName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Password = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._UserType = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Sex = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Telphone = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Mobile = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Address = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._QQ = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Fax = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Email = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._State = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._CreateTime = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._Comment = ((string)(row[14]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.User).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.User)(obj)).isAttached)
                        && (this.UserID == ((global::Rock.StaticEntities.User)(obj)).UserID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _UserID = new Rock.Orm.Common.PropertyItem("UserID", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _UserName = new Rock.Orm.Common.PropertyItem("UserName", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _TrueName = new Rock.Orm.Common.PropertyItem("TrueName", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Password = new Rock.Orm.Common.PropertyItem("Password", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _UserType = new Rock.Orm.Common.PropertyItem("UserType", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Sex = new Rock.Orm.Common.PropertyItem("Sex", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Telphone = new Rock.Orm.Common.PropertyItem("Telphone", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Mobile = new Rock.Orm.Common.PropertyItem("Mobile", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Address = new Rock.Orm.Common.PropertyItem("Address", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _QQ = new Rock.Orm.Common.PropertyItem("QQ", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Fax = new Rock.Orm.Common.PropertyItem("Fax", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Email = new Rock.Orm.Common.PropertyItem("Email", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _CreateTime = new Rock.Orm.Common.PropertyItem("CreateTime", "Rock.StaticEntities.User");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.User");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem UserName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UserName", _UserName.EntityConfiguration, _UserName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem TrueName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TrueName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("TrueName", _TrueName.EntityConfiguration, _TrueName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Password
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Password;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Password", _Password.EntityConfiguration, _Password.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem UserType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UserType", _UserType.EntityConfiguration, _UserType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Sex
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Sex;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Sex", _Sex.EntityConfiguration, _Sex.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Telphone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Telphone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Telphone", _Telphone.EntityConfiguration, _Telphone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Mobile
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mobile;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Mobile", _Mobile.EntityConfiguration, _Mobile.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Address
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Address;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Address", _Address.EntityConfiguration, _Address.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem QQ
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _QQ;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("QQ", _QQ.EntityConfiguration, _QQ.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Fax
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Fax;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Fax", _Fax.EntityConfiguration, _Fax.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Email
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Email;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Email", _Email.EntityConfiguration, _Email.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateTime", _CreateTime.EntityConfiguration, _CreateTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class RoleArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Role>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Role\" mappingName=\"Role\" isReadOnly=\"false\" isBatchUpd" +
    "ate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Propert" +
    "ies>\r\n    <Property name=\"RoleID\" mappingName=\"RoleID\" type=\"System.Int32\" mappi" +
    "ngColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false" +
    "\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"RoleName\" mappingName=\"RoleName\" type=\"System.String\" mappingColumnType=\"System" +
    ".String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimary" +
    "Key=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProper" +
    "ty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRel" +
    "ationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"RoleKind\"" +
    " mappingName=\"RoleKind\" type=\"System.String\" mappingColumnType=\"System.String\" i" +
    "sInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false" +
    "\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=" +
    "\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"State\" mappingName" +
    "=\"State\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"fal" +
    "se\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fals" +
    "e\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeria" +
    "lizationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" ty" +
    "pe=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType" +
    "=\"nvarchar(500\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadO" +
    "nly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIg" +
    "nore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Role : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _RoleEntityConfiguration;

        protected int _RoleID;

        protected string _RoleName;

        protected string _RoleKind;

        protected string _State;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Role left, global::Rock.StaticEntities.Role right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Role left, global::Rock.StaticEntities.Role right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                this.OnPropertyChanged("RoleID", this._RoleID, value);
                this._RoleID = value;
            }
        }

        public string RoleName
        {
            get
            {
                return this._RoleName;
            }
            set
            {
                this.OnPropertyChanged("RoleName", this._RoleName, value);
                this._RoleName = value;
            }
        }

        public string RoleKind
        {
            get
            {
                return this._RoleKind;
            }
            set
            {
                this.OnPropertyChanged("RoleKind", this._RoleKind, value);
                this._RoleKind = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Role._RoleEntityConfiguration == null))
            {
                Role._RoleEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Role");
            }
            return Role._RoleEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._RoleID,
                        this._RoleName,
                        this._RoleKind,
                        this._State,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._RoleID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._RoleName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._RoleKind = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._State = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Comment = reader.GetString(4);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._RoleID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._RoleName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._RoleKind = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._State = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Comment = ((string)(row[4]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Role).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Role)(obj)).isAttached)
                        && (this.RoleID == ((global::Rock.StaticEntities.Role)(obj)).RoleID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _RoleID = new Rock.Orm.Common.PropertyItem("RoleID", "Rock.StaticEntities.Role");

            protected Rock.Orm.Common.PropertyItem _RoleName = new Rock.Orm.Common.PropertyItem("RoleName", "Rock.StaticEntities.Role");

            protected Rock.Orm.Common.PropertyItem _RoleKind = new Rock.Orm.Common.PropertyItem("RoleKind", "Rock.StaticEntities.Role");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.Role");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Role");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem RoleID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RoleID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RoleID", _RoleID.EntityConfiguration, _RoleID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem RoleName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RoleName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RoleName", _RoleName.EntityConfiguration, _RoleName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem RoleKind
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RoleKind;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RoleKind", _RoleKind.EntityConfiguration, _RoleKind.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ActionGroupArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.ActionGroup>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.ActionGroup\" mappingName=\"ActionGroup\" isReadOnly=\"fal" +
    "se\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false" +
    "\">\r\n  <Properties>\r\n    <Property name=\"ActionGroupID\" mappingName=\"ActionGroupI" +
    "D\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlT" +
    "ype=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"ActionGroupName\" mappingName=\"ActionGroupName\" type" +
    "=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"" +
    "nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Grades\" mappingName=\"Grades\" type=\"System.Int32" +
    "\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Proper" +
    "ty name=\"ParentID\" mappingName=\"ParentID\" type=\"System.Nullable`1[System.Int32]\"" +
    " mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType" +
    "=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fal" +
    "se\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class ActionGroup : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ActionGroupEntityConfiguration;

        protected int _ActionGroupID;

        protected string _ActionGroupName;

        protected int _Grades;

        protected global::System.Int32? _ParentID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.ActionGroup left, global::Rock.StaticEntities.ActionGroup right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.ActionGroup left, global::Rock.StaticEntities.ActionGroup right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ActionGroupID
        {
            get
            {
                return this._ActionGroupID;
            }
            set
            {
                this.OnPropertyChanged("ActionGroupID", this._ActionGroupID, value);
                this._ActionGroupID = value;
            }
        }

        public string ActionGroupName
        {
            get
            {
                return this._ActionGroupName;
            }
            set
            {
                this.OnPropertyChanged("ActionGroupName", this._ActionGroupName, value);
                this._ActionGroupName = value;
            }
        }

        public int Grades
        {
            get
            {
                return this._Grades;
            }
            set
            {
                this.OnPropertyChanged("Grades", this._Grades, value);
                this._Grades = value;
            }
        }

        public global::System.Int32? ParentID
        {
            get
            {
                return this._ParentID;
            }
            set
            {
                this.OnPropertyChanged("ParentID", this._ParentID, value);
                this._ParentID = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((ActionGroup._ActionGroupEntityConfiguration == null))
            {
                ActionGroup._ActionGroupEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.ActionGroup");
            }
            return ActionGroup._ActionGroupEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ActionGroupID,
                        this._ActionGroupName,
                        this._Grades,
                        this._ParentID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ActionGroupID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ActionGroupName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Grades = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ParentID = reader.GetInt32(3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ActionGroupID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ActionGroupName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Grades = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ParentID = ((System.Nullable<int>)(row[3]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.ActionGroup).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.ActionGroup)(obj)).isAttached)
                        && (this.ActionGroupID == ((global::Rock.StaticEntities.ActionGroup)(obj)).ActionGroupID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ActionGroupID = new Rock.Orm.Common.PropertyItem("ActionGroupID", "Rock.StaticEntities.ActionGroup");

            protected Rock.Orm.Common.PropertyItem _ActionGroupName = new Rock.Orm.Common.PropertyItem("ActionGroupName", "Rock.StaticEntities.ActionGroup");

            protected Rock.Orm.Common.PropertyItem _Grades = new Rock.Orm.Common.PropertyItem("Grades", "Rock.StaticEntities.ActionGroup");

            protected Rock.Orm.Common.PropertyItem _ParentID = new Rock.Orm.Common.PropertyItem("ParentID", "Rock.StaticEntities.ActionGroup");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ActionGroupID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionGroupID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionGroupID", _ActionGroupID.EntityConfiguration, _ActionGroupID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActionGroupName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionGroupName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionGroupName", _ActionGroupName.EntityConfiguration, _ActionGroupName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Grades
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Grades;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Grades", _Grades.EntityConfiguration, _Grades.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ParentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ParentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ParentID", _ParentID.EntityConfiguration, _ParentID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ActionArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Action>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Action\" mappingName=\"Action\" isReadOnly=\"false\" isBatc" +
    "hUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Pro" +
    "perties>\r\n    <Property name=\"ActionID\" mappingName=\"ActionID\" type=\"System.Int3" +
    "2\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContaine" +
    "d=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Proper" +
    "ty name=\"ActionName\" mappingName=\"ActionName\" type=\"System.String\" mappingColumn" +
    "Type=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property nam" +
    "e=\"ActionGroup\" mappingName=\"ActionGroupID\" type=\"Rock.StaticEntities.ActionGrou" +
    "p\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlTy" +
    "pe=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"fal" +
    "se\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"true\" isNotNull=\"true\" queryWhere=\"{ActionGroupID} = @ActionGroup\" queryT" +
    "ype=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Acti" +
    "onGroup\" relatedForeignKey=\"ActionGroupID\" isSerializationIgnore=\"true\" />\r\n  </" +
    "Properties>\r\n</EntityConfiguration>")]
    public partial class Action : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ActionEntityConfiguration;

        protected int _ActionID;

        protected string _ActionName;

        protected global::Rock.StaticEntities.ActionGroup _ActionGroup;

        protected global::System.Int32? _ActionGroup_ActionGroupID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Action left, global::Rock.StaticEntities.Action right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Action left, global::Rock.StaticEntities.Action right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ActionID
        {
            get
            {
                return this._ActionID;
            }
            set
            {
                this.OnPropertyChanged("ActionID", this._ActionID, value);
                this._ActionID = value;
            }
        }

        public string ActionName
        {
            get
            {
                return this._ActionName;
            }
            set
            {
                this.OnPropertyChanged("ActionName", this._ActionName, value);
                this._ActionName = value;
            }
        }

        public global::System.Int32? ActionGroupID
        {
            get
            {
                return _ActionGroup_ActionGroupID;
            }
            set
            {
                this.OnPropertyChanged("ActionGroup", _ActionGroup_ActionGroupID, value);
                _ActionGroup_ActionGroupID = value;
                this.SetPropertyUnloaded("ActionGroup");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.ActionGroup ActionGroup
        {
            get
            {
                if (this.IsQueryPropertyLoaded("ActionGroup"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.ActionGroup _obj;
                    _obj = ((global::Rock.StaticEntities.ActionGroup)(this.QueryOne(typeof(global::Rock.StaticEntities.ActionGroup), "ActionGroup", this)));
                    this.OnQueryOnePropertyChanged("ActionGroup", this._ActionGroup, _obj);
                    this._ActionGroup = _obj;
                }
                return this._ActionGroup;
            }
            set
            {
                this.OnQueryOnePropertyChanged("ActionGroup", this.ActionGroup, value);
                this._ActionGroup = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("ActionGroup", this._ActionGroup_ActionGroupID, null);
                    this._ActionGroup_ActionGroupID = null;
                }
                else
                {
                    this.OnPropertyChanged("ActionGroup", this._ActionGroup_ActionGroupID, value.ActionGroupID);
                    this._ActionGroup_ActionGroupID = value.ActionGroupID;
                }
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Action._ActionEntityConfiguration == null))
            {
                Action._ActionEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Action");
            }
            return Action._ActionEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Action", "ActionGroup"))))
            {
                global::Rock.StaticEntities.ActionGroup _obj;
                _obj = ((global::Rock.StaticEntities.ActionGroup)(this.QueryOne(typeof(global::Rock.StaticEntities.ActionGroup), "ActionGroup", this)));
                this.OnQueryOnePropertyChanged("ActionGroup", this._ActionGroup, _obj);
                this._ActionGroup = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ActionID,
                        this._ActionName,
                        this._ActionGroup_ActionGroupID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ActionID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ActionName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ActionGroup_ActionGroupID = reader.GetInt32(2);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ActionID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ActionName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ActionGroup_ActionGroupID = ((int)(row[2]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Action).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Action)(obj)).isAttached)
                        && (this.ActionID == ((global::Rock.StaticEntities.Action)(obj)).ActionID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ActionID = new Rock.Orm.Common.PropertyItem("ActionID", "Rock.StaticEntities.Action");

            protected Rock.Orm.Common.PropertyItem _ActionName = new Rock.Orm.Common.PropertyItem("ActionName", "Rock.StaticEntities.Action");

            protected Rock.Orm.Common.PropertyItem _ActionGroupID = new Rock.Orm.Common.PropertyItem("ActionGroup", "Rock.StaticEntities.Action");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ActionID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionID", _ActionID.EntityConfiguration, _ActionID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActionName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionName", _ActionName.EntityConfiguration, _ActionName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.ActionGroup.@__Columns ActionGroup
            {
                get
                {
                    return new global::Rock.StaticEntities.ActionGroup.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "ActionGroup"));
                }
            }

            public Rock.Orm.Common.PropertyItem ActionGroupID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionGroupID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionGroup", _ActionGroupID.EntityConfiguration, _ActionGroupID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class UserRoleArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.UserRole>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<EntityConfiguration xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""Rock.StaticEntities.UserRole"" mappingName=""UserRole"" isReadOnly=""false"" isBatchUpdate=""false"" isAutoPreLoad=""false"" batchSize=""10"" isRelation=""true"">
  <Properties>
    <Property name=""UserID"" mappingName=""UserID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.User"" relatedForeignKey=""UserID"" isSerializationIgnore=""false"" />
    <Property name=""RoleID"" mappingName=""RoleID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.Role"" relatedForeignKey=""RoleID"" isSerializationIgnore=""false"" />
  </Properties>
</EntityConfiguration>")]
    public partial class UserRole : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _UserRoleEntityConfiguration;

        protected int _UserID;

        protected int _RoleID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.UserRole left, global::Rock.StaticEntities.UserRole right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.UserRole left, global::Rock.StaticEntities.UserRole right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public int RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                this.OnPropertyChanged("RoleID", this._RoleID, value);
                this._RoleID = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((UserRole._UserRoleEntityConfiguration == null))
            {
                UserRole._UserRoleEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.UserRole");
            }
            return UserRole._UserRoleEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._UserID,
                        this._RoleID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._UserID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._RoleID = reader.GetInt32(1);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._UserID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._RoleID = ((int)(row[1]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.UserRole).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((this.isAttached && ((global::Rock.StaticEntities.UserRole)(obj)).isAttached)
                        && (this.UserID == ((global::Rock.StaticEntities.UserRole)(obj)).UserID))
                        && (this.RoleID == ((global::Rock.StaticEntities.UserRole)(obj)).RoleID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _UserID = new Rock.Orm.Common.PropertyItem("UserID", "Rock.StaticEntities.UserRole");

            protected Rock.Orm.Common.PropertyItem _RoleID = new Rock.Orm.Common.PropertyItem("RoleID", "Rock.StaticEntities.UserRole");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem RoleID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RoleID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RoleID", _RoleID.EntityConfiguration, _RoleID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class RoleActionArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.RoleAction>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<EntityConfiguration xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""Rock.StaticEntities.RoleAction"" mappingName=""RoleAction"" isReadOnly=""false"" isBatchUpdate=""false"" isAutoPreLoad=""false"" batchSize=""10"" isRelation=""true"">
  <Properties>
    <Property name=""RoleID"" mappingName=""RoleID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.Role"" relatedForeignKey=""RoleID"" isSerializationIgnore=""false"" />
    <Property name=""ActionID"" mappingName=""ActionID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.Action"" relatedForeignKey=""ActionID"" isSerializationIgnore=""false"" />
  </Properties>
</EntityConfiguration>")]
    public partial class RoleAction : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _RoleActionEntityConfiguration;

        protected int _RoleID;

        protected int _ActionID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.RoleAction left, global::Rock.StaticEntities.RoleAction right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.RoleAction left, global::Rock.StaticEntities.RoleAction right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                this.OnPropertyChanged("RoleID", this._RoleID, value);
                this._RoleID = value;
            }
        }

        public int ActionID
        {
            get
            {
                return this._ActionID;
            }
            set
            {
                this.OnPropertyChanged("ActionID", this._ActionID, value);
                this._ActionID = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((RoleAction._RoleActionEntityConfiguration == null))
            {
                RoleAction._RoleActionEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.RoleAction");
            }
            return RoleAction._RoleActionEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._RoleID,
                        this._ActionID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._RoleID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ActionID = reader.GetInt32(1);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._RoleID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ActionID = ((int)(row[1]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.RoleAction).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((this.isAttached && ((global::Rock.StaticEntities.RoleAction)(obj)).isAttached)
                        && (this.RoleID == ((global::Rock.StaticEntities.RoleAction)(obj)).RoleID))
                        && (this.ActionID == ((global::Rock.StaticEntities.RoleAction)(obj)).ActionID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _RoleID = new Rock.Orm.Common.PropertyItem("RoleID", "Rock.StaticEntities.RoleAction");

            protected Rock.Orm.Common.PropertyItem _ActionID = new Rock.Orm.Common.PropertyItem("ActionID", "Rock.StaticEntities.RoleAction");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem RoleID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RoleID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RoleID", _RoleID.EntityConfiguration, _RoleID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActionID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionID", _ActionID.EntityConfiguration, _ActionID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class DepartmentArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Department>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Department\" mappingName=\"Department\" isReadOnly=\"false" +
    "\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">" +
    "\r\n  <Properties>\r\n    <Property name=\"DepartmentID\" mappingName=\"DepartmentID\" t" +
    "ype=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"DepartmentName\" mappingName=\"DepartmentName\" type=\"Syst" +
    "em.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarch" +
    "ar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fal" +
    "se\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" " +
    "mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "</Properties>\r\n</EntityConfiguration>")]
    public partial class Department : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _DepartmentEntityConfiguration;

        protected int _DepartmentID;

        protected string _DepartmentName;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Department left, global::Rock.StaticEntities.Department right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Department left, global::Rock.StaticEntities.Department right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                this.OnPropertyChanged("DepartmentID", this._DepartmentID, value);
                this._DepartmentID = value;
            }
        }

        public string DepartmentName
        {
            get
            {
                return this._DepartmentName;
            }
            set
            {
                this.OnPropertyChanged("DepartmentName", this._DepartmentName, value);
                this._DepartmentName = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Department._DepartmentEntityConfiguration == null))
            {
                Department._DepartmentEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Department");
            }
            return Department._DepartmentEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._DepartmentID,
                        this._DepartmentName,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._DepartmentID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._DepartmentName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Comment = reader.GetString(2);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._DepartmentID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._DepartmentName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Comment = ((string)(row[2]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Department).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Department)(obj)).isAttached)
                        && (this.DepartmentID == ((global::Rock.StaticEntities.Department)(obj)).DepartmentID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _DepartmentID = new Rock.Orm.Common.PropertyItem("DepartmentID", "Rock.StaticEntities.Department");

            protected Rock.Orm.Common.PropertyItem _DepartmentName = new Rock.Orm.Common.PropertyItem("DepartmentName", "Rock.StaticEntities.Department");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Department");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem DepartmentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DepartmentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DepartmentID", _DepartmentID.EntityConfiguration, _DepartmentID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DepartmentName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DepartmentName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DepartmentName", _DepartmentName.EntityConfiguration, _DepartmentName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class UserDepartmentArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.UserDepartment>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<EntityConfiguration xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""Rock.StaticEntities.UserDepartment"" mappingName=""UserDepartment"" isReadOnly=""false"" isBatchUpdate=""false"" isAutoPreLoad=""false"" batchSize=""10"" isRelation=""true"">
  <Properties>
    <Property name=""UserID"" mappingName=""UserID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.User"" relatedForeignKey=""UserID"" isSerializationIgnore=""false"" />
    <Property name=""DepartmentID"" mappingName=""DepartmentID"" type=""System.Int32"" mappingColumnType=""System.Int32"" isInherited=""false"" sqlType=""int"" isContained=""false"" isPrimaryKey=""true"" isQuery=""false"" isReadOnly=""false"" isFriendKey=""false"" isIndexProperty=""false"" isIndexPropertyDesc=""false"" isLazyLoad=""false"" isNotNull=""false"" isRelationKey=""true"" relatedType=""Rock.StaticEntities.Department"" relatedForeignKey=""DepartmentID"" isSerializationIgnore=""false"" />
  </Properties>
</EntityConfiguration>")]
    public partial class UserDepartment : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _UserDepartmentEntityConfiguration;

        protected int _UserID;

        protected int _DepartmentID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.UserDepartment left, global::Rock.StaticEntities.UserDepartment right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.UserDepartment left, global::Rock.StaticEntities.UserDepartment right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public int DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                this.OnPropertyChanged("DepartmentID", this._DepartmentID, value);
                this._DepartmentID = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((UserDepartment._UserDepartmentEntityConfiguration == null))
            {
                UserDepartment._UserDepartmentEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.UserDepartment");
            }
            return UserDepartment._UserDepartmentEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._UserID,
                        this._DepartmentID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._UserID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._DepartmentID = reader.GetInt32(1);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._UserID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._DepartmentID = ((int)(row[1]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.UserDepartment).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((this.isAttached && ((global::Rock.StaticEntities.UserDepartment)(obj)).isAttached)
                        && (this.UserID == ((global::Rock.StaticEntities.UserDepartment)(obj)).UserID))
                        && (this.DepartmentID == ((global::Rock.StaticEntities.UserDepartment)(obj)).DepartmentID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _UserID = new Rock.Orm.Common.PropertyItem("UserID", "Rock.StaticEntities.UserDepartment");

            protected Rock.Orm.Common.PropertyItem _DepartmentID = new Rock.Orm.Common.PropertyItem("DepartmentID", "Rock.StaticEntities.UserDepartment");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DepartmentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DepartmentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DepartmentID", _DepartmentID.EntityConfiguration, _DepartmentID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class DepartmentEmployeeArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.DepartmentEmployee>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.DepartmentEmployee\" mappingName=\"DepartmentEmployee\" i" +
    "sReadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isR" +
    "elation=\"false\">\r\n  <Properties>\r\n    <Property name=\"DepartmentEmployeeID\" map" +
    "pingName=\"DepartmentEmployeeID\" type=\"System.Int32\" mappingColumnType=\"System.In" +
    "t32\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isContained=\"false" +
    "\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name" +
    "=\"DepartmentID\" mappingName=\"DepartmentID\" type=\"System.Int32\" mappingColumnType" +
    "=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"EmployeeID\" mappingName=\"EmployeeID\" type=\"System.Int32\" mappingCo" +
    "lumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class DepartmentEmployee : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _DepartmentEmployeeEntityConfiguration;

        protected int _DepartmentEmployeeID;

        protected int _DepartmentID;

        protected int _EmployeeID;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.DepartmentEmployee left, global::Rock.StaticEntities.DepartmentEmployee right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.DepartmentEmployee left, global::Rock.StaticEntities.DepartmentEmployee right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int DepartmentEmployeeID
        {
            get
            {
                return this._DepartmentEmployeeID;
            }
            set
            {
                this.OnPropertyChanged("DepartmentEmployeeID", this._DepartmentEmployeeID, value);
                this._DepartmentEmployeeID = value;
            }
        }

        public int DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                this.OnPropertyChanged("DepartmentID", this._DepartmentID, value);
                this._DepartmentID = value;
            }
        }

        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                this.OnPropertyChanged("EmployeeID", this._EmployeeID, value);
                this._EmployeeID = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((DepartmentEmployee._DepartmentEmployeeEntityConfiguration == null))
            {
                DepartmentEmployee._DepartmentEmployeeEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.DepartmentEmployee");
            }
            return DepartmentEmployee._DepartmentEmployeeEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._DepartmentEmployeeID,
                        this._DepartmentID,
                        this._EmployeeID};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._DepartmentEmployeeID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._DepartmentID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._EmployeeID = reader.GetInt32(2);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._DepartmentEmployeeID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._DepartmentID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._EmployeeID = ((int)(row[2]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.DepartmentEmployee).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.DepartmentEmployee)(obj)).isAttached)
                        && (this.DepartmentEmployeeID == ((global::Rock.StaticEntities.DepartmentEmployee)(obj)).DepartmentEmployeeID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _DepartmentEmployeeID = new Rock.Orm.Common.PropertyItem("DepartmentEmployeeID", "Rock.StaticEntities.DepartmentEmployee");

            protected Rock.Orm.Common.PropertyItem _DepartmentID = new Rock.Orm.Common.PropertyItem("DepartmentID", "Rock.StaticEntities.DepartmentEmployee");

            protected Rock.Orm.Common.PropertyItem _EmployeeID = new Rock.Orm.Common.PropertyItem("EmployeeID", "Rock.StaticEntities.DepartmentEmployee");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem DepartmentEmployeeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DepartmentEmployeeID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DepartmentEmployeeID", _DepartmentEmployeeID.EntityConfiguration, _DepartmentEmployeeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DepartmentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DepartmentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DepartmentID", _DepartmentID.EntityConfiguration, _DepartmentID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EmployeeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EmployeeID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EmployeeID", _EmployeeID.EntityConfiguration, _EmployeeID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
#endregion 权限部分
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#region 通用部分
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class MenuArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Menu>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Menu\" mappingName=\"Menu\" isReadOnly=\"false\" isBatchUpd" +
    "ate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Propert" +
    "ies>\r\n    <Property name=\"MenuID\" mappingName=\"MenuID\" type=\"System.Int32\" mapp" +
    "ingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"f" +
    "alse\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"MenuName\" mappingName=\"MenuName\" type=\"System.String\" " +
    "mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(200\" isC" +
    "ompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isR" +
    "eadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
    "\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n    <Property name=\"CommandText\" mappingName=\"CommandText\" " +
    "type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlTy" +
    "pe=\"nvarchar(MAX\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false" +
    "\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=" +
    "\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"HiddenNoRight\" ma" +
    "ppingName=\"HiddenNoRight\" type=\"System.Boolean\" mappingColumnType=\"System.Boolea" +
    "n\" isInherited=\"false\" sqlType=\"bit\" isCompoundUnit=\"false\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tr" +
    "ue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"Grades\" mappingName=\"Grades\" type=\"System.Int32\" mappingColumnType=\"System.Int3" +
    "2\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tr" +
    "ue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"ParentID\" mappingName=\"ParentID\" type=\"System.Nullable`1[System.Int32]\" mapping" +
    "ColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" i" +
    "sCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" i" +
    "sReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
    "c=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializa" +
    "tionIgnore=\"false\" />\r\n    <Property name=\"ActionID\" mappingName=\"ActionID\" typ" +
    "e=\"System.Nullable`1[System.Int32]\" mappingColumnType=\"System.Nullable`1[System." +
    "Int32]\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Icon\" mappingName=\"Icon\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(150\" isCompoundUnit=\"false\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"ActionType\" mappingName=\"ActionType\" type=\"System.String\" mapping" +
    "ColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCompoundU" +
    "nit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=" +
    "\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.St" +
    "ring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50" +
    "0\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fals" +
    "e\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeria" +
    "lizationIgnore=\"false\" />\r\n    <Property name=\"DisplayOrder\" mappingName=\"Displ" +
    "ayOrder\" type=\"System.Nullable`1[System.Int32]\" mappingColumnType=\"System.Nullab" +
    "le`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "</Properties>\r\n</EntityConfiguration>")]
    public partial class Menu : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _MenuEntityConfiguration;

        protected int _MenuID;

        protected string _MenuName;

        protected string _CommandText;

        protected bool _HiddenNoRight;

        protected int _Grades;

        protected System.Int32? _ParentID;

        protected System.Int32? _ActionID;

        protected string _Icon;

        protected string _ActionType;

        protected string _Comment;

        protected System.Int32? _DisplayOrder;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(Rock.StaticEntities.Menu left, Rock.StaticEntities.Menu right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(Rock.StaticEntities.Menu left, Rock.StaticEntities.Menu right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int MenuID
        {
            get
            {
                return this._MenuID;
            }
            set
            {
                this.OnPropertyChanged("MenuID", this._MenuID, value);
                this._MenuID = value;
            }
        }

        public string MenuName
        {
            get
            {
                return this._MenuName;
            }
            set
            {
                this.OnPropertyChanged("MenuName", this._MenuName, value);
                this._MenuName = value;
            }
        }

        public string CommandText
        {
            get
            {
                return this._CommandText;
            }
            set
            {
                this.OnPropertyChanged("CommandText", this._CommandText, value);
                this._CommandText = value;
            }
        }

        public bool HiddenNoRight
        {
            get
            {
                return this._HiddenNoRight;
            }
            set
            {
                this.OnPropertyChanged("HiddenNoRight", this._HiddenNoRight, value);
                this._HiddenNoRight = value;
            }
        }

        public int Grades
        {
            get
            {
                return this._Grades;
            }
            set
            {
                this.OnPropertyChanged("Grades", this._Grades, value);
                this._Grades = value;
            }
        }

        public System.Int32? ParentID
        {
            get
            {
                return this._ParentID;
            }
            set
            {
                this.OnPropertyChanged("ParentID", this._ParentID, value);
                this._ParentID = value;
            }
        }

        public System.Int32? ActionID
        {
            get
            {
                return this._ActionID;
            }
            set
            {
                this.OnPropertyChanged("ActionID", this._ActionID, value);
                this._ActionID = value;
            }
        }

        public string Icon
        {
            get
            {
                return this._Icon;
            }
            set
            {
                this.OnPropertyChanged("Icon", this._Icon, value);
                this._Icon = value;
            }
        }

        public string ActionType
        {
            get
            {
                return this._ActionType;
            }
            set
            {
                this.OnPropertyChanged("ActionType", this._ActionType, value);
                this._ActionType = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public System.Int32? DisplayOrder
        {
            get
            {
                return this._DisplayOrder;
            }
            set
            {
                this.OnPropertyChanged("DisplayOrder", this._DisplayOrder, value);
                this._DisplayOrder = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Menu._MenuEntityConfiguration == null))
            {
                Menu._MenuEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Menu");
            }
            return Menu._MenuEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._MenuID,
                        this._MenuName,
                        this._CommandText,
                        this._HiddenNoRight,
                        this._Grades,
                        this._ParentID,
                        this._ActionID,
                        this._Icon,
                        this._ActionType,
                        this._Comment,
                        this._DisplayOrder};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._MenuID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._MenuName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CommandText = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._HiddenNoRight = reader.GetBoolean(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Grades = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ParentID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ActionID = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Icon = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._ActionType = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Comment = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._DisplayOrder = reader.GetInt32(10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._MenuID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._MenuName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CommandText = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._HiddenNoRight = ((bool)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Grades = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ParentID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ActionID = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Icon = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._ActionType = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Comment = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._DisplayOrder = ((System.Nullable<int>)(row[10]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(Rock.StaticEntities.Menu).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((Rock.StaticEntities.Menu)(obj)).isAttached)
                        && (this.MenuID == ((Rock.StaticEntities.Menu)(obj)).MenuID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _MenuID = new Rock.Orm.Common.PropertyItem("MenuID", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _MenuName = new Rock.Orm.Common.PropertyItem("MenuName", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _CommandText = new Rock.Orm.Common.PropertyItem("CommandText", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _HiddenNoRight = new Rock.Orm.Common.PropertyItem("HiddenNoRight", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _Grades = new Rock.Orm.Common.PropertyItem("Grades", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _ParentID = new Rock.Orm.Common.PropertyItem("ParentID", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _ActionID = new Rock.Orm.Common.PropertyItem("ActionID", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _Icon = new Rock.Orm.Common.PropertyItem("Icon", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _ActionType = new Rock.Orm.Common.PropertyItem("ActionType", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Menu");

            protected Rock.Orm.Common.PropertyItem _DisplayOrder = new Rock.Orm.Common.PropertyItem("DisplayOrder", "Rock.StaticEntities.Menu");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem MenuID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MenuID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MenuID", _MenuID.EntityConfiguration, _MenuID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MenuName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MenuName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MenuName", _MenuName.EntityConfiguration, _MenuName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CommandText
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CommandText;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CommandText", _CommandText.EntityConfiguration, _CommandText.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem HiddenNoRight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HiddenNoRight;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("HiddenNoRight", _HiddenNoRight.EntityConfiguration, _HiddenNoRight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Grades
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Grades;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Grades", _Grades.EntityConfiguration, _Grades.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ParentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ParentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ParentID", _ParentID.EntityConfiguration, _ParentID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActionID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionID", _ActionID.EntityConfiguration, _ActionID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Icon
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Icon;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Icon", _Icon.EntityConfiguration, _Icon.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActionType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActionType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActionType", _ActionType.EntityConfiguration, _ActionType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DisplayOrder
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DisplayOrder;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DisplayOrder", _DisplayOrder.EntityConfiguration, _DisplayOrder.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ReferArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Refer>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Refer\" mappingName=\"Refer\" isReadOnly=\"false\" isBatchU" +
    "pdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Prope" +
    "rties>\r\n    <Property name=\"ReferID\" mappingName=\"ReferID\" type=\"System.Int32\" " +
    "mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCompoundUni" +
    "t=\"false\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"ReferName\" mappingName=\"ReferName\" type=\"System.St" +
    "ring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50" +
    "\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerial" +
    "izationIgnore=\"false\" />\r\n    <Property name=\"ReferNo\" mappingName=\"ReferNo\" ty" +
    "pe=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType" +
    "=\"nvarchar(50\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" i" +
    "sQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" is" +
    "IndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fa" +
    "lse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ReferType\" mappingNa" +
    "me=\"ReferType\" type=\"System.String\" mappingColumnType=\"System.String\" isInherite" +
    "d=\"false\" sqlType=\"nvarchar(50\" isCompoundUnit=\"false\" isContained=\"false\" isPri" +
    "maryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Rest" +
    "rain\" mappingName=\"Restrain\" type=\"System.String\" mappingColumnType=\"System.Stri" +
    "ng\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCompoundUnit=\"false\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"ParentID\" mappingName=\"ParentID\" type=\"System.Nullable`1[System.Int32" +
    "]\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlTy" +
    "pe=\"int\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" i" +
    "sSerializationIgnore=\"false\" />\r\n    <Property name=\"IsAvailable\" mappingName=\"" +
    "IsAvailable\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInherite" +
    "d=\"false\" sqlType=\"bit\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=" +
    "\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelatio" +
    "nKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Order\" mappi" +
    "ngName=\"Order\" type=\"System.Nullable`1[System.Int32]\" mappingColumnType=\"System." +
    "Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"fals" +
    "e\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" i" +
    "sFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoa" +
    "d=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" " +
    "/>\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isComp" +
    "oundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRead" +
    "Only=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationI" +
    "gnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Refer : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ReferEntityConfiguration;

        protected int _ReferID;

        protected string _ReferName;

        protected string _ReferNo;

        protected string _ReferType;

        protected string _Restrain;

        protected System.Int32? _ParentID;

        protected bool _IsAvailable;

        protected System.Int32? _Order;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(Rock.StaticEntities.Refer left, Rock.StaticEntities.Refer right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(Rock.StaticEntities.Refer left, Rock.StaticEntities.Refer right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ReferID
        {
            get
            {
                return this._ReferID;
            }
            set
            {
                this.OnPropertyChanged("ReferID", this._ReferID, value);
                this._ReferID = value;
            }
        }

        public string ReferName
        {
            get
            {
                return this._ReferName;
            }
            set
            {
                this.OnPropertyChanged("ReferName", this._ReferName, value);
                this._ReferName = value;
            }
        }

        public string ReferNo
        {
            get
            {
                return this._ReferNo;
            }
            set
            {
                this.OnPropertyChanged("ReferNo", this._ReferNo, value);
                this._ReferNo = value;
            }
        }

        public string ReferType
        {
            get
            {
                return this._ReferType;
            }
            set
            {
                this.OnPropertyChanged("ReferType", this._ReferType, value);
                this._ReferType = value;
            }
        }

        public string Restrain
        {
            get
            {
                return this._Restrain;
            }
            set
            {
                this.OnPropertyChanged("Restrain", this._Restrain, value);
                this._Restrain = value;
            }
        }

        public System.Int32? ParentID
        {
            get
            {
                return this._ParentID;
            }
            set
            {
                this.OnPropertyChanged("ParentID", this._ParentID, value);
                this._ParentID = value;
            }
        }

        public bool IsAvailable
        {
            get
            {
                return this._IsAvailable;
            }
            set
            {
                this.OnPropertyChanged("IsAvailable", this._IsAvailable, value);
                this._IsAvailable = value;
            }
        }

        public System.Int32? Order
        {
            get
            {
                return this._Order;
            }
            set
            {
                this.OnPropertyChanged("Order", this._Order, value);
                this._Order = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Refer._ReferEntityConfiguration == null))
            {
                Refer._ReferEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Refer");
            }
            return Refer._ReferEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ReferID,
                        this._ReferName,
                        this._ReferNo,
                        this._ReferType,
                        this._Restrain,
                        this._ParentID,
                        this._IsAvailable,
                        this._Order,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ReferID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ReferName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ReferNo = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ReferType = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Restrain = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ParentID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._IsAvailable = reader.GetBoolean(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Order = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Comment = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ReferID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ReferName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ReferNo = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ReferType = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Restrain = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ParentID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._IsAvailable = ((bool)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Order = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Comment = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(Rock.StaticEntities.Refer).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((Rock.StaticEntities.Refer)(obj)).isAttached)
                        && (this.ReferID == ((Rock.StaticEntities.Refer)(obj)).ReferID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ReferID = new Rock.Orm.Common.PropertyItem("ReferID", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _ReferName = new Rock.Orm.Common.PropertyItem("ReferName", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _ReferNo = new Rock.Orm.Common.PropertyItem("ReferNo", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _ReferType = new Rock.Orm.Common.PropertyItem("ReferType", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _Restrain = new Rock.Orm.Common.PropertyItem("Restrain", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _ParentID = new Rock.Orm.Common.PropertyItem("ParentID", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _IsAvailable = new Rock.Orm.Common.PropertyItem("IsAvailable", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _Order = new Rock.Orm.Common.PropertyItem("Order", "Rock.StaticEntities.Refer");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Refer");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ReferID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReferID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReferID", _ReferID.EntityConfiguration, _ReferID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReferName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReferName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReferName", _ReferName.EntityConfiguration, _ReferName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReferNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReferNo;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReferNo", _ReferNo.EntityConfiguration, _ReferNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReferType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReferType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReferType", _ReferType.EntityConfiguration, _ReferType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Restrain
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Restrain;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Restrain", _Restrain.EntityConfiguration, _Restrain.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ParentID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ParentID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ParentID", _ParentID.EntityConfiguration, _ParentID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem IsAvailable
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsAvailable;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("IsAvailable", _IsAvailable.EntityConfiguration, _IsAvailable.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Order
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Order;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Order", _Order.EntityConfiguration, _Order.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class LogArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Log>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Log\" mappingName=\"Log\" isReadOnly=\"false\" isBatchUpdat" +
    "e=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Propertie" +
    "s>\r\n    <Property name=\"LogID\" mappingName=\"LogID\" type=\"System.Int32\" mappingC" +
    "olumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false" +
    "\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"LogName\" mappingName=\"LogName\" type=\"System.String\" mappin" +
    "gColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCompound" +
    "Unit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnor" +
    "e=\"false\" />\r\n    <Property name=\"LogType\" mappingName=\"LogType\" type=\"System.S" +
    "tring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(5" +
    "0\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fals" +
    "e\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerial" +
    "izationIgnore=\"false\" />\r\n    <Property name=\"ObjType\" mappingName=\"ObjType\" ty" +
    "pe=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType" +
    "=\"nvarchar(50\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" i" +
    "sQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" is" +
    "IndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fa" +
    "lse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ObjID\" mappingName=\"" +
    "ObjID\" type=\"System.Nullable`1[System.Int32]\" mappingColumnType=\"System.Nullable" +
    "`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isCompoundUnit=\"false\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColu" +
    "mnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isCompoundUnit" +
    "=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"f" +
    "alse\" />\r\n    <Property name=\"OperateTime\" mappingName=\"OperateTime\" type=\"Syst" +
    "em.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"da" +
    "tetime\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=" +
    "\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"OperaterID\" mappingName=\"Ope" +
    "raterID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false" +
    "\" sqlType=\"int\" isCompoundUnit=\"false\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"fa" +
    "lse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"OperaterName\" mappin" +
    "gName=\"OperaterName\" type=\"System.String\" mappingColumnType=\"System.String\" isIn" +
    "herited=\"false\" sqlType=\"nvarchar(50\" isCompoundUnit=\"false\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</" +
    "EntityConfiguration>")]
    public partial class Log : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _LogEntityConfiguration;

        protected int _LogID;

        protected string _LogName;

        protected string _LogType;

        protected string _ObjType;

        protected System.Int32? _ObjID;

        protected string _Comment;

        protected System.DateTime _OperateTime;

        protected int _OperaterID;

        protected string _OperaterName;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(Rock.StaticEntities.Log left, Rock.StaticEntities.Log right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(Rock.StaticEntities.Log left, Rock.StaticEntities.Log right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int LogID
        {
            get
            {
                return this._LogID;
            }
            set
            {
                this.OnPropertyChanged("LogID", this._LogID, value);
                this._LogID = value;
            }
        }

        public string LogName
        {
            get
            {
                return this._LogName;
            }
            set
            {
                this.OnPropertyChanged("LogName", this._LogName, value);
                this._LogName = value;
            }
        }

        public string LogType
        {
            get
            {
                return this._LogType;
            }
            set
            {
                this.OnPropertyChanged("LogType", this._LogType, value);
                this._LogType = value;
            }
        }

        public string ObjType
        {
            get
            {
                return this._ObjType;
            }
            set
            {
                this.OnPropertyChanged("ObjType", this._ObjType, value);
                this._ObjType = value;
            }
        }

        public System.Int32? ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public System.DateTime OperateTime
        {
            get
            {
                return this._OperateTime;
            }
            set
            {
                this.OnPropertyChanged("OperateTime", this._OperateTime, value);
                this._OperateTime = value;
            }
        }

        public int OperaterID
        {
            get
            {
                return this._OperaterID;
            }
            set
            {
                this.OnPropertyChanged("OperaterID", this._OperaterID, value);
                this._OperaterID = value;
            }
        }

        public string OperaterName
        {
            get
            {
                return this._OperaterName;
            }
            set
            {
                this.OnPropertyChanged("OperaterName", this._OperaterName, value);
                this._OperaterName = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Log._LogEntityConfiguration == null))
            {
                Log._LogEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Log");
            }
            return Log._LogEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._LogID,
                        this._LogName,
                        this._LogType,
                        this._ObjType,
                        this._ObjID,
                        this._Comment,
                        this._OperateTime,
                        this._OperaterID,
                        this._OperaterName};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._LogID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._LogName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._LogType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ObjType = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ObjID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Comment = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._OperateTime = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._OperaterID = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._OperaterName = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._LogID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._LogName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._LogType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ObjType = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ObjID = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Comment = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._OperateTime = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._OperaterID = ((int)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._OperaterName = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(Rock.StaticEntities.Log).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((Rock.StaticEntities.Log)(obj)).isAttached)
                        && (this.LogID == ((Rock.StaticEntities.Log)(obj)).LogID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _LogID = new Rock.Orm.Common.PropertyItem("LogID", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _LogName = new Rock.Orm.Common.PropertyItem("LogName", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _LogType = new Rock.Orm.Common.PropertyItem("LogType", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _ObjType = new Rock.Orm.Common.PropertyItem("ObjType", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _ObjID = new Rock.Orm.Common.PropertyItem("ObjID", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _OperateTime = new Rock.Orm.Common.PropertyItem("OperateTime", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _OperaterID = new Rock.Orm.Common.PropertyItem("OperaterID", "Rock.StaticEntities.Log");

            protected Rock.Orm.Common.PropertyItem _OperaterName = new Rock.Orm.Common.PropertyItem("OperaterName", "Rock.StaticEntities.Log");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem LogID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LogID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LogID", _LogID.EntityConfiguration, _LogID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LogName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LogName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LogName", _LogName.EntityConfiguration, _LogName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LogType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LogType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LogType", _LogType.EntityConfiguration, _LogType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ObjType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ObjType", _ObjType.EntityConfiguration, _ObjType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OperateTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperateTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OperateTime", _OperateTime.EntityConfiguration, _OperateTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OperaterID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperaterID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OperaterID", _OperaterID.EntityConfiguration, _OperaterID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OperaterName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperaterName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OperaterName", _OperaterName.EntityConfiguration, _OperaterName.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class UploadFileArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.UploadFile>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.UploadFile\" mappingName=\"UploadFile\" isReadOnly=\"false" +
    "\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">" +
    "\r\n  <Properties>\r\n    <Property name=\"UploadFileID\" mappingName=\"UploadFileID\" t" +
    "ype=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"LocalFileName\" mappingName=\"LocalFileName\" type=\"System" +
    ".String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar" +
    "(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"ServerFileName\" mappingName=\"ServerFileName\" type=\"Sys" +
    "tem.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarc" +
    "har(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fal" +
    "se\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLa" +
    "zyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"ServerFilePath\" mappingName=\"ServerFilePath\" type=\"" +
    "System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nv" +
    "archar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=" +
    "\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Uploader\" mappingName=\"Uploader\" type=\"System.S" +
    "tring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(5" +
    "0\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" i" +
    "sFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoa" +
    "d=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" " +
    "/>\r\n    <Property name=\"FileType\" mappingName=\"FileType\" type=\"System.String\" ma" +
    "ppingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"FileFormat\" mappingName=\"FileFormat\" type=\"System.String\" mapping" +
    "ColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"ObjectID\" mappingName=\"ObjectID\" type=\"System.Nullable`1[System.Int32]" +
    "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlTyp" +
    "e=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fal" +
    "se\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLa" +
    "zyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"UploadTime\" mappingName=\"UploadTime\" type=\"System.N" +
    "ullable`1[System.DateTime]\" mappingColumnType=\"System.Nullable`1[System.DateTime" +
    "]\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"fals" +
    "e\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"FileSize\" mapping" +
    "Name=\"FileSize\" type=\"System.String\" mappingColumnType=\"System.String\" isInherit" +
    "ed=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuer" +
    "y=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" " +
    "isSerializationIgnore=\"false\" />\r\n    <Property name=\"ObjectType\" mappingName=\"O" +
    "bjectType\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"f" +
    "alse\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fa" +
    "lse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
    "rtyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSer" +
    "ializationIgnore=\"false\" />\r\n    <Property name=\"Classify\" mappingName=\"Classify" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class UploadFile : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _UploadFileEntityConfiguration;

        protected int _UploadFileID;

        protected string _LocalFileName;

        protected string _ServerFileName;

        protected string _ServerFilePath;

        protected string _Uploader;

        protected string _FileType;

        protected string _FileFormat;

        protected global::System.Int32? _ObjectID;

        protected global::System.DateTime? _UploadTime;

        protected string _FileSize;

        protected string _ObjectType;

        protected string _Classify;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.UploadFile left, global::Rock.StaticEntities.UploadFile right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.UploadFile left, global::Rock.StaticEntities.UploadFile right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int UploadFileID
        {
            get
            {
                return this._UploadFileID;
            }
            set
            {
                this.OnPropertyChanged("UploadFileID", this._UploadFileID, value);
                this._UploadFileID = value;
            }
        }

        public string LocalFileName
        {
            get
            {
                return this._LocalFileName;
            }
            set
            {
                this.OnPropertyChanged("LocalFileName", this._LocalFileName, value);
                this._LocalFileName = value;
            }
        }

        public string ServerFileName
        {
            get
            {
                return this._ServerFileName;
            }
            set
            {
                this.OnPropertyChanged("ServerFileName", this._ServerFileName, value);
                this._ServerFileName = value;
            }
        }

        public string ServerFilePath
        {
            get
            {
                return this._ServerFilePath;
            }
            set
            {
                this.OnPropertyChanged("ServerFilePath", this._ServerFilePath, value);
                this._ServerFilePath = value;
            }
        }

        public string Uploader
        {
            get
            {
                return this._Uploader;
            }
            set
            {
                this.OnPropertyChanged("Uploader", this._Uploader, value);
                this._Uploader = value;
            }
        }

        public string FileType
        {
            get
            {
                return this._FileType;
            }
            set
            {
                this.OnPropertyChanged("FileType", this._FileType, value);
                this._FileType = value;
            }
        }

        public string FileFormat
        {
            get
            {
                return this._FileFormat;
            }
            set
            {
                this.OnPropertyChanged("FileFormat", this._FileFormat, value);
                this._FileFormat = value;
            }
        }

        public global::System.Int32? ObjectID
        {
            get
            {
                return this._ObjectID;
            }
            set
            {
                this.OnPropertyChanged("ObjectID", this._ObjectID, value);
                this._ObjectID = value;
            }
        }

        public global::System.DateTime? UploadTime
        {
            get
            {
                return this._UploadTime;
            }
            set
            {
                this.OnPropertyChanged("UploadTime", this._UploadTime, value);
                this._UploadTime = value;
            }
        }

        public string FileSize
        {
            get
            {
                return this._FileSize;
            }
            set
            {
                this.OnPropertyChanged("FileSize", this._FileSize, value);
                this._FileSize = value;
            }
        }

        public string ObjectType
        {
            get
            {
                return this._ObjectType;
            }
            set
            {
                this.OnPropertyChanged("ObjectType", this._ObjectType, value);
                this._ObjectType = value;
            }
        }

        public string Classify
        {
            get
            {
                return this._Classify;
            }
            set
            {
                this.OnPropertyChanged("Classify", this._Classify, value);
                this._Classify = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((UploadFile._UploadFileEntityConfiguration == null))
            {
                UploadFile._UploadFileEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.UploadFile");
            }
            return UploadFile._UploadFileEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._UploadFileID,
                        this._LocalFileName,
                        this._ServerFileName,
                        this._ServerFilePath,
                        this._Uploader,
                        this._FileType,
                        this._FileFormat,
                        this._ObjectID,
                        this._UploadTime,
                        this._FileSize,
                        this._ObjectType,
                        this._Classify};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._UploadFileID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._LocalFileName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ServerFileName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ServerFilePath = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Uploader = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._FileType = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._FileFormat = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ObjectID = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._UploadTime = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._FileSize = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._ObjectType = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Classify = reader.GetString(11);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._UploadFileID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._LocalFileName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ServerFileName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ServerFilePath = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Uploader = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._FileType = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._FileFormat = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ObjectID = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._UploadTime = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._FileSize = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._ObjectType = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Classify = ((string)(row[11]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.UploadFile).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.UploadFile)(obj)).isAttached)
                        && (this.UploadFileID == ((global::Rock.StaticEntities.UploadFile)(obj)).UploadFileID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _UploadFileID = new Rock.Orm.Common.PropertyItem("UploadFileID", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _LocalFileName = new Rock.Orm.Common.PropertyItem("LocalFileName", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _ServerFileName = new Rock.Orm.Common.PropertyItem("ServerFileName", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _ServerFilePath = new Rock.Orm.Common.PropertyItem("ServerFilePath", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _Uploader = new Rock.Orm.Common.PropertyItem("Uploader", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _FileType = new Rock.Orm.Common.PropertyItem("FileType", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _FileFormat = new Rock.Orm.Common.PropertyItem("FileFormat", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _ObjectID = new Rock.Orm.Common.PropertyItem("ObjectID", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _UploadTime = new Rock.Orm.Common.PropertyItem("UploadTime", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _FileSize = new Rock.Orm.Common.PropertyItem("FileSize", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _ObjectType = new Rock.Orm.Common.PropertyItem("ObjectType", "Rock.StaticEntities.UploadFile");

            protected Rock.Orm.Common.PropertyItem _Classify = new Rock.Orm.Common.PropertyItem("Classify", "Rock.StaticEntities.UploadFile");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem UploadFileID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UploadFileID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UploadFileID", _UploadFileID.EntityConfiguration, _UploadFileID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LocalFileName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LocalFileName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LocalFileName", _LocalFileName.EntityConfiguration, _LocalFileName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ServerFileName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ServerFileName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ServerFileName", _ServerFileName.EntityConfiguration, _ServerFileName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ServerFilePath
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ServerFilePath;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ServerFilePath", _ServerFilePath.EntityConfiguration, _ServerFilePath.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Uploader
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Uploader;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Uploader", _Uploader.EntityConfiguration, _Uploader.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem FileType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FileType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("FileType", _FileType.EntityConfiguration, _FileType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem FileFormat
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FileFormat;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("FileFormat", _FileFormat.EntityConfiguration, _FileFormat.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ObjectID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjectID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ObjectID", _ObjectID.EntityConfiguration, _ObjectID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem UploadTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UploadTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UploadTime", _UploadTime.EntityConfiguration, _UploadTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem FileSize
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FileSize;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("FileSize", _FileSize.EntityConfiguration, _FileSize.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ObjectType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjectType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ObjectType", _ObjectType.EntityConfiguration, _ObjectType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Classify
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Classify;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Classify", _Classify.EntityConfiguration, _Classify.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
#endregion 通用部分

#region 业务部分
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class MaterialArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Material>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Material\" mappingName=\"Material\" isReadOnly=\"false\" is" +
    "BatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  " +
    "<Properties>\r\n    <Property name=\"MaterialID\" mappingName=\"MaterialID\" type=\"Sys" +
    "tem.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"MaterialCode\" mappingName=\"MaterialCode\" type=\"System.String\" m" +
    "appingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"MaterialName\" mappingName=\"MaterialName\" type=\"System.String\" ma" +
    "ppingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Specification\" mappingName=\"Specification\" type=\"System.String\" ma" +
    "ppingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(150\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"Description\" mappingName=\"Description\" type=\"System.String\" mapp" +
    "ingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(150\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Measure\" mappingName=\"Measure\" type=\"System.String\" mappingColumnT" +
    "ype=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property nam" +
    "e=\"Available\" mappingName=\"Available\" type=\"System.Boolean\" mappingColumnType=\"S" +
    "ystem.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKe" +
    "y=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelat" +
    "ionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ForSale\" ma" +
    "ppingName=\"ForSale\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isI" +
    "nherited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=" +
    "\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"ForPurchase\" mappingName=\"For" +
    "Purchase\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInherited=\"" +
    "false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" is" +
    "ReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
    "=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializati" +
    "onIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"Sy" +
    "stem.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvar" +
    "char(150\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"f" +
    "alse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
    "LazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"" +
    "false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Material : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _MaterialEntityConfiguration;

        protected int _MaterialID;

        protected string _MaterialCode;

        protected string _MaterialName;

        protected string _Specification;

        protected string _Description;

        protected string _Measure;

        protected bool _Available;

        protected bool _ForSale;

        protected bool _ForPurchase;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Material left, global::Rock.StaticEntities.Material right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Material left, global::Rock.StaticEntities.Material right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int MaterialID
        {
            get
            {
                return this._MaterialID;
            }
            set
            {
                this.OnPropertyChanged("MaterialID", this._MaterialID, value);
                this._MaterialID = value;
            }
        }

        public string MaterialCode
        {
            get
            {
                return this._MaterialCode;
            }
            set
            {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }

        public string MaterialName
        {
            get
            {
                return this._MaterialName;
            }
            set
            {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }

        public string Specification
        {
            get
            {
                return this._Specification;
            }
            set
            {
                this.OnPropertyChanged("Specification", this._Specification, value);
                this._Specification = value;
            }
        }

        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                this.OnPropertyChanged("Description", this._Description, value);
                this._Description = value;
            }
        }

        public string Measure
        {
            get
            {
                return this._Measure;
            }
            set
            {
                this.OnPropertyChanged("Measure", this._Measure, value);
                this._Measure = value;
            }
        }

        public bool Available
        {
            get
            {
                return this._Available;
            }
            set
            {
                this.OnPropertyChanged("Available", this._Available, value);
                this._Available = value;
            }
        }

        public bool ForSale
        {
            get
            {
                return this._ForSale;
            }
            set
            {
                this.OnPropertyChanged("ForSale", this._ForSale, value);
                this._ForSale = value;
            }
        }

        public bool ForPurchase
        {
            get
            {
                return this._ForPurchase;
            }
            set
            {
                this.OnPropertyChanged("ForPurchase", this._ForPurchase, value);
                this._ForPurchase = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Material._MaterialEntityConfiguration == null))
            {
                Material._MaterialEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Material");
            }
            return Material._MaterialEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._MaterialID,
                        this._MaterialCode,
                        this._MaterialName,
                        this._Specification,
                        this._Description,
                        this._Measure,
                        this._Available,
                        this._ForSale,
                        this._ForPurchase,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._MaterialID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._MaterialCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._MaterialName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Specification = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Description = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Measure = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Available = reader.GetBoolean(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ForSale = reader.GetBoolean(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._ForPurchase = reader.GetBoolean(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Comment = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._MaterialID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._MaterialCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._MaterialName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Specification = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Description = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Measure = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Available = ((bool)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ForSale = ((bool)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._ForPurchase = ((bool)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Comment = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Material).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Material)(obj)).isAttached)
                        && (this.MaterialID == ((global::Rock.StaticEntities.Material)(obj)).MaterialID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("MaterialID", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _MaterialCode = new Rock.Orm.Common.PropertyItem("MaterialCode", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _MaterialName = new Rock.Orm.Common.PropertyItem("MaterialName", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _Specification = new Rock.Orm.Common.PropertyItem("Specification", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _Description = new Rock.Orm.Common.PropertyItem("Description", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _Measure = new Rock.Orm.Common.PropertyItem("Measure", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _Available = new Rock.Orm.Common.PropertyItem("Available", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _ForSale = new Rock.Orm.Common.PropertyItem("ForSale", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _ForPurchase = new Rock.Orm.Common.PropertyItem("ForPurchase", "Rock.StaticEntities.Material");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Material");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialID", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialCode;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Specification
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Specification;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Specification", _Specification.EntityConfiguration, _Specification.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Description
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Description;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Description", _Description.EntityConfiguration, _Description.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Measure
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Measure;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Measure", _Measure.EntityConfiguration, _Measure.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Available
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Available;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Available", _Available.EntityConfiguration, _Available.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ForSale
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ForSale;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ForSale", _ForSale.EntityConfiguration, _ForSale.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ForPurchase
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ForPurchase;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ForPurchase", _ForPurchase.EntityConfiguration, _ForPurchase.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Customer>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Customer\" mappingName=\"Customer\" isReadOnly=\"false\" is" +
    "BatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  " +
    "<Properties>\r\n    <Property name=\"CustomerID\" mappingName=\"CustomerID\" type=\"Sys" +
    "tem.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"CustomerCode\" mappingName=\"CustomerCode\" type=\"System.String\" m" +
    "appingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"CustomerName\" mappingName=\"CustomerName\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Category\" mappingName=\"Category\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"Charge\" mappingName=\"Charge\" type=\"System.String\" mappingColumnType=\"System" +
    ".String\" isInherited=\"false\" sqlType=\"nvarchar(150\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isR" +
    "elationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Subordi" +
    "nate\" mappingName=\"Subordinate\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKe" +
    "y=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Address\" m" +
    "appingName=\"Address\" type=\"System.String\" mappingColumnType=\"System.String\" isIn" +
    "herited=\"false\" sqlType=\"nvarchar(150\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Telephone\" mappingNa" +
    "me=\"Telephone\" type=\"System.String\" mappingColumnType=\"System.String\" isInherite" +
    "d=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" i" +
    "sSerializationIgnore=\"false\" />\r\n    <Property name=\"Fax\" mappingName=\"Fax\" type" +
    "=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"" +
    "nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnor" +
    "e=\"false\" />\r\n    <Property name=\"Nature\" mappingName=\"Nature\" type=\"System.Stri" +
    "ng\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Bank\" mappingName=\"Bank\" type=\"System.String\" mappingColumn" +
    "Type=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(60\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"PostCode\" mappingName=\"PostCode\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Scope" +
    "\" mappingName=\"Scope\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"BusinessArea\" mappin" +
    "gName=\"BusinessArea\" type=\"System.String\" mappingColumnType=\"System.String\" isIn" +
    "herited=\"false\" sqlType=\"nvarchar(150\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"BankAccount\" mapping" +
    "Name=\"BankAccount\" type=\"System.String\" mappingColumnType=\"System.String\" isInhe" +
    "rited=\"false\" sqlType=\"nvarchar(60\" isContained=\"false\" isPrimaryKey=\"false\" isQ" +
    "uery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fals" +
    "e\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ApprovalBusinessLicense" +
    "\" mappingName=\"ApprovalBusinessLicense\" type=\"System.String\" mappingColumnType=\"" +
    "System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isP" +
    "rimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false" +
    "\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Li" +
    "censeNumber\" mappingName=\"LicenseNumber\" type=\"System.String\" mappingColumnType=" +
    "\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" is" +
    "PrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInde" +
    "xProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fals" +
    "e\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"L" +
    "egalPerson\" mappingName=\"LegalPerson\" type=\"System.String\" mappingColumnType=\"Sy" +
    "stem.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPri" +
    "maryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" " +
    "isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Lega" +
    "lPersonTelephone\" mappingName=\"LegalPersonTelephone\" type=\"System.String\" mappin" +
    "gColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prop" +
    "erty name=\"Head\" mappingName=\"Head\" type=\"System.String\" mappingColumnType=\"Syst" +
    "em.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrima" +
    "ryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProp" +
    "erty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" is" +
    "RelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"HeadTe" +
    "lephone\" mappingName=\"HeadTelephone\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Opera" +
    "tor\" mappingName=\"Operator\" type=\"System.String\" mappingColumnType=\"System.Strin" +
    "g\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"f" +
    "alse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelation" +
    "Key=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"OperatorTeleph" +
    "one\" mappingName=\"OperatorTelephone\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"KeepP" +
    "romises\" mappingName=\"KeepPromises\" type=\"System.Nullable`1[System.Boolean]\" map" +
    "pingColumnType=\"System.Nullable`1[System.Boolean]\" isInherited=\"false\" sqlType=\"" +
    "bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"Transport\" mappingName=\"Transport\" type=\"System.String" +
    "\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" is" +
    "Contained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrie" +
    "ndKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fa" +
    "lse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n " +
    "   <Property name=\"Destination\" mappingName=\"Destination\" type=\"System.String\" m" +
    "appingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"AssetValue\" mappingName=\"AssetValue\" type=\"System.String\" mappin" +
    "gColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prop" +
    "erty name=\"EstablishTime\" mappingName=\"EstablishTime\" type=\"System.Nullable`1[Sy" +
    "stem.DateTime]\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" isInherit" +
    "ed=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"" +
    "false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"ContractUser\" mappingName=\"Co" +
    "ntractUser\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInherited" +
    "=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" " +
    "isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
    "sc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializa" +
    "tionIgnore=\"false\" />\r\n    <Property name=\"BasicSituation\" mappingName=\"BasicSit" +
    "uation\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"fals" +
    "e\" sqlType=\"nvarchar(200\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fals" +
    "e\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeria" +
    "lizationIgnore=\"false\" />\r\n    <Property name=\"CurrentBalance\" mappingName=\"Curr" +
    "entBalance\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.N" +
    "ullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prop" +
    "erty name=\"Available\" mappingName=\"Available\" type=\"System.Boolean\" mappingColum" +
    "nType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isP" +
    "rimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"For" +
    "Purchase\" mappingName=\"ForPurchase\" type=\"System.Boolean\" mappingColumnType=\"Sys" +
    "tem.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=" +
    "\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelatio" +
    "nKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ForSale\" mapp" +
    "ingName=\"ForSale\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInh" +
    "erited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"f" +
    "alse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
    "ertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSer" +
    "ializationIgnore=\"false\" />\r\n    <Property name=\"SearchCode\" mappingName=\"Search" +
    "Code\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\"" +
    " sqlType=\"nvarchar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type" +
    "=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"" +
    "nvarchar(150\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnl" +
    "y=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgno" +
    "re=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Customer : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerEntityConfiguration;

        protected int _CustomerID;

        protected string _CustomerCode;

        protected string _CustomerName;

        protected string _Category;

        protected string _Charge;

        protected string _Subordinate;

        protected string _Address;

        protected string _Telephone;

        protected string _Fax;

        protected string _Nature;

        protected string _Bank;

        protected string _PostCode;

        protected string _Scope;

        protected string _BusinessArea;

        protected string _BankAccount;

        protected string _ApprovalBusinessLicense;

        protected string _LicenseNumber;

        protected string _LegalPerson;

        protected string _LegalPersonTelephone;

        protected string _Head;

        protected string _HeadTelephone;

        protected string _Operator;

        protected string _OperatorTelephone;

        protected global::System.Boolean? _KeepPromises;

        protected string _Transport;

        protected string _Destination;

        protected string _AssetValue;

        protected global::System.DateTime? _EstablishTime;

        protected bool _ContractUser;

        protected string _BasicSituation;

        protected global::System.Decimal? _CurrentBalance;

        protected bool _Available;

        protected bool _ForPurchase;

        protected bool _ForSale;

        protected string _SearchCode;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Customer left, global::Rock.StaticEntities.Customer right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Customer left, global::Rock.StaticEntities.Customer right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnPropertyChanged("CustomerID", this._CustomerID, value);
                this._CustomerID = value;
            }
        }

        public string CustomerCode
        {
            get
            {
                return this._CustomerCode;
            }
            set
            {
                this.OnPropertyChanged("CustomerCode", this._CustomerCode, value);
                this._CustomerCode = value;
            }
        }

        public string CustomerName
        {
            get
            {
                return this._CustomerName;
            }
            set
            {
                this.OnPropertyChanged("CustomerName", this._CustomerName, value);
                this._CustomerName = value;
            }
        }

        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                this.OnPropertyChanged("Category", this._Category, value);
                this._Category = value;
            }
        }

        public string Charge
        {
            get
            {
                return this._Charge;
            }
            set
            {
                this.OnPropertyChanged("Charge", this._Charge, value);
                this._Charge = value;
            }
        }

        public string Subordinate
        {
            get
            {
                return this._Subordinate;
            }
            set
            {
                this.OnPropertyChanged("Subordinate", this._Subordinate, value);
                this._Subordinate = value;
            }
        }

        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnPropertyChanged("Address", this._Address, value);
                this._Address = value;
            }
        }

        public string Telephone
        {
            get
            {
                return this._Telephone;
            }
            set
            {
                this.OnPropertyChanged("Telephone", this._Telephone, value);
                this._Telephone = value;
            }
        }

        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                this.OnPropertyChanged("Fax", this._Fax, value);
                this._Fax = value;
            }
        }

        public string Nature
        {
            get
            {
                return this._Nature;
            }
            set
            {
                this.OnPropertyChanged("Nature", this._Nature, value);
                this._Nature = value;
            }
        }

        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                this.OnPropertyChanged("Bank", this._Bank, value);
                this._Bank = value;
            }
        }

        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                this.OnPropertyChanged("PostCode", this._PostCode, value);
                this._PostCode = value;
            }
        }

        public string Scope
        {
            get
            {
                return this._Scope;
            }
            set
            {
                this.OnPropertyChanged("Scope", this._Scope, value);
                this._Scope = value;
            }
        }

        public string BusinessArea
        {
            get
            {
                return this._BusinessArea;
            }
            set
            {
                this.OnPropertyChanged("BusinessArea", this._BusinessArea, value);
                this._BusinessArea = value;
            }
        }

        public string BankAccount
        {
            get
            {
                return this._BankAccount;
            }
            set
            {
                this.OnPropertyChanged("BankAccount", this._BankAccount, value);
                this._BankAccount = value;
            }
        }

        public string ApprovalBusinessLicense
        {
            get
            {
                return this._ApprovalBusinessLicense;
            }
            set
            {
                this.OnPropertyChanged("ApprovalBusinessLicense", this._ApprovalBusinessLicense, value);
                this._ApprovalBusinessLicense = value;
            }
        }

        public string LicenseNumber
        {
            get
            {
                return this._LicenseNumber;
            }
            set
            {
                this.OnPropertyChanged("LicenseNumber", this._LicenseNumber, value);
                this._LicenseNumber = value;
            }
        }

        public string LegalPerson
        {
            get
            {
                return this._LegalPerson;
            }
            set
            {
                this.OnPropertyChanged("LegalPerson", this._LegalPerson, value);
                this._LegalPerson = value;
            }
        }

        public string LegalPersonTelephone
        {
            get
            {
                return this._LegalPersonTelephone;
            }
            set
            {
                this.OnPropertyChanged("LegalPersonTelephone", this._LegalPersonTelephone, value);
                this._LegalPersonTelephone = value;
            }
        }

        public string Head
        {
            get
            {
                return this._Head;
            }
            set
            {
                this.OnPropertyChanged("Head", this._Head, value);
                this._Head = value;
            }
        }

        public string HeadTelephone
        {
            get
            {
                return this._HeadTelephone;
            }
            set
            {
                this.OnPropertyChanged("HeadTelephone", this._HeadTelephone, value);
                this._HeadTelephone = value;
            }
        }

        public string Operator
        {
            get
            {
                return this._Operator;
            }
            set
            {
                this.OnPropertyChanged("Operator", this._Operator, value);
                this._Operator = value;
            }
        }

        public string OperatorTelephone
        {
            get
            {
                return this._OperatorTelephone;
            }
            set
            {
                this.OnPropertyChanged("OperatorTelephone", this._OperatorTelephone, value);
                this._OperatorTelephone = value;
            }
        }

        public global::System.Boolean? KeepPromises
        {
            get
            {
                return this._KeepPromises;
            }
            set
            {
                this.OnPropertyChanged("KeepPromises", this._KeepPromises, value);
                this._KeepPromises = value;
            }
        }

        public string Transport
        {
            get
            {
                return this._Transport;
            }
            set
            {
                this.OnPropertyChanged("Transport", this._Transport, value);
                this._Transport = value;
            }
        }

        public string Destination
        {
            get
            {
                return this._Destination;
            }
            set
            {
                this.OnPropertyChanged("Destination", this._Destination, value);
                this._Destination = value;
            }
        }

        public string AssetValue
        {
            get
            {
                return this._AssetValue;
            }
            set
            {
                this.OnPropertyChanged("AssetValue", this._AssetValue, value);
                this._AssetValue = value;
            }
        }

        public global::System.DateTime? EstablishTime
        {
            get
            {
                return this._EstablishTime;
            }
            set
            {
                this.OnPropertyChanged("EstablishTime", this._EstablishTime, value);
                this._EstablishTime = value;
            }
        }

        public bool ContractUser
        {
            get
            {
                return this._ContractUser;
            }
            set
            {
                this.OnPropertyChanged("ContractUser", this._ContractUser, value);
                this._ContractUser = value;
            }
        }

        public string BasicSituation
        {
            get
            {
                return this._BasicSituation;
            }
            set
            {
                this.OnPropertyChanged("BasicSituation", this._BasicSituation, value);
                this._BasicSituation = value;
            }
        }

        public global::System.Decimal? CurrentBalance
        {
            get
            {
                return this._CurrentBalance;
            }
            set
            {
                this.OnPropertyChanged("CurrentBalance", this._CurrentBalance, value);
                this._CurrentBalance = value;
            }
        }

        public bool Available
        {
            get
            {
                return this._Available;
            }
            set
            {
                this.OnPropertyChanged("Available", this._Available, value);
                this._Available = value;
            }
        }

        public bool ForPurchase
        {
            get
            {
                return this._ForPurchase;
            }
            set
            {
                this.OnPropertyChanged("ForPurchase", this._ForPurchase, value);
                this._ForPurchase = value;
            }
        }

        public bool ForSale
        {
            get
            {
                return this._ForSale;
            }
            set
            {
                this.OnPropertyChanged("ForSale", this._ForSale, value);
                this._ForSale = value;
            }
        }

        public string SearchCode
        {
            get
            {
                return this._SearchCode;
            }
            set
            {
                this.OnPropertyChanged("SearchCode", this._SearchCode, value);
                this._SearchCode = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Customer._CustomerEntityConfiguration == null))
            {
                Customer._CustomerEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Customer");
            }
            return Customer._CustomerEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerID,
                        this._CustomerCode,
                        this._CustomerName,
                        this._Category,
                        this._Charge,
                        this._Subordinate,
                        this._Address,
                        this._Telephone,
                        this._Fax,
                        this._Nature,
                        this._Bank,
                        this._PostCode,
                        this._Scope,
                        this._BusinessArea,
                        this._BankAccount,
                        this._ApprovalBusinessLicense,
                        this._LicenseNumber,
                        this._LegalPerson,
                        this._LegalPersonTelephone,
                        this._Head,
                        this._HeadTelephone,
                        this._Operator,
                        this._OperatorTelephone,
                        this._KeepPromises,
                        this._Transport,
                        this._Destination,
                        this._AssetValue,
                        this._EstablishTime,
                        this._ContractUser,
                        this._BasicSituation,
                        this._CurrentBalance,
                        this._Available,
                        this._ForPurchase,
                        this._ForSale,
                        this._SearchCode,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CustomerName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Category = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Charge = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Subordinate = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Address = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Telephone = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Fax = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Nature = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Bank = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._PostCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Scope = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._BusinessArea = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._BankAccount = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ApprovalBusinessLicense = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._LicenseNumber = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._LegalPerson = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._LegalPersonTelephone = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._Head = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._HeadTelephone = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._Operator = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._OperatorTelephone = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._KeepPromises = reader.GetBoolean(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._Transport = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._Destination = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._AssetValue = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._EstablishTime = this.GetDateTime(reader, 27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._ContractUser = reader.GetBoolean(28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._BasicSituation = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._CurrentBalance = reader.GetDecimal(30);
            }
            if ((false == reader.IsDBNull(31)))
            {
                this._Available = reader.GetBoolean(31);
            }
            if ((false == reader.IsDBNull(32)))
            {
                this._ForPurchase = reader.GetBoolean(32);
            }
            if ((false == reader.IsDBNull(33)))
            {
                this._ForSale = reader.GetBoolean(33);
            }
            if ((false == reader.IsDBNull(34)))
            {
                this._SearchCode = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35)))
            {
                this._Comment = reader.GetString(35);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CustomerName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Category = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Charge = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Subordinate = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Address = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Telephone = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Fax = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Nature = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Bank = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._PostCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Scope = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._BusinessArea = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._BankAccount = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._ApprovalBusinessLicense = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._LicenseNumber = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._LegalPerson = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._LegalPersonTelephone = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._Head = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._HeadTelephone = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._Operator = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._OperatorTelephone = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._KeepPromises = ((System.Nullable<bool>)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._Transport = ((string)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._Destination = ((string)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._AssetValue = ((string)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._EstablishTime = this.GetDateTime(row, 27);
            }
            if ((false == row.IsNull(28)))
            {
                this._ContractUser = ((bool)(row[28]));
            }
            if ((false == row.IsNull(29)))
            {
                this._BasicSituation = ((string)(row[29]));
            }
            if ((false == row.IsNull(30)))
            {
                this._CurrentBalance = ((System.Nullable<decimal>)(row[30]));
            }
            if ((false == row.IsNull(31)))
            {
                this._Available = ((bool)(row[31]));
            }
            if ((false == row.IsNull(32)))
            {
                this._ForPurchase = ((bool)(row[32]));
            }
            if ((false == row.IsNull(33)))
            {
                this._ForSale = ((bool)(row[33]));
            }
            if ((false == row.IsNull(34)))
            {
                this._SearchCode = ((string)(row[34]));
            }
            if ((false == row.IsNull(35)))
            {
                this._Comment = ((string)(row[35]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Customer).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Customer)(obj)).isAttached)
                        && (this.CustomerID == ((global::Rock.StaticEntities.Customer)(obj)).CustomerID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("CustomerID", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _CustomerCode = new Rock.Orm.Common.PropertyItem("CustomerCode", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _CustomerName = new Rock.Orm.Common.PropertyItem("CustomerName", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Category = new Rock.Orm.Common.PropertyItem("Category", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Charge = new Rock.Orm.Common.PropertyItem("Charge", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Subordinate = new Rock.Orm.Common.PropertyItem("Subordinate", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Address = new Rock.Orm.Common.PropertyItem("Address", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Telephone = new Rock.Orm.Common.PropertyItem("Telephone", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Fax = new Rock.Orm.Common.PropertyItem("Fax", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Nature = new Rock.Orm.Common.PropertyItem("Nature", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Bank = new Rock.Orm.Common.PropertyItem("Bank", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _PostCode = new Rock.Orm.Common.PropertyItem("PostCode", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Scope = new Rock.Orm.Common.PropertyItem("Scope", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _BusinessArea = new Rock.Orm.Common.PropertyItem("BusinessArea", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _BankAccount = new Rock.Orm.Common.PropertyItem("BankAccount", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _ApprovalBusinessLicense = new Rock.Orm.Common.PropertyItem("ApprovalBusinessLicense", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _LicenseNumber = new Rock.Orm.Common.PropertyItem("LicenseNumber", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _LegalPerson = new Rock.Orm.Common.PropertyItem("LegalPerson", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _LegalPersonTelephone = new Rock.Orm.Common.PropertyItem("LegalPersonTelephone", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Head = new Rock.Orm.Common.PropertyItem("Head", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _HeadTelephone = new Rock.Orm.Common.PropertyItem("HeadTelephone", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Operator = new Rock.Orm.Common.PropertyItem("Operator", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _OperatorTelephone = new Rock.Orm.Common.PropertyItem("OperatorTelephone", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _KeepPromises = new Rock.Orm.Common.PropertyItem("KeepPromises", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Transport = new Rock.Orm.Common.PropertyItem("Transport", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Destination = new Rock.Orm.Common.PropertyItem("Destination", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _AssetValue = new Rock.Orm.Common.PropertyItem("AssetValue", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _EstablishTime = new Rock.Orm.Common.PropertyItem("EstablishTime", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _ContractUser = new Rock.Orm.Common.PropertyItem("ContractUser", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _BasicSituation = new Rock.Orm.Common.PropertyItem("BasicSituation", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _CurrentBalance = new Rock.Orm.Common.PropertyItem("CurrentBalance", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Available = new Rock.Orm.Common.PropertyItem("Available", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _ForPurchase = new Rock.Orm.Common.PropertyItem("ForPurchase", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _ForSale = new Rock.Orm.Common.PropertyItem("ForSale", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _SearchCode = new Rock.Orm.Common.PropertyItem("SearchCode", "Rock.StaticEntities.Customer");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Customer");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerID", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerCode;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerCode", _CustomerCode.EntityConfiguration, _CustomerCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerName", _CustomerName.EntityConfiguration, _CustomerName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Category
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Category;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Category", _Category.EntityConfiguration, _Category.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Charge
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Charge;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Charge", _Charge.EntityConfiguration, _Charge.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Subordinate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Subordinate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Subordinate", _Subordinate.EntityConfiguration, _Subordinate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Address
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Address;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Address", _Address.EntityConfiguration, _Address.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Telephone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Telephone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Telephone", _Telephone.EntityConfiguration, _Telephone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Fax
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Fax;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Fax", _Fax.EntityConfiguration, _Fax.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Nature
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Nature;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Nature", _Nature.EntityConfiguration, _Nature.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Bank
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Bank;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Bank", _Bank.EntityConfiguration, _Bank.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PostCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PostCode;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PostCode", _PostCode.EntityConfiguration, _PostCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Scope
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Scope;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Scope", _Scope.EntityConfiguration, _Scope.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BusinessArea
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BusinessArea;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BusinessArea", _BusinessArea.EntityConfiguration, _BusinessArea.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BankAccount
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BankAccount;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BankAccount", _BankAccount.EntityConfiguration, _BankAccount.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ApprovalBusinessLicense
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ApprovalBusinessLicense;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ApprovalBusinessLicense", _ApprovalBusinessLicense.EntityConfiguration, _ApprovalBusinessLicense.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LicenseNumber
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LicenseNumber;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LicenseNumber", _LicenseNumber.EntityConfiguration, _LicenseNumber.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LegalPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LegalPerson;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LegalPerson", _LegalPerson.EntityConfiguration, _LegalPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LegalPersonTelephone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LegalPersonTelephone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LegalPersonTelephone", _LegalPersonTelephone.EntityConfiguration, _LegalPersonTelephone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Head
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Head;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Head", _Head.EntityConfiguration, _Head.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem HeadTelephone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HeadTelephone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("HeadTelephone", _HeadTelephone.EntityConfiguration, _HeadTelephone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Operator
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Operator;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Operator", _Operator.EntityConfiguration, _Operator.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OperatorTelephone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperatorTelephone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OperatorTelephone", _OperatorTelephone.EntityConfiguration, _OperatorTelephone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem KeepPromises
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _KeepPromises;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("KeepPromises", _KeepPromises.EntityConfiguration, _KeepPromises.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Transport
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Transport;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Transport", _Transport.EntityConfiguration, _Transport.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Destination
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Destination;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Destination", _Destination.EntityConfiguration, _Destination.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem AssetValue
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AssetValue;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("AssetValue", _AssetValue.EntityConfiguration, _AssetValue.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EstablishTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EstablishTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EstablishTime", _EstablishTime.EntityConfiguration, _EstablishTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractUser
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractUser;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractUser", _ContractUser.EntityConfiguration, _ContractUser.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BasicSituation
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BasicSituation;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BasicSituation", _BasicSituation.EntityConfiguration, _BasicSituation.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CurrentBalance
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CurrentBalance;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CurrentBalance", _CurrentBalance.EntityConfiguration, _CurrentBalance.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Available
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Available;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Available", _Available.EntityConfiguration, _Available.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ForPurchase
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ForPurchase;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ForPurchase", _ForPurchase.EntityConfiguration, _ForPurchase.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ForSale
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ForSale;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ForSale", _ForSale.EntityConfiguration, _ForSale.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SearchCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SearchCode;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SearchCode", _SearchCode.EntityConfiguration, _SearchCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ProductMarketingArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.ProductMarketing>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.ProductMarketing\" mappingName=\"ProductMarketing\" isRea" +
    "dOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelat" +
    "ion=\"false\">\r\n  <Properties>\r\n    <Property name=\"ProductMarketingID\" mappingNam" +
    "e=\"ProductMarketingID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isIn" +
    "herited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"f" +
    "alse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
    "ertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSer" +
    "ializationIgnore=\"false\" />\r\n    <Property name=\"ProductID\" mappingName=\"Product" +
    "ID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sql" +
    "Type=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"" +
    "false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"" +
    "false\" />\r\n    <Property name=\"ProductName\" mappingName=\"ProductName\" type=\"Syst" +
    "em.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarch" +
    "ar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fals" +
    "e\" />\r\n    <Property name=\"PersonName\" mappingName=\"PersonName\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class ProductMarketing : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ProductMarketingEntityConfiguration;

        protected int _ProductMarketingID;

        protected int _ProductID;

        protected string _ProductName;

        protected string _PersonName;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.ProductMarketing left, global::Rock.StaticEntities.ProductMarketing right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.ProductMarketing left, global::Rock.StaticEntities.ProductMarketing right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ProductMarketingID
        {
            get
            {
                return this._ProductMarketingID;
            }
            set
            {
                this.OnPropertyChanged("ProductMarketingID", this._ProductMarketingID, value);
                this._ProductMarketingID = value;
            }
        }

        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnPropertyChanged("ProductID", this._ProductID, value);
                this._ProductID = value;
            }
        }

        public string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                this.OnPropertyChanged("ProductName", this._ProductName, value);
                this._ProductName = value;
            }
        }

        public string PersonName
        {
            get
            {
                return this._PersonName;
            }
            set
            {
                this.OnPropertyChanged("PersonName", this._PersonName, value);
                this._PersonName = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((ProductMarketing._ProductMarketingEntityConfiguration == null))
            {
                ProductMarketing._ProductMarketingEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.ProductMarketing");
            }
            return ProductMarketing._ProductMarketingEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ProductMarketingID,
                        this._ProductID,
                        this._ProductName,
                        this._PersonName};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ProductMarketingID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ProductID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ProductName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._PersonName = reader.GetString(3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ProductMarketingID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ProductID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ProductName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._PersonName = ((string)(row[3]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.ProductMarketing).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.ProductMarketing)(obj)).isAttached)
                        && (this.ProductMarketingID == ((global::Rock.StaticEntities.ProductMarketing)(obj)).ProductMarketingID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ProductMarketingID = new Rock.Orm.Common.PropertyItem("ProductMarketingID", "Rock.StaticEntities.ProductMarketing");

            protected Rock.Orm.Common.PropertyItem _ProductID = new Rock.Orm.Common.PropertyItem("ProductID", "Rock.StaticEntities.ProductMarketing");

            protected Rock.Orm.Common.PropertyItem _ProductName = new Rock.Orm.Common.PropertyItem("ProductName", "Rock.StaticEntities.ProductMarketing");

            protected Rock.Orm.Common.PropertyItem _PersonName = new Rock.Orm.Common.PropertyItem("PersonName", "Rock.StaticEntities.ProductMarketing");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ProductMarketingID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductMarketingID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductMarketingID", _ProductMarketingID.EntityConfiguration, _ProductMarketingID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductID", _ProductID.EntityConfiguration, _ProductID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductName", _ProductName.EntityConfiguration, _ProductName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PersonName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PersonName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PersonName", _PersonName.EntityConfiguration, _PersonName.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ProductGradeArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.ProductGrade>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.ProductGrade\" mappingName=\"ProductGrade\" isReadOnly=\"f" +
    "alse\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"fal" +
    "se\">\r\n  <Properties>\r\n    <Property name=\"ProductGradeID\" mappingName=\"ProductGr" +
    "adeID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" " +
    "sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"ProductGradeName\" mappingName=\"ProductGradeName" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerialization" +
    "Ignore=\"false\" />\r\n    <Property name=\"ProductID\" mappingName=\"ProductID\" type=\"" +
    "System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mapping" +
    "ColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Prope" +
    "rties>\r\n</EntityConfiguration>")]
    public partial class ProductGrade : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ProductGradeEntityConfiguration;

        protected int _ProductGradeID;

        protected string _ProductGradeName;

        protected int _ProductID;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.ProductGrade left, global::Rock.StaticEntities.ProductGrade right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.ProductGrade left, global::Rock.StaticEntities.ProductGrade right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ProductGradeID
        {
            get
            {
                return this._ProductGradeID;
            }
            set
            {
                this.OnPropertyChanged("ProductGradeID", this._ProductGradeID, value);
                this._ProductGradeID = value;
            }
        }

        public string ProductGradeName
        {
            get
            {
                return this._ProductGradeName;
            }
            set
            {
                this.OnPropertyChanged("ProductGradeName", this._ProductGradeName, value);
                this._ProductGradeName = value;
            }
        }

        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                this.OnPropertyChanged("ProductID", this._ProductID, value);
                this._ProductID = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((ProductGrade._ProductGradeEntityConfiguration == null))
            {
                ProductGrade._ProductGradeEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.ProductGrade");
            }
            return ProductGrade._ProductGradeEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ProductGradeID,
                        this._ProductGradeName,
                        this._ProductID,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ProductGradeID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ProductGradeName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ProductID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Comment = reader.GetString(3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ProductGradeID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ProductGradeName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ProductID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Comment = ((string)(row[3]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.ProductGrade).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.ProductGrade)(obj)).isAttached)
                        && (this.ProductGradeID == ((global::Rock.StaticEntities.ProductGrade)(obj)).ProductGradeID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ProductGradeID = new Rock.Orm.Common.PropertyItem("ProductGradeID", "Rock.StaticEntities.ProductGrade");

            protected Rock.Orm.Common.PropertyItem _ProductGradeName = new Rock.Orm.Common.PropertyItem("ProductGradeName", "Rock.StaticEntities.ProductGrade");

            protected Rock.Orm.Common.PropertyItem _ProductID = new Rock.Orm.Common.PropertyItem("ProductID", "Rock.StaticEntities.ProductGrade");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.ProductGrade");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ProductGradeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductGradeID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductGradeID", _ProductGradeID.EntityConfiguration, _ProductGradeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductGradeName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductGradeName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductGradeName", _ProductGradeName.EntityConfiguration, _ProductGradeName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductID", _ProductID.EntityConfiguration, _ProductID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerQualificationArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerQualification>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerQualification\" mappingName=\"CustomerQualificat" +
    "ion\" isReadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"1" +
    "0\" isRelation=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerQualificatio" +
    "nID\" mappingName=\"CustomerQualificationID\" type=\"System.Int32\" mappingColumnType" +
    "=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryK" +
    "ey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelat" +
    "ionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Customer\" m" +
    "appingName=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" mappingColumnType=\"S" +
    "ystem.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=" +
    "\"true\" queryWhere=\"{CustomerID} = @Customer\" queryType=\"FkReverseQuery\" isRelati" +
    "onKey=\"false\" relatedType=\"Rock.StaticEntities.Customer\" relatedForeignKey=\"Cust" +
    "omerID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"CustomerQualificati" +
    "onCategory\" mappingName=\"CustomerQualificationCategory\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"LicenseNumber\" mappingName=\"LicenseNumber\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"BeginEffectiveDate\" mappingName=\"BeginEffectiveDate\" type=\"System.N" +
    "ullable`1[System.DateTime]\" mappingColumnType=\"System.Nullable`1[System.DateTime" +
    "]\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"fals" +
    "e\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"EndEffectiveDate\"" +
    " mappingName=\"EndEffectiveDate\" type=\"System.Nullable`1[System.DateTime]\" mappin" +
    "gColumnType=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"da" +
    "tetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fal" +
    "se\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLa" +
    "zyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"Attachment\" mappingName=\"Attachment\" type=\"System.S" +
    "tring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(1" +
    "50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" " +
    "isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLo" +
    "ad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </P" +
    "roperties>\r\n</EntityConfiguration>")]
    public partial class CustomerQualification : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerQualificationEntityConfiguration;

        protected int _CustomerQualificationID;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected string _CustomerQualificationCategory;

        protected string _LicenseNumber;

        protected global::System.DateTime? _BeginEffectiveDate;

        protected global::System.DateTime? _EndEffectiveDate;

        protected string _Attachment;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerQualification left, global::Rock.StaticEntities.CustomerQualification right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerQualification left, global::Rock.StaticEntities.CustomerQualification right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerQualificationID
        {
            get
            {
                return this._CustomerQualificationID;
            }
            set
            {
                this.OnPropertyChanged("CustomerQualificationID", this._CustomerQualificationID, value);
                this._CustomerQualificationID = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public string CustomerQualificationCategory
        {
            get
            {
                return this._CustomerQualificationCategory;
            }
            set
            {
                this.OnPropertyChanged("CustomerQualificationCategory", this._CustomerQualificationCategory, value);
                this._CustomerQualificationCategory = value;
            }
        }

        public string LicenseNumber
        {
            get
            {
                return this._LicenseNumber;
            }
            set
            {
                this.OnPropertyChanged("LicenseNumber", this._LicenseNumber, value);
                this._LicenseNumber = value;
            }
        }

        public global::System.DateTime? BeginEffectiveDate
        {
            get
            {
                return this._BeginEffectiveDate;
            }
            set
            {
                this.OnPropertyChanged("BeginEffectiveDate", this._BeginEffectiveDate, value);
                this._BeginEffectiveDate = value;
            }
        }

        public global::System.DateTime? EndEffectiveDate
        {
            get
            {
                return this._EndEffectiveDate;
            }
            set
            {
                this.OnPropertyChanged("EndEffectiveDate", this._EndEffectiveDate, value);
                this._EndEffectiveDate = value;
            }
        }

        public string Attachment
        {
            get
            {
                return this._Attachment;
            }
            set
            {
                this.OnPropertyChanged("Attachment", this._Attachment, value);
                this._Attachment = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerQualification._CustomerQualificationEntityConfiguration == null))
            {
                CustomerQualification._CustomerQualificationEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerQualification");
            }
            return CustomerQualification._CustomerQualificationEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerQualification", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerQualificationID,
                        this._Customer_CustomerID,
                        this._CustomerQualificationCategory,
                        this._LicenseNumber,
                        this._BeginEffectiveDate,
                        this._EndEffectiveDate,
                        this._Attachment,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerQualificationID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Customer_CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CustomerQualificationCategory = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._LicenseNumber = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._BeginEffectiveDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._EndEffectiveDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Attachment = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Comment = reader.GetString(7);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerQualificationID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Customer_CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CustomerQualificationCategory = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._LicenseNumber = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._BeginEffectiveDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._EndEffectiveDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._Attachment = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Comment = ((string)(row[7]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerQualification).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerQualification)(obj)).isAttached)
                        && (this.CustomerQualificationID == ((global::Rock.StaticEntities.CustomerQualification)(obj)).CustomerQualificationID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerQualificationID = new Rock.Orm.Common.PropertyItem("CustomerQualificationID", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _CustomerQualificationCategory = new Rock.Orm.Common.PropertyItem("CustomerQualificationCategory", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _LicenseNumber = new Rock.Orm.Common.PropertyItem("LicenseNumber", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _BeginEffectiveDate = new Rock.Orm.Common.PropertyItem("BeginEffectiveDate", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _EndEffectiveDate = new Rock.Orm.Common.PropertyItem("EndEffectiveDate", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _Attachment = new Rock.Orm.Common.PropertyItem("Attachment", "Rock.StaticEntities.CustomerQualification");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.CustomerQualification");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerQualificationID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerQualificationID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerQualificationID", _CustomerQualificationID.EntityConfiguration, _CustomerQualificationID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerQualificationCategory
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerQualificationCategory;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerQualificationCategory", _CustomerQualificationCategory.EntityConfiguration, _CustomerQualificationCategory.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LicenseNumber
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LicenseNumber;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LicenseNumber", _LicenseNumber.EntityConfiguration, _LicenseNumber.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BeginEffectiveDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BeginEffectiveDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BeginEffectiveDate", _BeginEffectiveDate.EntityConfiguration, _BeginEffectiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EndEffectiveDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EndEffectiveDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EndEffectiveDate", _EndEffectiveDate.EntityConfiguration, _EndEffectiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Attachment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Attachment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Attachment", _Attachment.EntityConfiguration, _Attachment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ICCardArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.ICCard>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.ICCard\" mappingName=\"ICCard\" isReadOnly=\"false\" isBatc" +
    "hUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <Pro" +
    "perties>\r\n    <Property name=\"ICCardID\" mappingName=\"ICCardID\" type=\"System.Int3" +
    "2\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContaine" +
    "d=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Proper" +
    "ty name=\"ICCardNumber\" mappingName=\"ICCardNumber\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"ICCardCate\" mappingName=\"ICCardCate\" type=\"System.String\" mappingColumnTy" +
    "pe=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"CustomerCode\" mappingName=\"CustomerCode\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tru" +
    "e\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"S" +
    "ender\" mappingName=\"Sender\" type=\"System.String\" mappingColumnType=\"System.Strin" +
    "g\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"f" +
    "alse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationK" +
    "ey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Password\" mappi" +
    "ngName=\"Password\" type=\"System.String\" mappingColumnType=\"System.String\" isInher" +
    "ited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQu" +
    "ery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInd" +
    "exPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\"" +
    " isSerializationIgnore=\"false\" />\r\n    <Property name=\"Available\" mappingName=\"A" +
    "vailable\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInherited=\"" +
    "false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" is" +
    "ReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
    "=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializati" +
    "onIgnore=\"false\" />\r\n    <Property name=\"ReleaseDate\" mappingName=\"ReleaseDate\" " +
    "type=\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" s" +
    "qlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRea" +
    "dOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
    "alse\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationI" +
    "gnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type=\"Syste" +
    "m.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarcha" +
    "r(150\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fal" +
    "se\" />\r\n    <Property name=\"State\" mappingName=\"State\" type=\"System.String\" mapp" +
    "ingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContai" +
    "ned=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=" +
    "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" i" +
    "sNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"ReInit\" mappingName=\"ReInit\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(1\" isContained=\"false\" is" +
    "PrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInde" +
    "xProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fals" +
    "e\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</En" +
    "tityConfiguration>")]
    public partial class ICCard : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ICCardEntityConfiguration;

        protected int _ICCardID;

        protected string _ICCardNumber;

        protected string _ICCardCate;

        protected string _CustomerCode;

        protected string _Sender;

        protected string _Password;

        protected bool _Available;

        protected global::System.DateTime _ReleaseDate;

        protected string _Comment;

        protected string _State;

        protected string _ReInit;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.ICCard left, global::Rock.StaticEntities.ICCard right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.ICCard left, global::Rock.StaticEntities.ICCard right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ICCardID
        {
            get
            {
                return this._ICCardID;
            }
            set
            {
                this.OnPropertyChanged("ICCardID", this._ICCardID, value);
                this._ICCardID = value;
            }
        }

        public string ICCardNumber
        {
            get
            {
                return this._ICCardNumber;
            }
            set
            {
                this.OnPropertyChanged("ICCardNumber", this._ICCardNumber, value);
                this._ICCardNumber = value;
            }
        }

        public string ICCardCate
        {
            get
            {
                return this._ICCardCate;
            }
            set
            {
                this.OnPropertyChanged("ICCardCate", this._ICCardCate, value);
                this._ICCardCate = value;
            }
        }

        public string CustomerCode
        {
            get
            {
                return this._CustomerCode;
            }
            set
            {
                this.OnPropertyChanged("CustomerCode", this._CustomerCode, value);
                this._CustomerCode = value;
            }
        }

        public string Sender
        {
            get
            {
                return this._Sender;
            }
            set
            {
                this.OnPropertyChanged("Sender", this._Sender, value);
                this._Sender = value;
            }
        }

        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                this.OnPropertyChanged("Password", this._Password, value);
                this._Password = value;
            }
        }

        public bool Available
        {
            get
            {
                return this._Available;
            }
            set
            {
                this.OnPropertyChanged("Available", this._Available, value);
                this._Available = value;
            }
        }

        public global::System.DateTime ReleaseDate
        {
            get
            {
                return this._ReleaseDate;
            }
            set
            {
                this.OnPropertyChanged("ReleaseDate", this._ReleaseDate, value);
                this._ReleaseDate = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string ReInit
        {
            get
            {
                return this._ReInit;
            }
            set
            {
                this.OnPropertyChanged("ReInit", this._ReInit, value);
                this._ReInit = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((ICCard._ICCardEntityConfiguration == null))
            {
                ICCard._ICCardEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.ICCard");
            }
            return ICCard._ICCardEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ICCardID,
                        this._ICCardNumber,
                        this._ICCardCate,
                        this._CustomerCode,
                        this._Sender,
                        this._Password,
                        this._Available,
                        this._ReleaseDate,
                        this._Comment,
                        this._State,
                        this._ReInit};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ICCardID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ICCardNumber = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ICCardCate = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._CustomerCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Sender = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Password = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Available = reader.GetBoolean(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ReleaseDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Comment = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._State = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._ReInit = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ICCardID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ICCardNumber = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ICCardCate = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._CustomerCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Sender = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Password = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Available = ((bool)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ReleaseDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._Comment = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._State = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._ReInit = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.ICCard).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.ICCard)(obj)).isAttached)
                        && (this.ICCardID == ((global::Rock.StaticEntities.ICCard)(obj)).ICCardID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ICCardID = new Rock.Orm.Common.PropertyItem("ICCardID", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _ICCardNumber = new Rock.Orm.Common.PropertyItem("ICCardNumber", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _ICCardCate = new Rock.Orm.Common.PropertyItem("ICCardCate", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _CustomerCode = new Rock.Orm.Common.PropertyItem("CustomerCode", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _Sender = new Rock.Orm.Common.PropertyItem("Sender", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _Password = new Rock.Orm.Common.PropertyItem("Password", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _Available = new Rock.Orm.Common.PropertyItem("Available", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _ReleaseDate = new Rock.Orm.Common.PropertyItem("ReleaseDate", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.ICCard");

            protected Rock.Orm.Common.PropertyItem _ReInit = new Rock.Orm.Common.PropertyItem("ReInit", "Rock.StaticEntities.ICCard");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ICCardID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ICCardID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ICCardID", _ICCardID.EntityConfiguration, _ICCardID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ICCardNumber
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ICCardNumber;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ICCardNumber", _ICCardNumber.EntityConfiguration, _ICCardNumber.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ICCardCate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ICCardCate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ICCardCate", _ICCardCate.EntityConfiguration, _ICCardCate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerCode;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerCode", _CustomerCode.EntityConfiguration, _CustomerCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Sender
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Sender;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Sender", _Sender.EntityConfiguration, _Sender.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Password
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Password;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Password", _Password.EntityConfiguration, _Password.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Available
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Available;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Available", _Available.EntityConfiguration, _Available.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReleaseDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReleaseDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReleaseDate", _ReleaseDate.EntityConfiguration, _ReleaseDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReInit
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReInit;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReInit", _ReInit.EntityConfiguration, _ReInit.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}

namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerEnableApplyArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerEnableApply>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerEnableApply\" mappingName=\"CustomerEnableApply\"" +
    " isReadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" i" +
    "sRelation=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerEnableApplyID\" m" +
    "appingName=\"CustomerEnableApplyID\" type=\"System.Int32\" mappingColumnType=\"System" +
    ".Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true" +
    "\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"" +
    "false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Customer\" mappingNa" +
    "me=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" mappingColumnType=\"System.Nu" +
    "llable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" is" +
    "PrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" q" +
    "ueryWhere=\"{CustomerID} = @Customer\" queryType=\"FkReverseQuery\" isRelationKey=\"f" +
    "alse\" relatedType=\"Rock.StaticEntities.Customer\" relatedForeignKey=\"CustomerID\" " +
    "isSerializationIgnore=\"true\" />\r\n    <Property name=\"EnableReason\" mappingName=\"" +
    "EnableReason\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited" +
    "=\"false\" sqlType=\"nvarchar(500\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" is" +
    "SerializationIgnore=\"false\" />\r\n    <Property name=\"Applicant\" mappingName=\"Appl" +
    "icant\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false" +
    "\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializ" +
    "ationIgnore=\"false\" />\r\n    <Property name=\"ApplyDate\" mappingName=\"ApplyDate\" t" +
    "ype=\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sq" +
    "lType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRead" +
    "Only=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIg" +
    "nore=\"false\" />\r\n    <Property name=\"State\" mappingName=\"State\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"NeedLeadership\" mappingName=\"NeedLeadership\" type=\"System.B" +
    "oolean\" mappingColumnType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"NeedCompany\" mappingName=\"NeedCompany\" type=\"System.Boolean\" ma" +
    "ppingColumnType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType=\"Sy" +
    "stem.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</Enti" +
    "tyConfiguration>")]
    public partial class CustomerEnableApply : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerEnableApplyEntityConfiguration;

        protected int _CustomerEnableApplyID;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected string _EnableReason;

        protected string _Applicant;

        protected global::System.DateTime _ApplyDate;

        protected string _State;

        protected bool _NeedLeadership;

        protected bool _NeedCompany;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerEnableApply left, global::Rock.StaticEntities.CustomerEnableApply right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerEnableApply left, global::Rock.StaticEntities.CustomerEnableApply right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerEnableApplyID
        {
            get
            {
                return this._CustomerEnableApplyID;
            }
            set
            {
                this.OnPropertyChanged("CustomerEnableApplyID", this._CustomerEnableApplyID, value);
                this._CustomerEnableApplyID = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public string EnableReason
        {
            get
            {
                return this._EnableReason;
            }
            set
            {
                this.OnPropertyChanged("EnableReason", this._EnableReason, value);
                this._EnableReason = value;
            }
        }

        public string Applicant
        {
            get
            {
                return this._Applicant;
            }
            set
            {
                this.OnPropertyChanged("Applicant", this._Applicant, value);
                this._Applicant = value;
            }
        }

        public global::System.DateTime ApplyDate
        {
            get
            {
                return this._ApplyDate;
            }
            set
            {
                this.OnPropertyChanged("ApplyDate", this._ApplyDate, value);
                this._ApplyDate = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public bool NeedLeadership
        {
            get
            {
                return this._NeedLeadership;
            }
            set
            {
                this.OnPropertyChanged("NeedLeadership", this._NeedLeadership, value);
                this._NeedLeadership = value;
            }
        }

        public bool NeedCompany
        {
            get
            {
                return this._NeedCompany;
            }
            set
            {
                this.OnPropertyChanged("NeedCompany", this._NeedCompany, value);
                this._NeedCompany = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerEnableApply._CustomerEnableApplyEntityConfiguration == null))
            {
                CustomerEnableApply._CustomerEnableApplyEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerEnableApply");
            }
            return CustomerEnableApply._CustomerEnableApplyEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerEnableApply", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerEnableApplyID,
                        this._Customer_CustomerID,
                        this._EnableReason,
                        this._Applicant,
                        this._ApplyDate,
                        this._State,
                        this._NeedLeadership,
                        this._NeedCompany,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerEnableApplyID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Customer_CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._EnableReason = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Applicant = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ApplyDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._State = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._NeedLeadership = reader.GetBoolean(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._NeedCompany = reader.GetBoolean(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Comment = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerEnableApplyID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Customer_CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._EnableReason = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Applicant = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ApplyDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._State = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._NeedLeadership = ((bool)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._NeedCompany = ((bool)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Comment = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerEnableApply).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerEnableApply)(obj)).isAttached)
                        && (this.CustomerEnableApplyID == ((global::Rock.StaticEntities.CustomerEnableApply)(obj)).CustomerEnableApplyID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerEnableApplyID = new Rock.Orm.Common.PropertyItem("CustomerEnableApplyID", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _EnableReason = new Rock.Orm.Common.PropertyItem("EnableReason", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _Applicant = new Rock.Orm.Common.PropertyItem("Applicant", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _ApplyDate = new Rock.Orm.Common.PropertyItem("ApplyDate", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _NeedLeadership = new Rock.Orm.Common.PropertyItem("NeedLeadership", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _NeedCompany = new Rock.Orm.Common.PropertyItem("NeedCompany", "Rock.StaticEntities.CustomerEnableApply");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.CustomerEnableApply");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerEnableApplyID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerEnableApplyID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerEnableApplyID", _CustomerEnableApplyID.EntityConfiguration, _CustomerEnableApplyID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EnableReason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EnableReason;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EnableReason", _EnableReason.EntityConfiguration, _EnableReason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Applicant
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Applicant;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Applicant", _Applicant.EntityConfiguration, _Applicant.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ApplyDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ApplyDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ApplyDate", _ApplyDate.EntityConfiguration, _ApplyDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NeedLeadership
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NeedLeadership;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NeedLeadership", _NeedLeadership.EntityConfiguration, _NeedLeadership.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NeedCompany
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NeedCompany;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NeedCompany", _NeedCompany.EntityConfiguration, _NeedCompany.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerEnableApproveArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerEnableApprove>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerEnableApprove\" mappingName=\"CustomerEnableAppr" +
    "ove\" isReadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"1" +
    "0\" isRelation=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerEnableApprov" +
    "eID\" mappingName=\"CustomerEnableApproveID\" type=\"System.Int32\" mappingColumnType" +
    "=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryK" +
    "ey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelat" +
    "ionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"CustomerEna" +
    "bleApply\" mappingName=\"CustomerEnableApplyID\" type=\"Rock.StaticEntities.Customer" +
    "EnableApply\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
    "lse\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isRea" +
    "dOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{CustomerEnableApplyID} = @C" +
    "ustomerEnableApply\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType" +
    "=\"Rock.StaticEntities.CustomerEnableApply\" relatedForeignKey=\"CustomerEnableAppl" +
    "yID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"Result\" mappingName=\"R" +
    "esult\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false" +
    "\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializ" +
    "ationIgnore=\"false\" />\r\n    <Property name=\"NodeName\" mappingName=\"NodeName\" typ" +
    "e=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=" +
    "\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnl" +
    "y=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgno" +
    "re=\"false\" />\r\n    <Property name=\"Depart\" mappingName=\"Depart\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"Approver\" mappingName=\"Approver\" type=\"System.String\" mapp" +
    "ingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContai" +
    "ned=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=" +
    "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" i" +
    "sNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"Opinion\" mappingName=\"Opinion\" type=\"System.String\" mappingColumnTy" +
    "pe=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(200\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property nam" +
    "e=\"ApprovalDate\" mappingName=\"ApprovalDate\" type=\"System.DateTime\" mappingColumn" +
    "Type=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n<" +
    "/EntityConfiguration>")]
    public partial class CustomerEnableApprove : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerEnableApproveEntityConfiguration;

        protected int _CustomerEnableApproveID;

        protected global::Rock.StaticEntities.CustomerEnableApply _CustomerEnableApply;

        protected global::System.Int32? _CustomerEnableApply_CustomerEnableApplyID;

        protected string _Result;

        protected string _NodeName;

        protected string _Depart;

        protected string _Approver;

        protected string _Opinion;

        protected global::System.DateTime _ApprovalDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerEnableApprove left, global::Rock.StaticEntities.CustomerEnableApprove right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerEnableApprove left, global::Rock.StaticEntities.CustomerEnableApprove right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerEnableApproveID
        {
            get
            {
                return this._CustomerEnableApproveID;
            }
            set
            {
                this.OnPropertyChanged("CustomerEnableApproveID", this._CustomerEnableApproveID, value);
                this._CustomerEnableApproveID = value;
            }
        }

        public global::System.Int32? CustomerEnableApplyID
        {
            get
            {
                return _CustomerEnableApply_CustomerEnableApplyID;
            }
            set
            {
                this.OnPropertyChanged("CustomerEnableApply", _CustomerEnableApply_CustomerEnableApplyID, value);
                _CustomerEnableApply_CustomerEnableApplyID = value;
                this.SetPropertyUnloaded("CustomerEnableApply");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.CustomerEnableApply CustomerEnableApply
        {
            get
            {
                if (this.IsQueryPropertyLoaded("CustomerEnableApply"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.CustomerEnableApply _obj;
                    _obj = ((global::Rock.StaticEntities.CustomerEnableApply)(this.QueryOne(typeof(global::Rock.StaticEntities.CustomerEnableApply), "CustomerEnableApply", this)));
                    this.OnQueryOnePropertyChanged("CustomerEnableApply", this._CustomerEnableApply, _obj);
                    this._CustomerEnableApply = _obj;
                }
                return this._CustomerEnableApply;
            }
            set
            {
                this.OnQueryOnePropertyChanged("CustomerEnableApply", this.CustomerEnableApply, value);
                this._CustomerEnableApply = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("CustomerEnableApply", this._CustomerEnableApply_CustomerEnableApplyID, null);
                    this._CustomerEnableApply_CustomerEnableApplyID = null;
                }
                else
                {
                    this.OnPropertyChanged("CustomerEnableApply", this._CustomerEnableApply_CustomerEnableApplyID, value.CustomerEnableApplyID);
                    this._CustomerEnableApply_CustomerEnableApplyID = value.CustomerEnableApplyID;
                }
            }
        }

        public string Result
        {
            get
            {
                return this._Result;
            }
            set
            {
                this.OnPropertyChanged("Result", this._Result, value);
                this._Result = value;
            }
        }

        public string NodeName
        {
            get
            {
                return this._NodeName;
            }
            set
            {
                this.OnPropertyChanged("NodeName", this._NodeName, value);
                this._NodeName = value;
            }
        }

        public string Depart
        {
            get
            {
                return this._Depart;
            }
            set
            {
                this.OnPropertyChanged("Depart", this._Depart, value);
                this._Depart = value;
            }
        }

        public string Approver
        {
            get
            {
                return this._Approver;
            }
            set
            {
                this.OnPropertyChanged("Approver", this._Approver, value);
                this._Approver = value;
            }
        }

        public string Opinion
        {
            get
            {
                return this._Opinion;
            }
            set
            {
                this.OnPropertyChanged("Opinion", this._Opinion, value);
                this._Opinion = value;
            }
        }

        public global::System.DateTime ApprovalDate
        {
            get
            {
                return this._ApprovalDate;
            }
            set
            {
                this.OnPropertyChanged("ApprovalDate", this._ApprovalDate, value);
                this._ApprovalDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerEnableApprove._CustomerEnableApproveEntityConfiguration == null))
            {
                CustomerEnableApprove._CustomerEnableApproveEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerEnableApprove");
            }
            return CustomerEnableApprove._CustomerEnableApproveEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerEnableApprove", "CustomerEnableApply"))))
            {
                global::Rock.StaticEntities.CustomerEnableApply _obj;
                _obj = ((global::Rock.StaticEntities.CustomerEnableApply)(this.QueryOne(typeof(global::Rock.StaticEntities.CustomerEnableApply), "CustomerEnableApply", this)));
                this.OnQueryOnePropertyChanged("CustomerEnableApply", this._CustomerEnableApply, _obj);
                this._CustomerEnableApply = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerEnableApproveID,
                        this._CustomerEnableApply_CustomerEnableApplyID,
                        this._Result,
                        this._NodeName,
                        this._Depart,
                        this._Approver,
                        this._Opinion,
                        this._ApprovalDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerEnableApproveID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerEnableApply_CustomerEnableApplyID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Result = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._NodeName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Depart = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Approver = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Opinion = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ApprovalDate = this.GetDateTime(reader, 7);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerEnableApproveID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerEnableApply_CustomerEnableApplyID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Result = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._NodeName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Depart = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Approver = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Opinion = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ApprovalDate = this.GetDateTime(row, 7);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerEnableApprove).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerEnableApprove)(obj)).isAttached)
                        && (this.CustomerEnableApproveID == ((global::Rock.StaticEntities.CustomerEnableApprove)(obj)).CustomerEnableApproveID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerEnableApproveID = new Rock.Orm.Common.PropertyItem("CustomerEnableApproveID", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _CustomerEnableApplyID = new Rock.Orm.Common.PropertyItem("CustomerEnableApply", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _Result = new Rock.Orm.Common.PropertyItem("Result", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _NodeName = new Rock.Orm.Common.PropertyItem("NodeName", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _Depart = new Rock.Orm.Common.PropertyItem("Depart", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _Approver = new Rock.Orm.Common.PropertyItem("Approver", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _Opinion = new Rock.Orm.Common.PropertyItem("Opinion", "Rock.StaticEntities.CustomerEnableApprove");

            protected Rock.Orm.Common.PropertyItem _ApprovalDate = new Rock.Orm.Common.PropertyItem("ApprovalDate", "Rock.StaticEntities.CustomerEnableApprove");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerEnableApproveID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerEnableApproveID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerEnableApproveID", _CustomerEnableApproveID.EntityConfiguration, _CustomerEnableApproveID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.CustomerEnableApply.@__Columns CustomerEnableApply
            {
                get
                {
                    return new global::Rock.StaticEntities.CustomerEnableApply.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "CustomerEnableApply"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerEnableApplyID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerEnableApplyID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerEnableApply", _CustomerEnableApplyID.EntityConfiguration, _CustomerEnableApplyID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Result
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Result;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Result", _Result.EntityConfiguration, _Result.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NodeName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NodeName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NodeName", _NodeName.EntityConfiguration, _NodeName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Depart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Depart;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Depart", _Depart.EntityConfiguration, _Depart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Approver
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Approver;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Approver", _Approver.EntityConfiguration, _Approver.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Opinion
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Opinion;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Opinion", _Opinion.EntityConfiguration, _Opinion.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ApprovalDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ApprovalDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ApprovalDate", _ApprovalDate.EntityConfiguration, _ApprovalDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerServiceArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerService>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerService\" mappingName=\"CustomerService\" isReadO" +
    "nly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelatio" +
    "n=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerServiceID\" mappingName=\"" +
    "CustomerServiceID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInheri" +
    "ted=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"CustomerServiceNum\" mappingName=\"Cu" +
    "stomerServiceNum\" type=\"System.String\" mappingColumnType=\"System.String\" isInher" +
    "ited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrimaryKey=\"false\" isQu" +
    "ery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInd" +
    "exPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"CustomerName\" mappingNam" +
    "e=\"CustomerName\" type=\"System.String\" mappingColumnType=\"System.String\" isInheri" +
    "ted=\"false\" sqlType=\"nvarchar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQu" +
    "ery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInd" +
    "exPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"RegisterDate\" mappingNam" +
    "e=\"RegisterDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"Sy" +
    "stem.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Contacts\" mappingName=\"Contacts\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"Telphone\" mappingName=\"Telphone\" type=\"System.String\" mappingColumnType=\"Sy" +
    "stem.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPri" +
    "maryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" " +
    "isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Serv" +
    "iceType\" mappingName=\"ServiceType\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isR" +
    "elationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Feedbac" +
    "k\" mappingName=\"Feedback\" type=\"System.String\" mappingColumnType=\"System.String\"" +
    " isInherited=\"false\" sqlType=\"nvarchar(500\" isContained=\"false\" isPrimaryKey=\"fa" +
    "lse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fal" +
    "se\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationK" +
    "ey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"DealDate\" mappi" +
    "ngName=\"DealDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"S" +
    "ystem.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"Disposal\" mappingName=\"Disposal\" type=\"System.String\" mappingColu" +
    "mnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property " +
    "name=\"DisposalInstructions\" mappingName=\"DisposalInstructions\" type=\"System.Stri" +
    "ng\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"SurveyFacts\" mappingName=\"SurveyFacts\" type=\"System.String" +
    "\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"ResultBasis\" mappingName=\"ResultBasis\" type=\"System.String\" " +
    "mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properti" +
    "es>\r\n</EntityConfiguration>")]
    public partial class CustomerService : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerServiceEntityConfiguration;

        protected int _CustomerServiceID;

        protected string _CustomerServiceNum;

        protected string _CustomerName;

        protected global::System.DateTime? _RegisterDate;

        protected string _Contacts;

        protected string _Telphone;

        protected string _ServiceType;

        protected string _Feedback;

        protected global::System.DateTime? _DealDate;

        protected string _Disposal;

        protected string _DisposalInstructions;

        protected string _SurveyFacts;

        protected string _ResultBasis;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerService left, global::Rock.StaticEntities.CustomerService right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerService left, global::Rock.StaticEntities.CustomerService right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerServiceID
        {
            get
            {
                return this._CustomerServiceID;
            }
            set
            {
                this.OnPropertyChanged("CustomerServiceID", this._CustomerServiceID, value);
                this._CustomerServiceID = value;
            }
        }

        public string CustomerServiceNum
        {
            get
            {
                return this._CustomerServiceNum;
            }
            set
            {
                this.OnPropertyChanged("CustomerServiceNum", this._CustomerServiceNum, value);
                this._CustomerServiceNum = value;
            }
        }

        public string CustomerName
        {
            get
            {
                return this._CustomerName;
            }
            set
            {
                this.OnPropertyChanged("CustomerName", this._CustomerName, value);
                this._CustomerName = value;
            }
        }

        public global::System.DateTime? RegisterDate
        {
            get
            {
                return this._RegisterDate;
            }
            set
            {
                this.OnPropertyChanged("RegisterDate", this._RegisterDate, value);
                this._RegisterDate = value;
            }
        }

        public string Contacts
        {
            get
            {
                return this._Contacts;
            }
            set
            {
                this.OnPropertyChanged("Contacts", this._Contacts, value);
                this._Contacts = value;
            }
        }

        public string Telphone
        {
            get
            {
                return this._Telphone;
            }
            set
            {
                this.OnPropertyChanged("Telphone", this._Telphone, value);
                this._Telphone = value;
            }
        }

        public string ServiceType
        {
            get
            {
                return this._ServiceType;
            }
            set
            {
                this.OnPropertyChanged("ServiceType", this._ServiceType, value);
                this._ServiceType = value;
            }
        }

        public string Feedback
        {
            get
            {
                return this._Feedback;
            }
            set
            {
                this.OnPropertyChanged("Feedback", this._Feedback, value);
                this._Feedback = value;
            }
        }

        public global::System.DateTime? DealDate
        {
            get
            {
                return this._DealDate;
            }
            set
            {
                this.OnPropertyChanged("DealDate", this._DealDate, value);
                this._DealDate = value;
            }
        }

        public string Disposal
        {
            get
            {
                return this._Disposal;
            }
            set
            {
                this.OnPropertyChanged("Disposal", this._Disposal, value);
                this._Disposal = value;
            }
        }

        public string DisposalInstructions
        {
            get
            {
                return this._DisposalInstructions;
            }
            set
            {
                this.OnPropertyChanged("DisposalInstructions", this._DisposalInstructions, value);
                this._DisposalInstructions = value;
            }
        }

        public string SurveyFacts
        {
            get
            {
                return this._SurveyFacts;
            }
            set
            {
                this.OnPropertyChanged("SurveyFacts", this._SurveyFacts, value);
                this._SurveyFacts = value;
            }
        }

        public string ResultBasis
        {
            get
            {
                return this._ResultBasis;
            }
            set
            {
                this.OnPropertyChanged("ResultBasis", this._ResultBasis, value);
                this._ResultBasis = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerService._CustomerServiceEntityConfiguration == null))
            {
                CustomerService._CustomerServiceEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerService");
            }
            return CustomerService._CustomerServiceEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerServiceID,
                        this._CustomerServiceNum,
                        this._CustomerName,
                        this._RegisterDate,
                        this._Contacts,
                        this._Telphone,
                        this._ServiceType,
                        this._Feedback,
                        this._DealDate,
                        this._Disposal,
                        this._DisposalInstructions,
                        this._SurveyFacts,
                        this._ResultBasis,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerServiceID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerServiceNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CustomerName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._RegisterDate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Contacts = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Telphone = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ServiceType = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Feedback = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._DealDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Disposal = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._DisposalInstructions = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._SurveyFacts = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._ResultBasis = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Comment = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerServiceID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerServiceNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CustomerName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._RegisterDate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._Contacts = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Telphone = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ServiceType = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Feedback = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._DealDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._Disposal = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._DisposalInstructions = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._SurveyFacts = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._ResultBasis = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Comment = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerService).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerService)(obj)).isAttached)
                        && (this.CustomerServiceID == ((global::Rock.StaticEntities.CustomerService)(obj)).CustomerServiceID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerServiceID = new Rock.Orm.Common.PropertyItem("CustomerServiceID", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _CustomerServiceNum = new Rock.Orm.Common.PropertyItem("CustomerServiceNum", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _CustomerName = new Rock.Orm.Common.PropertyItem("CustomerName", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _RegisterDate = new Rock.Orm.Common.PropertyItem("RegisterDate", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _Contacts = new Rock.Orm.Common.PropertyItem("Contacts", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _Telphone = new Rock.Orm.Common.PropertyItem("Telphone", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _ServiceType = new Rock.Orm.Common.PropertyItem("ServiceType", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _Feedback = new Rock.Orm.Common.PropertyItem("Feedback", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _DealDate = new Rock.Orm.Common.PropertyItem("DealDate", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _Disposal = new Rock.Orm.Common.PropertyItem("Disposal", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _DisposalInstructions = new Rock.Orm.Common.PropertyItem("DisposalInstructions", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _SurveyFacts = new Rock.Orm.Common.PropertyItem("SurveyFacts", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _ResultBasis = new Rock.Orm.Common.PropertyItem("ResultBasis", "Rock.StaticEntities.CustomerService");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.CustomerService");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerServiceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerServiceID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerServiceID", _CustomerServiceID.EntityConfiguration, _CustomerServiceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerServiceNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerServiceNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerServiceNum", _CustomerServiceNum.EntityConfiguration, _CustomerServiceNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerName", _CustomerName.EntityConfiguration, _CustomerName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem RegisterDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RegisterDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RegisterDate", _RegisterDate.EntityConfiguration, _RegisterDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Contacts
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Contacts;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Contacts", _Contacts.EntityConfiguration, _Contacts.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Telphone
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Telphone;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Telphone", _Telphone.EntityConfiguration, _Telphone.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ServiceType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ServiceType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ServiceType", _ServiceType.EntityConfiguration, _ServiceType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Feedback
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Feedback;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Feedback", _Feedback.EntityConfiguration, _Feedback.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DealDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DealDate", _DealDate.EntityConfiguration, _DealDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Disposal
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Disposal;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Disposal", _Disposal.EntityConfiguration, _Disposal.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DisposalInstructions
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DisposalInstructions;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DisposalInstructions", _DisposalInstructions.EntityConfiguration, _DisposalInstructions.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SurveyFacts
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SurveyFacts;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SurveyFacts", _SurveyFacts.EntityConfiguration, _SurveyFacts.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ResultBasis
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ResultBasis;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ResultBasis", _ResultBasis.EntityConfiguration, _ResultBasis.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CarrierArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Carrier>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Carrier\" mappingName=\"Carrier\" isReadOnly=\"false\" isBa" +
    "tchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <P" +
    "roperties>\r\n    <Property name=\"CarrierID\" mappingName=\"CarrierID\" type=\"System." +
    "Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCont" +
    "ained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"CarrierName\" mappingName=\"CarrierName\" type=\"System.String\" mapping" +
    "ColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"LicenseKey\" mappingName=\"LicenseKey\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"ExpiryDate\" mappingName=\"ExpiryDate\" type=\"System.DateTime\" mappingColumnTyp" +
    "e=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tru" +
    "e\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"C" +
    "omment\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType=\"System.Str" +
    "ing\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrimaryKey" +
    "=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelat" +
    "ionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"BusinessLic" +
    "enceDate\" mappingName=\"BusinessLicenceDate\" type=\"System.DateTime\" mappingColumn" +
    "Type=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n<" +
    "/EntityConfiguration>")]
    public partial class Carrier : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CarrierEntityConfiguration;

        protected int _CarrierID;

        protected string _CarrierName;

        protected string _LicenseKey;

        protected global::System.DateTime _ExpiryDate;

        protected string _Comment;

        protected global::System.DateTime _BusinessLicenceDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Carrier left, global::Rock.StaticEntities.Carrier right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Carrier left, global::Rock.StaticEntities.Carrier right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CarrierID
        {
            get
            {
                return this._CarrierID;
            }
            set
            {
                this.OnPropertyChanged("CarrierID", this._CarrierID, value);
                this._CarrierID = value;
            }
        }

        public string CarrierName
        {
            get
            {
                return this._CarrierName;
            }
            set
            {
                this.OnPropertyChanged("CarrierName", this._CarrierName, value);
                this._CarrierName = value;
            }
        }

        public string LicenseKey
        {
            get
            {
                return this._LicenseKey;
            }
            set
            {
                this.OnPropertyChanged("LicenseKey", this._LicenseKey, value);
                this._LicenseKey = value;
            }
        }

        public global::System.DateTime ExpiryDate
        {
            get
            {
                return this._ExpiryDate;
            }
            set
            {
                this.OnPropertyChanged("ExpiryDate", this._ExpiryDate, value);
                this._ExpiryDate = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public global::System.DateTime BusinessLicenceDate
        {
            get
            {
                return this._BusinessLicenceDate;
            }
            set
            {
                this.OnPropertyChanged("BusinessLicenceDate", this._BusinessLicenceDate, value);
                this._BusinessLicenceDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Carrier._CarrierEntityConfiguration == null))
            {
                Carrier._CarrierEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Carrier");
            }
            return Carrier._CarrierEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CarrierID,
                        this._CarrierName,
                        this._LicenseKey,
                        this._ExpiryDate,
                        this._Comment,
                        this._BusinessLicenceDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CarrierID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CarrierName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._LicenseKey = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ExpiryDate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Comment = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._BusinessLicenceDate = this.GetDateTime(reader, 5);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CarrierID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CarrierName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._LicenseKey = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ExpiryDate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._Comment = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._BusinessLicenceDate = this.GetDateTime(row, 5);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Carrier).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Carrier)(obj)).isAttached)
                        && (this.CarrierID == ((global::Rock.StaticEntities.Carrier)(obj)).CarrierID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CarrierID = new Rock.Orm.Common.PropertyItem("CarrierID", "Rock.StaticEntities.Carrier");

            protected Rock.Orm.Common.PropertyItem _CarrierName = new Rock.Orm.Common.PropertyItem("CarrierName", "Rock.StaticEntities.Carrier");

            protected Rock.Orm.Common.PropertyItem _LicenseKey = new Rock.Orm.Common.PropertyItem("LicenseKey", "Rock.StaticEntities.Carrier");

            protected Rock.Orm.Common.PropertyItem _ExpiryDate = new Rock.Orm.Common.PropertyItem("ExpiryDate", "Rock.StaticEntities.Carrier");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Carrier");

            protected Rock.Orm.Common.PropertyItem _BusinessLicenceDate = new Rock.Orm.Common.PropertyItem("BusinessLicenceDate", "Rock.StaticEntities.Carrier");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CarrierID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CarrierID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CarrierID", _CarrierID.EntityConfiguration, _CarrierID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CarrierName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CarrierName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CarrierName", _CarrierName.EntityConfiguration, _CarrierName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LicenseKey
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LicenseKey;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LicenseKey", _LicenseKey.EntityConfiguration, _LicenseKey.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ExpiryDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExpiryDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ExpiryDate", _ExpiryDate.EntityConfiguration, _ExpiryDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BusinessLicenceDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BusinessLicenceDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BusinessLicenceDate", _BusinessLicenceDate.EntityConfiguration, _BusinessLicenceDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class VehicleArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Vehicle>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Vehicle\" mappingName=\"Vehicle\" isReadOnly=\"false\" isBa" +
    "tchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <P" +
    "roperties>\r\n    <Property name=\"VehicleID\" mappingName=\"VehicleID\" type=\"System." +
    "Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCont" +
    "ained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"VehicleNum\" mappingName=\"VehicleNum\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isContained=" +
    "\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNot" +
    "Null=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"Carrier\" mappingName=\"CarrierID\" type=\"Rock.StaticEntities.Carrier\" mapp" +
    "ingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int" +
    "\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isF" +
    "riendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "true\" isNotNull=\"true\" queryWhere=\"{CarrierID} = @Carrier\" queryType=\"FkReverseQ" +
    "uery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Carrier\" relatedFor" +
    "eignKey=\"CarrierID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"Approve" +
    "dLoad\" mappingName=\"ApprovedLoad\" type=\"System.String\" mappingColumnType=\"System" +
    ".String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimary" +
    "Key=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProper" +
    "ty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRe" +
    "lationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Cargo\" m" +
    "appingName=\"Cargo\" type=\"System.String\" mappingColumnType=\"System.String\" isInhe" +
    "rited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQ" +
    "uery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fals" +
    "e\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"HeadTransportDate\" mapp" +
    "ingName=\"HeadTransportDate\" type=\"System.DateTime\" mappingColumnType=\"System.Dat" +
    "eTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"" +
    "false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"f" +
    "alse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelation" +
    "Key=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"HeadDrivingDat" +
    "e\" mappingName=\"HeadDrivingDate\" type=\"System.Nullable`1[System.DateTime]\" mappi" +
    "ngColumnType=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"d" +
    "atetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"f" +
    "alse\" />\r\n    <Property name=\"TrailerTransportDate\" mappingName=\"TrailerTranspor" +
    "tDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"System.Nulla" +
    "ble`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"Recommend\" mappingName=\"Recommend\" type=\"System.String\" mappingColumnType=\"S" +
    "ystem.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Aud" +
    "itOpinion\" mappingName=\"AuditOpinion\" type=\"System.String\" mappingColumnType=\"Sy" +
    "stem.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Aud" +
    "itDepart\" mappingName=\"AuditDepart\" type=\"System.String\" mappingColumnType=\"Syst" +
    "em.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrima" +
    "ryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProp" +
    "erty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" is" +
    "RelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Audito" +
    "r\" mappingName=\"Auditor\" type=\"System.String\" mappingColumnType=\"System.String\" " +
    "isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"fals" +
    "e\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"IssueDate\" mappin" +
    "gName=\"IssueDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"S" +
    "ystem.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColumn" +
    "Type=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"TrailerDrivingDate\" mappingName=\"TrailerDrivingDate\" type=\"System.DateTime\" " +
    "mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"ContainerCheckDate\" mappingName=\"ContainerCheckDate\" type=\"System" +
    ".DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"date" +
    "time\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false" +
    "\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazy" +
    "Load=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"YangziTransportDate\" mappingName=\"YangziTransportDate\"" +
    " type=\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" " +
    "sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerialization" +
    "Ignore=\"false\" />\r\n    <Property name=\"PoliceDate\" mappingName=\"PoliceDate\" type" +
    "=\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlTy" +
    "pe=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnl" +
    "y=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnor" +
    "e=\"false\" />\r\n    <Property name=\"ExpiryDate\" mappingName=\"ExpiryDate\" type=\"Sys" +
    "tem.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"d" +
    "atetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"Volume\" mappingName=\"Volume\" type=\"System.String\" m" +
    "appingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    " +
    "<Property name=\"RecommendDate\" mappingName=\"RecommendDate\" type=\"System.Nullable" +
    "`1[System.DateTime]\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" isIn" +
    "herited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQu" +
    "ery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInd" +
    "exPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Vehicle : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _VehicleEntityConfiguration;

        protected int _VehicleID;

        protected string _VehicleNum;

        protected global::Rock.StaticEntities.Carrier _Carrier;

        protected global::System.Int32? _Carrier_CarrierID;

        protected string _ApprovedLoad;

        protected string _Cargo;

        protected global::System.DateTime _HeadTransportDate;

        protected global::System.DateTime? _HeadDrivingDate;

        protected global::System.DateTime? _TrailerTransportDate;

        protected string _Recommend;

        protected string _AuditOpinion;

        protected string _AuditDepart;

        protected string _Auditor;

        protected global::System.DateTime? _IssueDate;

        protected string _Comment;

        protected global::System.DateTime _TrailerDrivingDate;

        protected global::System.DateTime _ContainerCheckDate;

        protected global::System.DateTime _YangziTransportDate;

        protected global::System.DateTime _PoliceDate;

        protected global::System.DateTime _ExpiryDate;

        protected string _Volume;

        protected global::System.DateTime? _RecommendDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Vehicle left, global::Rock.StaticEntities.Vehicle right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Vehicle left, global::Rock.StaticEntities.Vehicle right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int VehicleID
        {
            get
            {
                return this._VehicleID;
            }
            set
            {
                this.OnPropertyChanged("VehicleID", this._VehicleID, value);
                this._VehicleID = value;
            }
        }

        public string VehicleNum
        {
            get
            {
                return this._VehicleNum;
            }
            set
            {
                this.OnPropertyChanged("VehicleNum", this._VehicleNum, value);
                this._VehicleNum = value;
            }
        }

        public global::System.Int32? CarrierID
        {
            get
            {
                return _Carrier_CarrierID;
            }
            set
            {
                this.OnPropertyChanged("Carrier", _Carrier_CarrierID, value);
                _Carrier_CarrierID = value;
                this.SetPropertyUnloaded("Carrier");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Carrier Carrier
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Carrier"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Carrier _obj;
                    _obj = ((global::Rock.StaticEntities.Carrier)(this.QueryOne(typeof(global::Rock.StaticEntities.Carrier), "Carrier", this)));
                    this.OnQueryOnePropertyChanged("Carrier", this._Carrier, _obj);
                    this._Carrier = _obj;
                }
                return this._Carrier;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Carrier", this.Carrier, value);
                this._Carrier = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Carrier", this._Carrier_CarrierID, null);
                    this._Carrier_CarrierID = null;
                }
                else
                {
                    this.OnPropertyChanged("Carrier", this._Carrier_CarrierID, value.CarrierID);
                    this._Carrier_CarrierID = value.CarrierID;
                }
            }
        }

        public string ApprovedLoad
        {
            get
            {
                return this._ApprovedLoad;
            }
            set
            {
                this.OnPropertyChanged("ApprovedLoad", this._ApprovedLoad, value);
                this._ApprovedLoad = value;
            }
        }

        public string Cargo
        {
            get
            {
                return this._Cargo;
            }
            set
            {
                this.OnPropertyChanged("Cargo", this._Cargo, value);
                this._Cargo = value;
            }
        }

        public global::System.DateTime HeadTransportDate
        {
            get
            {
                return this._HeadTransportDate;
            }
            set
            {
                this.OnPropertyChanged("HeadTransportDate", this._HeadTransportDate, value);
                this._HeadTransportDate = value;
            }
        }

        public global::System.DateTime? HeadDrivingDate
        {
            get
            {
                return this._HeadDrivingDate;
            }
            set
            {
                this.OnPropertyChanged("HeadDrivingDate", this._HeadDrivingDate, value);
                this._HeadDrivingDate = value;
            }
        }

        public global::System.DateTime? TrailerTransportDate
        {
            get
            {
                return this._TrailerTransportDate;
            }
            set
            {
                this.OnPropertyChanged("TrailerTransportDate", this._TrailerTransportDate, value);
                this._TrailerTransportDate = value;
            }
        }

        public string Recommend
        {
            get
            {
                return this._Recommend;
            }
            set
            {
                this.OnPropertyChanged("Recommend", this._Recommend, value);
                this._Recommend = value;
            }
        }

        public string AuditOpinion
        {
            get
            {
                return this._AuditOpinion;
            }
            set
            {
                this.OnPropertyChanged("AuditOpinion", this._AuditOpinion, value);
                this._AuditOpinion = value;
            }
        }

        public string AuditDepart
        {
            get
            {
                return this._AuditDepart;
            }
            set
            {
                this.OnPropertyChanged("AuditDepart", this._AuditDepart, value);
                this._AuditDepart = value;
            }
        }

        public string Auditor
        {
            get
            {
                return this._Auditor;
            }
            set
            {
                this.OnPropertyChanged("Auditor", this._Auditor, value);
                this._Auditor = value;
            }
        }

        public global::System.DateTime? IssueDate
        {
            get
            {
                return this._IssueDate;
            }
            set
            {
                this.OnPropertyChanged("IssueDate", this._IssueDate, value);
                this._IssueDate = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public global::System.DateTime TrailerDrivingDate
        {
            get
            {
                return this._TrailerDrivingDate;
            }
            set
            {
                this.OnPropertyChanged("TrailerDrivingDate", this._TrailerDrivingDate, value);
                this._TrailerDrivingDate = value;
            }
        }

        public global::System.DateTime ContainerCheckDate
        {
            get
            {
                return this._ContainerCheckDate;
            }
            set
            {
                this.OnPropertyChanged("ContainerCheckDate", this._ContainerCheckDate, value);
                this._ContainerCheckDate = value;
            }
        }

        public global::System.DateTime YangziTransportDate
        {
            get
            {
                return this._YangziTransportDate;
            }
            set
            {
                this.OnPropertyChanged("YangziTransportDate", this._YangziTransportDate, value);
                this._YangziTransportDate = value;
            }
        }

        public global::System.DateTime PoliceDate
        {
            get
            {
                return this._PoliceDate;
            }
            set
            {
                this.OnPropertyChanged("PoliceDate", this._PoliceDate, value);
                this._PoliceDate = value;
            }
        }

        public global::System.DateTime ExpiryDate
        {
            get
            {
                return this._ExpiryDate;
            }
            set
            {
                this.OnPropertyChanged("ExpiryDate", this._ExpiryDate, value);
                this._ExpiryDate = value;
            }
        }

        public string Volume
        {
            get
            {
                return this._Volume;
            }
            set
            {
                this.OnPropertyChanged("Volume", this._Volume, value);
                this._Volume = value;
            }
        }

        public global::System.DateTime? RecommendDate
        {
            get
            {
                return this._RecommendDate;
            }
            set
            {
                this.OnPropertyChanged("RecommendDate", this._RecommendDate, value);
                this._RecommendDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Vehicle._VehicleEntityConfiguration == null))
            {
                Vehicle._VehicleEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Vehicle");
            }
            return Vehicle._VehicleEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Vehicle", "Carrier"))))
            {
                global::Rock.StaticEntities.Carrier _obj;
                _obj = ((global::Rock.StaticEntities.Carrier)(this.QueryOne(typeof(global::Rock.StaticEntities.Carrier), "Carrier", this)));
                this.OnQueryOnePropertyChanged("Carrier", this._Carrier, _obj);
                this._Carrier = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._VehicleID,
                        this._VehicleNum,
                        this._Carrier_CarrierID,
                        this._ApprovedLoad,
                        this._Cargo,
                        this._HeadTransportDate,
                        this._HeadDrivingDate,
                        this._TrailerTransportDate,
                        this._Recommend,
                        this._AuditOpinion,
                        this._AuditDepart,
                        this._Auditor,
                        this._IssueDate,
                        this._Comment,
                        this._TrailerDrivingDate,
                        this._ContainerCheckDate,
                        this._YangziTransportDate,
                        this._PoliceDate,
                        this._ExpiryDate,
                        this._Volume,
                        this._RecommendDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._VehicleID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._VehicleNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Carrier_CarrierID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ApprovedLoad = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Cargo = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._HeadTransportDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._HeadDrivingDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._TrailerTransportDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Recommend = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._AuditOpinion = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._AuditDepart = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Auditor = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._IssueDate = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Comment = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._TrailerDrivingDate = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ContainerCheckDate = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._YangziTransportDate = this.GetDateTime(reader, 16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._PoliceDate = this.GetDateTime(reader, 17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._ExpiryDate = this.GetDateTime(reader, 18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._Volume = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._RecommendDate = this.GetDateTime(reader, 20);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._VehicleID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._VehicleNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Carrier_CarrierID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ApprovedLoad = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Cargo = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._HeadTransportDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._HeadDrivingDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._TrailerTransportDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._Recommend = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._AuditOpinion = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._AuditDepart = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Auditor = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._IssueDate = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13)))
            {
                this._Comment = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._TrailerDrivingDate = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15)))
            {
                this._ContainerCheckDate = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16)))
            {
                this._YangziTransportDate = this.GetDateTime(row, 16);
            }
            if ((false == row.IsNull(17)))
            {
                this._PoliceDate = this.GetDateTime(row, 17);
            }
            if ((false == row.IsNull(18)))
            {
                this._ExpiryDate = this.GetDateTime(row, 18);
            }
            if ((false == row.IsNull(19)))
            {
                this._Volume = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._RecommendDate = this.GetDateTime(row, 20);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Vehicle).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Vehicle)(obj)).isAttached)
                        && (this.VehicleID == ((global::Rock.StaticEntities.Vehicle)(obj)).VehicleID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _VehicleID = new Rock.Orm.Common.PropertyItem("VehicleID", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _VehicleNum = new Rock.Orm.Common.PropertyItem("VehicleNum", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _CarrierID = new Rock.Orm.Common.PropertyItem("Carrier", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _ApprovedLoad = new Rock.Orm.Common.PropertyItem("ApprovedLoad", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _Cargo = new Rock.Orm.Common.PropertyItem("Cargo", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _HeadTransportDate = new Rock.Orm.Common.PropertyItem("HeadTransportDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _HeadDrivingDate = new Rock.Orm.Common.PropertyItem("HeadDrivingDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _TrailerTransportDate = new Rock.Orm.Common.PropertyItem("TrailerTransportDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _Recommend = new Rock.Orm.Common.PropertyItem("Recommend", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _AuditOpinion = new Rock.Orm.Common.PropertyItem("AuditOpinion", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _AuditDepart = new Rock.Orm.Common.PropertyItem("AuditDepart", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _Auditor = new Rock.Orm.Common.PropertyItem("Auditor", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _IssueDate = new Rock.Orm.Common.PropertyItem("IssueDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _TrailerDrivingDate = new Rock.Orm.Common.PropertyItem("TrailerDrivingDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _ContainerCheckDate = new Rock.Orm.Common.PropertyItem("ContainerCheckDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _YangziTransportDate = new Rock.Orm.Common.PropertyItem("YangziTransportDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _PoliceDate = new Rock.Orm.Common.PropertyItem("PoliceDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _ExpiryDate = new Rock.Orm.Common.PropertyItem("ExpiryDate", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _Volume = new Rock.Orm.Common.PropertyItem("Volume", "Rock.StaticEntities.Vehicle");

            protected Rock.Orm.Common.PropertyItem _RecommendDate = new Rock.Orm.Common.PropertyItem("RecommendDate", "Rock.StaticEntities.Vehicle");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem VehicleID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _VehicleID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("VehicleID", _VehicleID.EntityConfiguration, _VehicleID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem VehicleNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _VehicleNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("VehicleNum", _VehicleNum.EntityConfiguration, _VehicleNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Carrier.@__Columns Carrier
            {
                get
                {
                    return new global::Rock.StaticEntities.Carrier.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Carrier"));
                }
            }

            public Rock.Orm.Common.PropertyItem CarrierID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CarrierID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Carrier", _CarrierID.EntityConfiguration, _CarrierID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ApprovedLoad
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ApprovedLoad;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ApprovedLoad", _ApprovedLoad.EntityConfiguration, _ApprovedLoad.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Cargo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Cargo;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Cargo", _Cargo.EntityConfiguration, _Cargo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem HeadTransportDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HeadTransportDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("HeadTransportDate", _HeadTransportDate.EntityConfiguration, _HeadTransportDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem HeadDrivingDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HeadDrivingDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("HeadDrivingDate", _HeadDrivingDate.EntityConfiguration, _HeadDrivingDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem TrailerTransportDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TrailerTransportDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("TrailerTransportDate", _TrailerTransportDate.EntityConfiguration, _TrailerTransportDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Recommend
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Recommend;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Recommend", _Recommend.EntityConfiguration, _Recommend.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem AuditOpinion
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AuditOpinion;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("AuditOpinion", _AuditOpinion.EntityConfiguration, _AuditOpinion.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem AuditDepart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AuditDepart;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("AuditDepart", _AuditDepart.EntityConfiguration, _AuditDepart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Auditor
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Auditor;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Auditor", _Auditor.EntityConfiguration, _Auditor.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem IssueDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IssueDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("IssueDate", _IssueDate.EntityConfiguration, _IssueDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem TrailerDrivingDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TrailerDrivingDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("TrailerDrivingDate", _TrailerDrivingDate.EntityConfiguration, _TrailerDrivingDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContainerCheckDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContainerCheckDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContainerCheckDate", _ContainerCheckDate.EntityConfiguration, _ContainerCheckDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem YangziTransportDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _YangziTransportDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("YangziTransportDate", _YangziTransportDate.EntityConfiguration, _YangziTransportDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PoliceDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PoliceDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PoliceDate", _PoliceDate.EntityConfiguration, _PoliceDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ExpiryDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExpiryDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ExpiryDate", _ExpiryDate.EntityConfiguration, _ExpiryDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Volume
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Volume;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Volume", _Volume.EntityConfiguration, _Volume.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem RecommendDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecommendDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("RecommendDate", _RecommendDate.EntityConfiguration, _RecommendDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}

namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ExaminationArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Examination>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Examination\" mappingName=\"Examination\" isReadOnly=\"fal" +
    "se\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false" +
    "\">\r\n  <Properties>\r\n    <Property name=\"ExaminationID\" mappingName=\"ExaminationI" +
    "D\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlT" +
    "ype=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"ExaminationNun\" mappingName=\"ExaminationNun\" type=\"" +
    "System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nv" +
    "archar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"" +
    "false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"" +
    "false\" />\r\n    <Property name=\"ProductName\" mappingName=\"ProductName\" type=\"Syst" +
    "em.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarch" +
    "ar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fals" +
    "e\" />\r\n    <Property name=\"StorageBatch\" mappingName=\"StorageBatch\" type=\"System" +
    ".String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar" +
    "(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"ExamineDate\" mappingName=\"ExamineDate\" type=\"System.Dat" +
    "eTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime" +
    "\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" is" +
    "FriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad" +
    "=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"Midu\" mappingName=\"Midu\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"Qiwei\" mappingName=\"Qiwei\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKe" +
    "y=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Beikszdcz\"" +
    " mappingName=\"Beikszdcz\" type=\"System.String\" mappingColumnType=\"System.String\" " +
    "isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"fals" +
    "e\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Xiuzs\" mappingNam" +
    "e=\"Xiuzs\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"fa" +
    "lse\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fal" +
    "se\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
    "tyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeri" +
    "alizationIgnore=\"false\" />\r\n    <Property name=\"Saibtsh\" mappingName=\"Saibtsh\" t" +
    "ype=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlTyp" +
    "e=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadO" +
    "nly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIg" +
    "nore=\"false\" />\r\n    <Property name=\"Bogsh\" mappingName=\"Bogsh\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"Chuld\" mappingName=\"Chuld\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Gand\" mappingName=\"Gand\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKe" +
    "y=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Buhfw\" map" +
    "pingName=\"Buhfw\" type=\"System.String\" mappingColumnType=\"System.String\" isInheri" +
    "ted=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQue" +
    "ry=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInde" +
    "xPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\"" +
    " isSerializationIgnore=\"false\" />\r\n    <Property name=\"Liuhl\" mappingName=\"Liuhl" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n    <Property name=\"Benhl\" mappingName=\"Benhl\" type=\"System." +
    "String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(" +
    "50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" " +
    "isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLo" +
    "ad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"Zhengjwhl\" mappingName=\"Zhengjwhl\" type=\"System.String\"" +
    " mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"Qian\" mappingName=\"Qian\" type=\"System.String\" mappingColumnTyp" +
    "e=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fa" +
    "lse\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"Shen\" mappingName=\"Shen\" type=\"System.String\" mappingColumnType=\"System.String\"" +
    " isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"fal" +
    "se\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Sedh\" mappingNam" +
    "e=\"Sedh\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"fal" +
    "se\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fals" +
    "e\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
    "yDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeria" +
    "lizationIgnore=\"false\" />\r\n    <Property name=\"Tongpfs\" mappingName=\"Tongpfs\" ty" +
    "pe=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType" +
    "=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOn" +
    "ly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
    "e\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgn" +
    "ore=\"false\" />\r\n    <Property name=\"Jixzzjsf\" mappingName=\"Jixzzjsf\" type=\"Syste" +
    "m.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarcha" +
    "r(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false" +
    "\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazy" +
    "Load=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fals" +
    "e\" />\r\n    <Property name=\"shuihl\" mappingName=\"shuihl\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Inspector\" mappingName=\"Inspector\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Liucl100d\" mappingName=\"Liucl100d\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "Liucl120d\" mappingName=\"Liucl120d\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isR" +
    "elationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Canll\" " +
    "mappingName=\"Canll\" type=\"System.String\" mappingColumnType=\"System.String\" isInh" +
    "erited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" is" +
    "Query=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fal" +
    "se\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Xiuz\" mappingName=\"Xiu" +
    "z\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sq" +
    "lType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isR" +
    "eadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
    "\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializati" +
    "onIgnore=\"false\" />\r\n    <Property name=\"Fangxthl\" mappingName=\"Fangxthl\" type=\"" +
    "System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nv" +
    "archar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"" +
    "false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=" +
    "\"false\" />\r\n    <Property name=\"Bossy\" mappingName=\"Bossy\" type=\"System.String\" " +
    "mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isCo" +
    "ntained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriend" +
    "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fals" +
    "e\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"Shuirxshj\" mappingName=\"Shuirxshj\" type=\"System.String\" mapping" +
    "ColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"Youzsy\" mappingName=\"Youzsy\" type=\"System.String\" mappingColumnType=\"S" +
    "ystem.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"MTB" +
    "E\" mappingName=\"MTBE\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Juhw\" mappingName=\"J" +
    "uhw\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" " +
    "sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" i" +
    "sReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
    "c=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializa" +
    "tionIgnore=\"false\" />\r\n    <Property name=\"C4\" mappingName=\"C4\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"Jiac\" mappingName=\"Jiac\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"Shudc\" mappingName=\"Shudc\" type=\"System.String\" mappingColumnType=\"System.S" +
    "tring\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKe" +
    "y=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty" +
    "=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Dingx2\" ma" +
    "ppingName=\"Dingx2\" type=\"System.String\" mappingColumnType=\"System.String\" isInhe" +
    "rited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQ" +
    "uery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fals" +
    "e\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Yidx\" mappingName=\"Yidx" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n    <Property name=\"C3C4\" mappingName=\"C3C4\" type=\"System.St" +
    "ring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50" +
    "\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" is" +
    "FriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad" +
    "=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" /" +
    ">\r\n    <Property name=\"Zongl\" mappingName=\"Zongl\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"Youls\" mappingName=\"Youls\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isR" +
    "elationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Dingx1\"" +
    " mappingName=\"Dingx1\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Zhengydw\" mappingNam" +
    "e=\"Zhengydw\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=" +
    "\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"" +
    "false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"Yidx2dx\" mappingName=\"Yidx2dx" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n    <Property name=\"Dingexbex\" mappingName=\"Dingexbex\" type=" +
    "\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"n" +
    "varchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=" +
    "\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Bingq\" mappingName=\"Bingq\" type=\"System.String\"" +
    " mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"Zongqj\" mappingName=\"Zongqj\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"CO\" mappingName=\"CO\" type=\"System.String\" mappingColumnType=\"System.String\"" +
    " isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"fal" +
    "se\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"CO2\" mappingName" +
    "=\"CO2\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false" +
    "\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"Waig\" mappingName=\"Waig\" type=\"Syst" +
    "em.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarch" +
    "ar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"fals" +
    "e\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLaz" +
    "yLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"fal" +
    "se\" />\r\n    <Property name=\"Fill\" mappingName=\"Fill\" type=\"System.String\" mappin" +
    "gColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prop" +
    "erty name=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</E" +
    "ntityConfiguration>")]
    public partial class Examination : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ExaminationEntityConfiguration;

        protected int _ExaminationID;

        protected string _ExaminationNun;

        protected string _ProductName;

        protected string _StorageBatch;

        protected global::System.DateTime _ExamineDate;

        protected string _Midu;

        protected string _Qiwei;

        protected string _Beikszdcz;

        protected string _Xiuzs;

        protected string _Saibtsh;

        protected string _Bogsh;

        protected string _Chuld;

        protected string _Gand;

        protected string _Buhfw;

        protected string _Liuhl;

        protected string _Benhl;

        protected string _Zhengjwhl;

        protected string _Qian;

        protected string _Shen;

        protected string _Sedh;

        protected string _Tongpfs;

        protected string _Jixzzjsf;

        protected string _shuihl;

        protected string _Inspector;

        protected string _Liucl100d;

        protected string _Liucl120d;

        protected string _Canll;

        protected string _Xiuz;

        protected string _Fangxthl;

        protected string _Bossy;

        protected string _Shuirxshj;

        protected string _Youzsy;

        protected string _MTBE;

        protected string _Juhw;

        protected string _C4;

        protected string _Jiac;

        protected string _Shudc;

        protected string _Dingx2;

        protected string _Yidx;

        protected string _C3C4;

        protected string _Zongl;

        protected string _Youls;

        protected string _Dingx1;

        protected string _Zhengydw;

        protected string _Yidx2dx;

        protected string _Dingexbex;

        protected string _Bingq;

        protected string _Zongqj;

        protected string _CO;

        protected string _CO2;

        protected string _Waig;

        protected string _Fill;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Examination left, global::Rock.StaticEntities.Examination right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Examination left, global::Rock.StaticEntities.Examination right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ExaminationID
        {
            get
            {
                return this._ExaminationID;
            }
            set
            {
                this.OnPropertyChanged("ExaminationID", this._ExaminationID, value);
                this._ExaminationID = value;
            }
        }

        public string ExaminationNun
        {
            get
            {
                return this._ExaminationNun;
            }
            set
            {
                this.OnPropertyChanged("ExaminationNun", this._ExaminationNun, value);
                this._ExaminationNun = value;
            }
        }

        public string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                this.OnPropertyChanged("ProductName", this._ProductName, value);
                this._ProductName = value;
            }
        }

        public string StorageBatch
        {
            get
            {
                return this._StorageBatch;
            }
            set
            {
                this.OnPropertyChanged("StorageBatch", this._StorageBatch, value);
                this._StorageBatch = value;
            }
        }

        public global::System.DateTime ExamineDate
        {
            get
            {
                return this._ExamineDate;
            }
            set
            {
                this.OnPropertyChanged("ExamineDate", this._ExamineDate, value);
                this._ExamineDate = value;
            }
        }

        public string Midu
        {
            get
            {
                return this._Midu;
            }
            set
            {
                this.OnPropertyChanged("Midu", this._Midu, value);
                this._Midu = value;
            }
        }

        public string Qiwei
        {
            get
            {
                return this._Qiwei;
            }
            set
            {
                this.OnPropertyChanged("Qiwei", this._Qiwei, value);
                this._Qiwei = value;
            }
        }

        public string Beikszdcz
        {
            get
            {
                return this._Beikszdcz;
            }
            set
            {
                this.OnPropertyChanged("Beikszdcz", this._Beikszdcz, value);
                this._Beikszdcz = value;
            }
        }

        public string Xiuzs
        {
            get
            {
                return this._Xiuzs;
            }
            set
            {
                this.OnPropertyChanged("Xiuzs", this._Xiuzs, value);
                this._Xiuzs = value;
            }
        }

        public string Saibtsh
        {
            get
            {
                return this._Saibtsh;
            }
            set
            {
                this.OnPropertyChanged("Saibtsh", this._Saibtsh, value);
                this._Saibtsh = value;
            }
        }

        public string Bogsh
        {
            get
            {
                return this._Bogsh;
            }
            set
            {
                this.OnPropertyChanged("Bogsh", this._Bogsh, value);
                this._Bogsh = value;
            }
        }

        public string Chuld
        {
            get
            {
                return this._Chuld;
            }
            set
            {
                this.OnPropertyChanged("Chuld", this._Chuld, value);
                this._Chuld = value;
            }
        }

        public string Gand
        {
            get
            {
                return this._Gand;
            }
            set
            {
                this.OnPropertyChanged("Gand", this._Gand, value);
                this._Gand = value;
            }
        }

        public string Buhfw
        {
            get
            {
                return this._Buhfw;
            }
            set
            {
                this.OnPropertyChanged("Buhfw", this._Buhfw, value);
                this._Buhfw = value;
            }
        }

        public string Liuhl
        {
            get
            {
                return this._Liuhl;
            }
            set
            {
                this.OnPropertyChanged("Liuhl", this._Liuhl, value);
                this._Liuhl = value;
            }
        }

        public string Benhl
        {
            get
            {
                return this._Benhl;
            }
            set
            {
                this.OnPropertyChanged("Benhl", this._Benhl, value);
                this._Benhl = value;
            }
        }

        public string Zhengjwhl
        {
            get
            {
                return this._Zhengjwhl;
            }
            set
            {
                this.OnPropertyChanged("Zhengjwhl", this._Zhengjwhl, value);
                this._Zhengjwhl = value;
            }
        }

        public string Qian
        {
            get
            {
                return this._Qian;
            }
            set
            {
                this.OnPropertyChanged("Qian", this._Qian, value);
                this._Qian = value;
            }
        }

        public string Shen
        {
            get
            {
                return this._Shen;
            }
            set
            {
                this.OnPropertyChanged("Shen", this._Shen, value);
                this._Shen = value;
            }
        }

        public string Sedh
        {
            get
            {
                return this._Sedh;
            }
            set
            {
                this.OnPropertyChanged("Sedh", this._Sedh, value);
                this._Sedh = value;
            }
        }

        public string Tongpfs
        {
            get
            {
                return this._Tongpfs;
            }
            set
            {
                this.OnPropertyChanged("Tongpfs", this._Tongpfs, value);
                this._Tongpfs = value;
            }
        }

        public string Jixzzjsf
        {
            get
            {
                return this._Jixzzjsf;
            }
            set
            {
                this.OnPropertyChanged("Jixzzjsf", this._Jixzzjsf, value);
                this._Jixzzjsf = value;
            }
        }

        public string shuihl
        {
            get
            {
                return this._shuihl;
            }
            set
            {
                this.OnPropertyChanged("shuihl", this._shuihl, value);
                this._shuihl = value;
            }
        }

        public string Inspector
        {
            get
            {
                return this._Inspector;
            }
            set
            {
                this.OnPropertyChanged("Inspector", this._Inspector, value);
                this._Inspector = value;
            }
        }

        public string Liucl100d
        {
            get
            {
                return this._Liucl100d;
            }
            set
            {
                this.OnPropertyChanged("Liucl100d", this._Liucl100d, value);
                this._Liucl100d = value;
            }
        }

        public string Liucl120d
        {
            get
            {
                return this._Liucl120d;
            }
            set
            {
                this.OnPropertyChanged("Liucl120d", this._Liucl120d, value);
                this._Liucl120d = value;
            }
        }

        public string Canll
        {
            get
            {
                return this._Canll;
            }
            set
            {
                this.OnPropertyChanged("Canll", this._Canll, value);
                this._Canll = value;
            }
        }

        public string Xiuz
        {
            get
            {
                return this._Xiuz;
            }
            set
            {
                this.OnPropertyChanged("Xiuz", this._Xiuz, value);
                this._Xiuz = value;
            }
        }

        public string Fangxthl
        {
            get
            {
                return this._Fangxthl;
            }
            set
            {
                this.OnPropertyChanged("Fangxthl", this._Fangxthl, value);
                this._Fangxthl = value;
            }
        }

        public string Bossy
        {
            get
            {
                return this._Bossy;
            }
            set
            {
                this.OnPropertyChanged("Bossy", this._Bossy, value);
                this._Bossy = value;
            }
        }

        public string Shuirxshj
        {
            get
            {
                return this._Shuirxshj;
            }
            set
            {
                this.OnPropertyChanged("Shuirxshj", this._Shuirxshj, value);
                this._Shuirxshj = value;
            }
        }

        public string Youzsy
        {
            get
            {
                return this._Youzsy;
            }
            set
            {
                this.OnPropertyChanged("Youzsy", this._Youzsy, value);
                this._Youzsy = value;
            }
        }

        public string MTBE
        {
            get
            {
                return this._MTBE;
            }
            set
            {
                this.OnPropertyChanged("MTBE", this._MTBE, value);
                this._MTBE = value;
            }
        }

        public string Juhw
        {
            get
            {
                return this._Juhw;
            }
            set
            {
                this.OnPropertyChanged("Juhw", this._Juhw, value);
                this._Juhw = value;
            }
        }

        public string C4
        {
            get
            {
                return this._C4;
            }
            set
            {
                this.OnPropertyChanged("C4", this._C4, value);
                this._C4 = value;
            }
        }

        public string Jiac
        {
            get
            {
                return this._Jiac;
            }
            set
            {
                this.OnPropertyChanged("Jiac", this._Jiac, value);
                this._Jiac = value;
            }
        }

        public string Shudc
        {
            get
            {
                return this._Shudc;
            }
            set
            {
                this.OnPropertyChanged("Shudc", this._Shudc, value);
                this._Shudc = value;
            }
        }

        public string Dingx2
        {
            get
            {
                return this._Dingx2;
            }
            set
            {
                this.OnPropertyChanged("Dingx2", this._Dingx2, value);
                this._Dingx2 = value;
            }
        }

        public string Yidx
        {
            get
            {
                return this._Yidx;
            }
            set
            {
                this.OnPropertyChanged("Yidx", this._Yidx, value);
                this._Yidx = value;
            }
        }

        public string C3C4
        {
            get
            {
                return this._C3C4;
            }
            set
            {
                this.OnPropertyChanged("C3C4", this._C3C4, value);
                this._C3C4 = value;
            }
        }

        public string Zongl
        {
            get
            {
                return this._Zongl;
            }
            set
            {
                this.OnPropertyChanged("Zongl", this._Zongl, value);
                this._Zongl = value;
            }
        }

        public string Youls
        {
            get
            {
                return this._Youls;
            }
            set
            {
                this.OnPropertyChanged("Youls", this._Youls, value);
                this._Youls = value;
            }
        }

        public string Dingx1
        {
            get
            {
                return this._Dingx1;
            }
            set
            {
                this.OnPropertyChanged("Dingx1", this._Dingx1, value);
                this._Dingx1 = value;
            }
        }

        public string Zhengydw
        {
            get
            {
                return this._Zhengydw;
            }
            set
            {
                this.OnPropertyChanged("Zhengydw", this._Zhengydw, value);
                this._Zhengydw = value;
            }
        }

        public string Yidx2dx
        {
            get
            {
                return this._Yidx2dx;
            }
            set
            {
                this.OnPropertyChanged("Yidx2dx", this._Yidx2dx, value);
                this._Yidx2dx = value;
            }
        }

        public string Dingexbex
        {
            get
            {
                return this._Dingexbex;
            }
            set
            {
                this.OnPropertyChanged("Dingexbex", this._Dingexbex, value);
                this._Dingexbex = value;
            }
        }

        public string Bingq
        {
            get
            {
                return this._Bingq;
            }
            set
            {
                this.OnPropertyChanged("Bingq", this._Bingq, value);
                this._Bingq = value;
            }
        }

        public string Zongqj
        {
            get
            {
                return this._Zongqj;
            }
            set
            {
                this.OnPropertyChanged("Zongqj", this._Zongqj, value);
                this._Zongqj = value;
            }
        }

        public string CO
        {
            get
            {
                return this._CO;
            }
            set
            {
                this.OnPropertyChanged("CO", this._CO, value);
                this._CO = value;
            }
        }

        public string CO2
        {
            get
            {
                return this._CO2;
            }
            set
            {
                this.OnPropertyChanged("CO2", this._CO2, value);
                this._CO2 = value;
            }
        }

        public string Waig
        {
            get
            {
                return this._Waig;
            }
            set
            {
                this.OnPropertyChanged("Waig", this._Waig, value);
                this._Waig = value;
            }
        }

        public string Fill
        {
            get
            {
                return this._Fill;
            }
            set
            {
                this.OnPropertyChanged("Fill", this._Fill, value);
                this._Fill = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Examination._ExaminationEntityConfiguration == null))
            {
                Examination._ExaminationEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Examination");
            }
            return Examination._ExaminationEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ExaminationID,
                        this._ExaminationNun,
                        this._ProductName,
                        this._StorageBatch,
                        this._ExamineDate,
                        this._Midu,
                        this._Qiwei,
                        this._Beikszdcz,
                        this._Xiuzs,
                        this._Saibtsh,
                        this._Bogsh,
                        this._Chuld,
                        this._Gand,
                        this._Buhfw,
                        this._Liuhl,
                        this._Benhl,
                        this._Zhengjwhl,
                        this._Qian,
                        this._Shen,
                        this._Sedh,
                        this._Tongpfs,
                        this._Jixzzjsf,
                        this._shuihl,
                        this._Inspector,
                        this._Liucl100d,
                        this._Liucl120d,
                        this._Canll,
                        this._Xiuz,
                        this._Fangxthl,
                        this._Bossy,
                        this._Shuirxshj,
                        this._Youzsy,
                        this._MTBE,
                        this._Juhw,
                        this._C4,
                        this._Jiac,
                        this._Shudc,
                        this._Dingx2,
                        this._Yidx,
                        this._C3C4,
                        this._Zongl,
                        this._Youls,
                        this._Dingx1,
                        this._Zhengydw,
                        this._Yidx2dx,
                        this._Dingexbex,
                        this._Bingq,
                        this._Zongqj,
                        this._CO,
                        this._CO2,
                        this._Waig,
                        this._Fill,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ExaminationID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ExaminationNun = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ProductName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._StorageBatch = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ExamineDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Midu = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Qiwei = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Beikszdcz = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Xiuzs = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Saibtsh = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Bogsh = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Chuld = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Gand = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Buhfw = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._Liuhl = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._Benhl = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._Zhengjwhl = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._Qian = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._Shen = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._Sedh = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._Tongpfs = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._Jixzzjsf = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._shuihl = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._Inspector = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._Liucl100d = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._Liucl120d = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._Canll = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._Xiuz = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._Fangxthl = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._Bossy = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._Shuirxshj = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31)))
            {
                this._Youzsy = reader.GetString(31);
            }
            if ((false == reader.IsDBNull(32)))
            {
                this._MTBE = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33)))
            {
                this._Juhw = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34)))
            {
                this._C4 = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35)))
            {
                this._Jiac = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36)))
            {
                this._Shudc = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37)))
            {
                this._Dingx2 = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38)))
            {
                this._Yidx = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39)))
            {
                this._C3C4 = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40)))
            {
                this._Zongl = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41)))
            {
                this._Youls = reader.GetString(41);
            }
            if ((false == reader.IsDBNull(42)))
            {
                this._Dingx1 = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43)))
            {
                this._Zhengydw = reader.GetString(43);
            }
            if ((false == reader.IsDBNull(44)))
            {
                this._Yidx2dx = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45)))
            {
                this._Dingexbex = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46)))
            {
                this._Bingq = reader.GetString(46);
            }
            if ((false == reader.IsDBNull(47)))
            {
                this._Zongqj = reader.GetString(47);
            }
            if ((false == reader.IsDBNull(48)))
            {
                this._CO = reader.GetString(48);
            }
            if ((false == reader.IsDBNull(49)))
            {
                this._CO2 = reader.GetString(49);
            }
            if ((false == reader.IsDBNull(50)))
            {
                this._Waig = reader.GetString(50);
            }
            if ((false == reader.IsDBNull(51)))
            {
                this._Fill = reader.GetString(51);
            }
            if ((false == reader.IsDBNull(52)))
            {
                this._Comment = reader.GetString(52);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ExaminationID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ExaminationNun = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ProductName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._StorageBatch = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ExamineDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._Midu = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Qiwei = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Beikszdcz = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Xiuzs = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Saibtsh = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Bogsh = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Chuld = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Gand = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Buhfw = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._Liuhl = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._Benhl = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._Zhengjwhl = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._Qian = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._Shen = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._Sedh = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._Tongpfs = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._Jixzzjsf = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._shuihl = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._Inspector = ((string)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._Liucl100d = ((string)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._Liucl120d = ((string)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._Canll = ((string)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._Xiuz = ((string)(row[27]));
            }
            if ((false == row.IsNull(28)))
            {
                this._Fangxthl = ((string)(row[28]));
            }
            if ((false == row.IsNull(29)))
            {
                this._Bossy = ((string)(row[29]));
            }
            if ((false == row.IsNull(30)))
            {
                this._Shuirxshj = ((string)(row[30]));
            }
            if ((false == row.IsNull(31)))
            {
                this._Youzsy = ((string)(row[31]));
            }
            if ((false == row.IsNull(32)))
            {
                this._MTBE = ((string)(row[32]));
            }
            if ((false == row.IsNull(33)))
            {
                this._Juhw = ((string)(row[33]));
            }
            if ((false == row.IsNull(34)))
            {
                this._C4 = ((string)(row[34]));
            }
            if ((false == row.IsNull(35)))
            {
                this._Jiac = ((string)(row[35]));
            }
            if ((false == row.IsNull(36)))
            {
                this._Shudc = ((string)(row[36]));
            }
            if ((false == row.IsNull(37)))
            {
                this._Dingx2 = ((string)(row[37]));
            }
            if ((false == row.IsNull(38)))
            {
                this._Yidx = ((string)(row[38]));
            }
            if ((false == row.IsNull(39)))
            {
                this._C3C4 = ((string)(row[39]));
            }
            if ((false == row.IsNull(40)))
            {
                this._Zongl = ((string)(row[40]));
            }
            if ((false == row.IsNull(41)))
            {
                this._Youls = ((string)(row[41]));
            }
            if ((false == row.IsNull(42)))
            {
                this._Dingx1 = ((string)(row[42]));
            }
            if ((false == row.IsNull(43)))
            {
                this._Zhengydw = ((string)(row[43]));
            }
            if ((false == row.IsNull(44)))
            {
                this._Yidx2dx = ((string)(row[44]));
            }
            if ((false == row.IsNull(45)))
            {
                this._Dingexbex = ((string)(row[45]));
            }
            if ((false == row.IsNull(46)))
            {
                this._Bingq = ((string)(row[46]));
            }
            if ((false == row.IsNull(47)))
            {
                this._Zongqj = ((string)(row[47]));
            }
            if ((false == row.IsNull(48)))
            {
                this._CO = ((string)(row[48]));
            }
            if ((false == row.IsNull(49)))
            {
                this._CO2 = ((string)(row[49]));
            }
            if ((false == row.IsNull(50)))
            {
                this._Waig = ((string)(row[50]));
            }
            if ((false == row.IsNull(51)))
            {
                this._Fill = ((string)(row[51]));
            }
            if ((false == row.IsNull(52)))
            {
                this._Comment = ((string)(row[52]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Examination).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Examination)(obj)).isAttached)
                        && (this.ExaminationID == ((global::Rock.StaticEntities.Examination)(obj)).ExaminationID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ExaminationID = new Rock.Orm.Common.PropertyItem("ExaminationID", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _ExaminationNun = new Rock.Orm.Common.PropertyItem("ExaminationNun", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _ProductName = new Rock.Orm.Common.PropertyItem("ProductName", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _StorageBatch = new Rock.Orm.Common.PropertyItem("StorageBatch", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _ExamineDate = new Rock.Orm.Common.PropertyItem("ExamineDate", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Midu = new Rock.Orm.Common.PropertyItem("Midu", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Qiwei = new Rock.Orm.Common.PropertyItem("Qiwei", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Beikszdcz = new Rock.Orm.Common.PropertyItem("Beikszdcz", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Xiuzs = new Rock.Orm.Common.PropertyItem("Xiuzs", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Saibtsh = new Rock.Orm.Common.PropertyItem("Saibtsh", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Bogsh = new Rock.Orm.Common.PropertyItem("Bogsh", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Chuld = new Rock.Orm.Common.PropertyItem("Chuld", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Gand = new Rock.Orm.Common.PropertyItem("Gand", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Buhfw = new Rock.Orm.Common.PropertyItem("Buhfw", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Liuhl = new Rock.Orm.Common.PropertyItem("Liuhl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Benhl = new Rock.Orm.Common.PropertyItem("Benhl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Zhengjwhl = new Rock.Orm.Common.PropertyItem("Zhengjwhl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Qian = new Rock.Orm.Common.PropertyItem("Qian", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Shen = new Rock.Orm.Common.PropertyItem("Shen", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Sedh = new Rock.Orm.Common.PropertyItem("Sedh", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Tongpfs = new Rock.Orm.Common.PropertyItem("Tongpfs", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Jixzzjsf = new Rock.Orm.Common.PropertyItem("Jixzzjsf", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _shuihl = new Rock.Orm.Common.PropertyItem("shuihl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Inspector = new Rock.Orm.Common.PropertyItem("Inspector", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Liucl100d = new Rock.Orm.Common.PropertyItem("Liucl100d", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Liucl120d = new Rock.Orm.Common.PropertyItem("Liucl120d", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Canll = new Rock.Orm.Common.PropertyItem("Canll", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Xiuz = new Rock.Orm.Common.PropertyItem("Xiuz", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Fangxthl = new Rock.Orm.Common.PropertyItem("Fangxthl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Bossy = new Rock.Orm.Common.PropertyItem("Bossy", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Shuirxshj = new Rock.Orm.Common.PropertyItem("Shuirxshj", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Youzsy = new Rock.Orm.Common.PropertyItem("Youzsy", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _MTBE = new Rock.Orm.Common.PropertyItem("MTBE", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Juhw = new Rock.Orm.Common.PropertyItem("Juhw", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _C4 = new Rock.Orm.Common.PropertyItem("C4", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Jiac = new Rock.Orm.Common.PropertyItem("Jiac", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Shudc = new Rock.Orm.Common.PropertyItem("Shudc", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Dingx2 = new Rock.Orm.Common.PropertyItem("Dingx2", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Yidx = new Rock.Orm.Common.PropertyItem("Yidx", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _C3C4 = new Rock.Orm.Common.PropertyItem("C3C4", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Zongl = new Rock.Orm.Common.PropertyItem("Zongl", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Youls = new Rock.Orm.Common.PropertyItem("Youls", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Dingx1 = new Rock.Orm.Common.PropertyItem("Dingx1", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Zhengydw = new Rock.Orm.Common.PropertyItem("Zhengydw", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Yidx2dx = new Rock.Orm.Common.PropertyItem("Yidx2dx", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Dingexbex = new Rock.Orm.Common.PropertyItem("Dingexbex", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Bingq = new Rock.Orm.Common.PropertyItem("Bingq", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Zongqj = new Rock.Orm.Common.PropertyItem("Zongqj", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _CO = new Rock.Orm.Common.PropertyItem("CO", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _CO2 = new Rock.Orm.Common.PropertyItem("CO2", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Waig = new Rock.Orm.Common.PropertyItem("Waig", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Fill = new Rock.Orm.Common.PropertyItem("Fill", "Rock.StaticEntities.Examination");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Examination");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ExaminationID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExaminationID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ExaminationID", _ExaminationID.EntityConfiguration, _ExaminationID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ExaminationNun
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExaminationNun;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ExaminationNun", _ExaminationNun.EntityConfiguration, _ExaminationNun.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductName", _ProductName.EntityConfiguration, _ProductName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem StorageBatch
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageBatch;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("StorageBatch", _StorageBatch.EntityConfiguration, _StorageBatch.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ExamineDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExamineDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ExamineDate", _ExamineDate.EntityConfiguration, _ExamineDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Midu
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Midu;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Midu", _Midu.EntityConfiguration, _Midu.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Qiwei
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Qiwei;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Qiwei", _Qiwei.EntityConfiguration, _Qiwei.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Beikszdcz
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Beikszdcz;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Beikszdcz", _Beikszdcz.EntityConfiguration, _Beikszdcz.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Xiuzs
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Xiuzs;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Xiuzs", _Xiuzs.EntityConfiguration, _Xiuzs.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Saibtsh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Saibtsh;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Saibtsh", _Saibtsh.EntityConfiguration, _Saibtsh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Bogsh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Bogsh;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Bogsh", _Bogsh.EntityConfiguration, _Bogsh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Chuld
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Chuld;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Chuld", _Chuld.EntityConfiguration, _Chuld.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Gand
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Gand;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Gand", _Gand.EntityConfiguration, _Gand.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Buhfw
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Buhfw;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Buhfw", _Buhfw.EntityConfiguration, _Buhfw.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Liuhl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Liuhl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Liuhl", _Liuhl.EntityConfiguration, _Liuhl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Benhl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Benhl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Benhl", _Benhl.EntityConfiguration, _Benhl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Zhengjwhl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zhengjwhl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Zhengjwhl", _Zhengjwhl.EntityConfiguration, _Zhengjwhl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Qian
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Qian;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Qian", _Qian.EntityConfiguration, _Qian.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Shen
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Shen;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Shen", _Shen.EntityConfiguration, _Shen.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Sedh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Sedh;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Sedh", _Sedh.EntityConfiguration, _Sedh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Tongpfs
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Tongpfs;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Tongpfs", _Tongpfs.EntityConfiguration, _Tongpfs.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Jixzzjsf
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Jixzzjsf;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Jixzzjsf", _Jixzzjsf.EntityConfiguration, _Jixzzjsf.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem shuihl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _shuihl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("shuihl", _shuihl.EntityConfiguration, _shuihl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Inspector
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Inspector;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Inspector", _Inspector.EntityConfiguration, _Inspector.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Liucl100d
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Liucl100d;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Liucl100d", _Liucl100d.EntityConfiguration, _Liucl100d.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Liucl120d
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Liucl120d;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Liucl120d", _Liucl120d.EntityConfiguration, _Liucl120d.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Canll
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Canll;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Canll", _Canll.EntityConfiguration, _Canll.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Xiuz
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Xiuz;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Xiuz", _Xiuz.EntityConfiguration, _Xiuz.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Fangxthl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Fangxthl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Fangxthl", _Fangxthl.EntityConfiguration, _Fangxthl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Bossy
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Bossy;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Bossy", _Bossy.EntityConfiguration, _Bossy.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Shuirxshj
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Shuirxshj;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Shuirxshj", _Shuirxshj.EntityConfiguration, _Shuirxshj.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Youzsy
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Youzsy;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Youzsy", _Youzsy.EntityConfiguration, _Youzsy.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MTBE
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MTBE;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MTBE", _MTBE.EntityConfiguration, _MTBE.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Juhw
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Juhw;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Juhw", _Juhw.EntityConfiguration, _Juhw.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem C4
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _C4;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("C4", _C4.EntityConfiguration, _C4.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Jiac
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Jiac;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Jiac", _Jiac.EntityConfiguration, _Jiac.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Shudc
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Shudc;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Shudc", _Shudc.EntityConfiguration, _Shudc.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Dingx2
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Dingx2;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Dingx2", _Dingx2.EntityConfiguration, _Dingx2.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Yidx
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Yidx;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Yidx", _Yidx.EntityConfiguration, _Yidx.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem C3C4
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _C3C4;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("C3C4", _C3C4.EntityConfiguration, _C3C4.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Zongl
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zongl;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Zongl", _Zongl.EntityConfiguration, _Zongl.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Youls
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Youls;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Youls", _Youls.EntityConfiguration, _Youls.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Dingx1
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Dingx1;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Dingx1", _Dingx1.EntityConfiguration, _Dingx1.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Zhengydw
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zhengydw;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Zhengydw", _Zhengydw.EntityConfiguration, _Zhengydw.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Yidx2dx
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Yidx2dx;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Yidx2dx", _Yidx2dx.EntityConfiguration, _Yidx2dx.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Dingexbex
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Dingexbex;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Dingexbex", _Dingexbex.EntityConfiguration, _Dingexbex.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Bingq
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Bingq;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Bingq", _Bingq.EntityConfiguration, _Bingq.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Zongqj
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Zongqj;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Zongqj", _Zongqj.EntityConfiguration, _Zongqj.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CO
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CO;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CO", _CO.EntityConfiguration, _CO.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CO2
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CO2;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CO2", _CO2.EntityConfiguration, _CO2.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Waig
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Waig;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Waig", _Waig.EntityConfiguration, _Waig.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Fill
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Fill;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Fill", _Fill.EntityConfiguration, _Fill.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ProductPriceArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.ProductPrice>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.ProductPrice\" mappingName=\"ProductPrice\" isReadOnly=\"f" +
    "alse\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"fal" +
    "se\">\r\n  <Properties>\r\n    <Property name=\"ProductPriceID\" mappingName=\"ProductPr" +
    "iceID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" " +
    "sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.S" +
    "taticEntities.Material\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isIn" +
    "herited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"" +
    "true\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPrope" +
    "rtyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @M" +
    "aterial\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.Stat" +
    "icEntities.Material\" relatedForeignKey=\"MaterialID\" isSerializationIgnore=\"true\"" +
    " />\r\n    <Property name=\"Price\" mappingName=\"Price\" type=\"System.Decimal\" mappin" +
    "gColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContai" +
    "ned=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=" +
    "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" i" +
    "sNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pro" +
    "perty name=\"UpdateDate\" mappingName=\"UpdateDate\" type=\"System.DateTime\" mappingC" +
    "olumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Propertie" +
    "s>\r\n</EntityConfiguration>")]
    public partial class ProductPrice : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ProductPriceEntityConfiguration;

        protected int _ProductPriceID;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected decimal _Price;

        protected global::System.DateTime _UpdateDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.ProductPrice left, global::Rock.StaticEntities.ProductPrice right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.ProductPrice left, global::Rock.StaticEntities.ProductPrice right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ProductPriceID
        {
            get
            {
                return this._ProductPriceID;
            }
            set
            {
                this.OnPropertyChanged("ProductPriceID", this._ProductPriceID, value);
                this._ProductPriceID = value;
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public decimal Price
        {
            get
            {
                return this._Price;
            }
            set
            {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }

        public global::System.DateTime UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
            set
            {
                this.OnPropertyChanged("UpdateDate", this._UpdateDate, value);
                this._UpdateDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((ProductPrice._ProductPriceEntityConfiguration == null))
            {
                ProductPrice._ProductPriceEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.ProductPrice");
            }
            return ProductPrice._ProductPriceEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.ProductPrice", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ProductPriceID,
                        this._Material_MaterialID,
                        this._Price,
                        this._UpdateDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ProductPriceID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Material_MaterialID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Price = reader.GetDecimal(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._UpdateDate = this.GetDateTime(reader, 3);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ProductPriceID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Material_MaterialID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Price = ((decimal)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._UpdateDate = this.GetDateTime(row, 3);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.ProductPrice).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.ProductPrice)(obj)).isAttached)
                        && (this.ProductPriceID == ((global::Rock.StaticEntities.ProductPrice)(obj)).ProductPriceID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ProductPriceID = new Rock.Orm.Common.PropertyItem("ProductPriceID", "Rock.StaticEntities.ProductPrice");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.ProductPrice");

            protected Rock.Orm.Common.PropertyItem _Price = new Rock.Orm.Common.PropertyItem("Price", "Rock.StaticEntities.ProductPrice");

            protected Rock.Orm.Common.PropertyItem _UpdateDate = new Rock.Orm.Common.PropertyItem("UpdateDate", "Rock.StaticEntities.ProductPrice");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ProductPriceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductPriceID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductPriceID", _ProductPriceID.EntityConfiguration, _ProductPriceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Price
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Price;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem UpdateDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UpdateDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UpdateDate", _UpdateDate.EntityConfiguration, _UpdateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class PriceApplyArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.PriceApply>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.PriceApply\" mappingName=\"PriceApply\" isReadOnly=\"false" +
    "\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">" +
    "\r\n  <Properties>\r\n    <Property name=\"PriceApplyID\" mappingName=\"PriceApplyID\" t" +
    "ype=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"PriceApplyNum\" mappingName=\"PriceApplyNum\" type=\"System" +
    ".String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar" +
    "(30\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"ProductName\" mappingName=\"ProductName\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Over50\" mappingName=\"Over50\" type=\"System.Boolean\" mappingC" +
    "olumnType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"NeedLeadership\" mappingName=\"NeedLeadership\" type=\"System.Boolean\" mappingColum" +
    "nType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isP" +
    "rimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Nee" +
    "dCompany\" mappingName=\"NeedCompany\" type=\"System.Boolean\" mappingColumnType=\"Sys" +
    "tem.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=" +
    "\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelatio" +
    "nKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Reason\" mappi" +
    "ngName=\"Reason\" type=\"System.String\" mappingColumnType=\"System.String\" isInherit" +
    "ed=\"false\" sqlType=\"nvarchar(2000\" isContained=\"false\" isPrimaryKey=\"false\" isQu" +
    "ery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInd" +
    "exPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Agent\" mappingName=\"Agen" +
    "t\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sq" +
    "lType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isR" +
    "eadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
    "\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializati" +
    "onIgnore=\"false\" />\r\n    <Property name=\"CreateDate\" mappingName=\"CreateDate\" ty" +
    "pe=\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sql" +
    "Type=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadO" +
    "nly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgn" +
    "ore=\"false\" />\r\n    <Property name=\"State\" mappingName=\"State\" type=\"System.Stri" +
    "ng\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"PriceApplyDetals\" mappingName=\"PriceApplyDetals\" type=\"Rock." +
    "StaticEntities.PriceApplyDetalArrayList\" mappingColumnType=\"Rock.StaticEntities." +
    "PriceApplyDetalArrayList\" isInherited=\"false\" sqlType=\"nvarchar(127)\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"true\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotN" +
    "ull=\"false\" queryWhere=\"{PriceApplyID} = @PriceApplyID\" queryType=\"FkQuery\" isRe" +
    "lationKey=\"false\" relatedType=\"Rock.StaticEntities.PriceApplyDetal\" relatedForei" +
    "gnKey=\"PriceApplyID\" isSerializationIgnore=\"true\" />\r\n  </Properties>\r\n</EntityC" +
    "onfiguration>")]
    public partial class PriceApply : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _PriceApplyEntityConfiguration;

        protected int _PriceApplyID;

        protected string _PriceApplyNum;

        protected string _ProductName;

        protected bool _Over50;

        protected bool _NeedLeadership;

        protected bool _NeedCompany;

        protected string _Reason;

        protected string _Agent;

        protected global::System.DateTime _CreateDate;

        protected string _State;

        protected global::Rock.StaticEntities.PriceApplyDetalArrayList _PriceApplyDetals;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.PriceApply left, global::Rock.StaticEntities.PriceApply right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.PriceApply left, global::Rock.StaticEntities.PriceApply right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int PriceApplyID
        {
            get
            {
                return this._PriceApplyID;
            }
            set
            {
                this.OnPropertyChanged("PriceApplyID", this._PriceApplyID, value);
                this._PriceApplyID = value;
            }
        }

        public string PriceApplyNum
        {
            get
            {
                return this._PriceApplyNum;
            }
            set
            {
                this.OnPropertyChanged("PriceApplyNum", this._PriceApplyNum, value);
                this._PriceApplyNum = value;
            }
        }

        public string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                this.OnPropertyChanged("ProductName", this._ProductName, value);
                this._ProductName = value;
            }
        }

        public bool Over50
        {
            get
            {
                return this._Over50;
            }
            set
            {
                this.OnPropertyChanged("Over50", this._Over50, value);
                this._Over50 = value;
            }
        }

        public bool NeedLeadership
        {
            get
            {
                return this._NeedLeadership;
            }
            set
            {
                this.OnPropertyChanged("NeedLeadership", this._NeedLeadership, value);
                this._NeedLeadership = value;
            }
        }

        public bool NeedCompany
        {
            get
            {
                return this._NeedCompany;
            }
            set
            {
                this.OnPropertyChanged("NeedCompany", this._NeedCompany, value);
                this._NeedCompany = value;
            }
        }

        public string Reason
        {
            get
            {
                return this._Reason;
            }
            set
            {
                this.OnPropertyChanged("Reason", this._Reason, value);
                this._Reason = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public global::System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.PriceApplyDetalArrayList PriceApplyDetals
        {
            get
            {
                if (this.IsQueryPropertyLoaded("PriceApplyDetals"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.PriceApplyDetalArrayList _a1;
                    _a1 = new Rock.StaticEntities.PriceApplyDetalArrayList();
                    _a1.AddRange(((global::Rock.StaticEntities.PriceApplyDetal[])(this.Query(typeof(global::Rock.StaticEntities.PriceApplyDetal), "PriceApplyDetals", this))));
                    this.OnQueryPropertyChanged("PriceApplyDetals", this._PriceApplyDetals, _a1);
                    this._PriceApplyDetals = _a1;
                }
                if ((this._PriceApplyDetals == null))
                {
                    global::Rock.StaticEntities.PriceApplyDetalArrayList _a1;
                    _a1 = new global::Rock.StaticEntities.PriceApplyDetalArrayList();
                    this.BindArrayListEventHandlers("PriceApplyDetals", _a1);
                    this._PriceApplyDetals = _a1;
                }
                return this._PriceApplyDetals;
            }
            set
            {
                this.OnQueryPropertyChanged("PriceApplyDetals", this.PriceApplyDetals, value);
                this._PriceApplyDetals = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PriceApply._PriceApplyEntityConfiguration == null))
            {
                PriceApply._PriceApplyEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.PriceApply");
            }
            return PriceApply._PriceApplyEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.PriceApply", "PriceApplyDetals"))))
            {
                global::Rock.StaticEntities.PriceApplyDetalArrayList _a1;
                _a1 = new Rock.StaticEntities.PriceApplyDetalArrayList();
                _a1.AddRange(((global::Rock.StaticEntities.PriceApplyDetal[])(this.Query(typeof(global::Rock.StaticEntities.PriceApplyDetal), "PriceApplyDetals", this))));
                this.OnQueryPropertyChanged("PriceApplyDetals", this._PriceApplyDetals, _a1);
                this._PriceApplyDetals = _a1;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._PriceApplyID,
                        this._PriceApplyNum,
                        this._ProductName,
                        this._Over50,
                        this._NeedLeadership,
                        this._NeedCompany,
                        this._Reason,
                        this._Agent,
                        this._CreateDate,
                        this._State};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._PriceApplyID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._PriceApplyNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ProductName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Over50 = reader.GetBoolean(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._NeedLeadership = reader.GetBoolean(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._NeedCompany = reader.GetBoolean(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Reason = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Agent = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._CreateDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._State = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._PriceApplyID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._PriceApplyNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ProductName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Over50 = ((bool)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._NeedLeadership = ((bool)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._NeedCompany = ((bool)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Reason = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Agent = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._CreateDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._State = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.PriceApply).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.PriceApply)(obj)).isAttached)
                        && (this.PriceApplyID == ((global::Rock.StaticEntities.PriceApply)(obj)).PriceApplyID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _PriceApplyID = new Rock.Orm.Common.PropertyItem("PriceApplyID", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _PriceApplyNum = new Rock.Orm.Common.PropertyItem("PriceApplyNum", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _ProductName = new Rock.Orm.Common.PropertyItem("ProductName", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _Over50 = new Rock.Orm.Common.PropertyItem("Over50", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _NeedLeadership = new Rock.Orm.Common.PropertyItem("NeedLeadership", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _NeedCompany = new Rock.Orm.Common.PropertyItem("NeedCompany", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _Reason = new Rock.Orm.Common.PropertyItem("Reason", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _CreateDate = new Rock.Orm.Common.PropertyItem("CreateDate", "Rock.StaticEntities.PriceApply");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.PriceApply");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem PriceApplyID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceApplyID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceApplyID", _PriceApplyID.EntityConfiguration, _PriceApplyID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PriceApplyNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceApplyNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceApplyNum", _PriceApplyNum.EntityConfiguration, _PriceApplyNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ProductName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ProductName", _ProductName.EntityConfiguration, _ProductName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Over50
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Over50;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Over50", _Over50.EntityConfiguration, _Over50.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NeedLeadership
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NeedLeadership;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NeedLeadership", _NeedLeadership.EntityConfiguration, _NeedLeadership.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NeedCompany
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NeedCompany;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NeedCompany", _NeedCompany.EntityConfiguration, _NeedCompany.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Reason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Reason;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Reason", _Reason.EntityConfiguration, _Reason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class PriceApplyDetalArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.PriceApplyDetal>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.PriceApplyDetal\" mappingName=\"PriceApplyDetal\" isReadO" +
    "nly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelatio" +
    "n=\"false\">\r\n  <Properties>\r\n    <Property name=\"PriceApplyDetalID\" mappingName=\"" +
    "PriceApplyDetalID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInheri" +
    "ted=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"PriceApply\" mappingName=\"PriceApply" +
    "ID\" type=\"Rock.StaticEntities.PriceApply\" mappingColumnType=\"System.Nullable`1[S" +
    "ystem.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey" +
    "=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"f" +
    "alse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=" +
    "\"{PriceApplyID} = @PriceApply\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" " +
    "relatedType=\"Rock.StaticEntities.PriceApply\" relatedForeignKey=\"PriceApplyID\" is" +
    "SerializationIgnore=\"true\" />\r\n    <Property name=\"PriceCategory\" mappingName=\"P" +
    "riceCategory\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited" +
    "=\"false\" sqlType=\"nvarchar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" is" +
    "SerializationIgnore=\"false\" />\r\n    <Property name=\"BeforePrice\" mappingName=\"Be" +
    "forePrice\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" isInherited=" +
    "\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=" +
    "\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
    "opertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isS" +
    "erializationIgnore=\"false\" />\r\n    <Property name=\"ApplyPrice\" mappingName=\"Appl" +
    "yPrice\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" isInherited=\"fa" +
    "lse\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fa" +
    "lse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
    "rtyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSeri" +
    "alizationIgnore=\"false\" />\r\n    <Property name=\"PriceRange\" mappingName=\"PriceRa" +
    "nge\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.Nullable" +
    "`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"EditState\" mappingName=\"EditState\" type=\"System.String\" mappingColumnType=\"S" +
    "ystem.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPr" +
    "imaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexP" +
    "roperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</Enti" +
    "tyConfiguration>")]
    public partial class PriceApplyDetal : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _PriceApplyDetalEntityConfiguration;

        protected int _PriceApplyDetalID;

        protected global::Rock.StaticEntities.PriceApply _PriceApply;

        protected global::System.Int32? _PriceApply_PriceApplyID;

        protected string _PriceCategory;

        protected decimal _BeforePrice;

        protected decimal _ApplyPrice;

        protected global::System.Decimal? _PriceRange;

        protected string _EditState;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.PriceApplyDetal left, global::Rock.StaticEntities.PriceApplyDetal right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.PriceApplyDetal left, global::Rock.StaticEntities.PriceApplyDetal right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int PriceApplyDetalID
        {
            get
            {
                return this._PriceApplyDetalID;
            }
            set
            {
                this.OnPropertyChanged("PriceApplyDetalID", this._PriceApplyDetalID, value);
                this._PriceApplyDetalID = value;
            }
        }

        public global::System.Int32? PriceApplyID
        {
            get
            {
                return _PriceApply_PriceApplyID;
            }
            set
            {
                this.OnPropertyChanged("PriceApply", _PriceApply_PriceApplyID, value);
                _PriceApply_PriceApplyID = value;
                this.SetPropertyUnloaded("PriceApply");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.PriceApply PriceApply
        {
            get
            {
                if (this.IsQueryPropertyLoaded("PriceApply"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.PriceApply _obj;
                    _obj = ((global::Rock.StaticEntities.PriceApply)(this.QueryOne(typeof(global::Rock.StaticEntities.PriceApply), "PriceApply", this)));
                    this.OnQueryOnePropertyChanged("PriceApply", this._PriceApply, _obj);
                    this._PriceApply = _obj;
                }
                return this._PriceApply;
            }
            set
            {
                this.OnQueryOnePropertyChanged("PriceApply", this.PriceApply, value);
                this._PriceApply = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("PriceApply", this._PriceApply_PriceApplyID, null);
                    this._PriceApply_PriceApplyID = null;
                }
                else
                {
                    this.OnPropertyChanged("PriceApply", this._PriceApply_PriceApplyID, value.PriceApplyID);
                    this._PriceApply_PriceApplyID = value.PriceApplyID;
                }
            }
        }

        public string PriceCategory
        {
            get
            {
                return this._PriceCategory;
            }
            set
            {
                this.OnPropertyChanged("PriceCategory", this._PriceCategory, value);
                this._PriceCategory = value;
            }
        }

        public decimal BeforePrice
        {
            get
            {
                return this._BeforePrice;
            }
            set
            {
                this.OnPropertyChanged("BeforePrice", this._BeforePrice, value);
                this._BeforePrice = value;
            }
        }

        public decimal ApplyPrice
        {
            get
            {
                return this._ApplyPrice;
            }
            set
            {
                this.OnPropertyChanged("ApplyPrice", this._ApplyPrice, value);
                this._ApplyPrice = value;
            }
        }

        public global::System.Decimal? PriceRange
        {
            get
            {
                return this._PriceRange;
            }
            set
            {
                this.OnPropertyChanged("PriceRange", this._PriceRange, value);
                this._PriceRange = value;
            }
        }

        public string EditState
        {
            get
            {
                return this._EditState;
            }
            set
            {
                this.OnPropertyChanged("EditState", this._EditState, value);
                this._EditState = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PriceApplyDetal._PriceApplyDetalEntityConfiguration == null))
            {
                PriceApplyDetal._PriceApplyDetalEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.PriceApplyDetal");
            }
            return PriceApplyDetal._PriceApplyDetalEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.PriceApplyDetal", "PriceApply"))))
            {
                global::Rock.StaticEntities.PriceApply _obj;
                _obj = ((global::Rock.StaticEntities.PriceApply)(this.QueryOne(typeof(global::Rock.StaticEntities.PriceApply), "PriceApply", this)));
                this.OnQueryOnePropertyChanged("PriceApply", this._PriceApply, _obj);
                this._PriceApply = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._PriceApplyDetalID,
                        this._PriceApply_PriceApplyID,
                        this._PriceCategory,
                        this._BeforePrice,
                        this._ApplyPrice,
                        this._PriceRange,
                        this._EditState};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._PriceApplyDetalID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._PriceApply_PriceApplyID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._PriceCategory = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._BeforePrice = reader.GetDecimal(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ApplyPrice = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._PriceRange = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._EditState = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._PriceApplyDetalID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._PriceApply_PriceApplyID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._PriceCategory = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._BeforePrice = ((decimal)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ApplyPrice = ((decimal)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._PriceRange = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._EditState = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.PriceApplyDetal).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.PriceApplyDetal)(obj)).isAttached)
                        && (this.PriceApplyDetalID == ((global::Rock.StaticEntities.PriceApplyDetal)(obj)).PriceApplyDetalID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _PriceApplyDetalID = new Rock.Orm.Common.PropertyItem("PriceApplyDetalID", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _PriceApplyID = new Rock.Orm.Common.PropertyItem("PriceApply", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _PriceCategory = new Rock.Orm.Common.PropertyItem("PriceCategory", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _BeforePrice = new Rock.Orm.Common.PropertyItem("BeforePrice", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _ApplyPrice = new Rock.Orm.Common.PropertyItem("ApplyPrice", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _PriceRange = new Rock.Orm.Common.PropertyItem("PriceRange", "Rock.StaticEntities.PriceApplyDetal");

            protected Rock.Orm.Common.PropertyItem _EditState = new Rock.Orm.Common.PropertyItem("EditState", "Rock.StaticEntities.PriceApplyDetal");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem PriceApplyDetalID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceApplyDetalID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceApplyDetalID", _PriceApplyDetalID.EntityConfiguration, _PriceApplyDetalID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.PriceApply.@__Columns PriceApply
            {
                get
                {
                    return new global::Rock.StaticEntities.PriceApply.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "PriceApply"));
                }
            }

            public Rock.Orm.Common.PropertyItem PriceApplyID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceApplyID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceApply", _PriceApplyID.EntityConfiguration, _PriceApplyID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PriceCategory
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceCategory;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceCategory", _PriceCategory.EntityConfiguration, _PriceCategory.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BeforePrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BeforePrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BeforePrice", _BeforePrice.EntityConfiguration, _BeforePrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ApplyPrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ApplyPrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ApplyPrice", _ApplyPrice.EntityConfiguration, _ApplyPrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PriceRange
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceRange;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceRange", _PriceRange.EntityConfiguration, _PriceRange.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EditState
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EditState;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EditState", _EditState.EntityConfiguration, _EditState.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}

namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class PlanSaleArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.PlanSale>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.PlanSale\" mappingName=\"PlanSale\" isReadOnly=\"false\" is" +
    "BatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  " +
    "<Properties>\r\n    <Property name=\"PlanSaleID\" mappingName=\"PlanSaleID\" type=\"Sys" +
    "tem.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.StaticEntities.Ma" +
    "terial\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
    "sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly" +
    "=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @Material\" queryTy" +
    "pe=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Mater" +
    "ial\" relatedForeignKey=\"MaterialID\" isSerializationIgnore=\"true\" />\r\n    <Proper" +
    "ty name=\"Quantity\" mappingName=\"Quantity\" type=\"System.Decimal\" mappingColumnTyp" +
    "e=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name" +
    "=\"BeginDate\" mappingName=\"BeginDate\" type=\"System.DateTime\" mappingColumnType=\"S" +
    "ystem.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPri" +
    "maryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"EndDa" +
    "te\" mappingName=\"EndDate\" type=\"System.DateTime\" mappingColumnType=\"System.DateT" +
    "ime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"fa" +
    "lse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fal" +
    "se\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfigurati" +
    "on>")]
    public partial class PlanSale : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _PlanSaleEntityConfiguration;

        protected int _PlanSaleID;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected decimal _Quantity;

        protected global::System.DateTime _BeginDate;

        protected global::System.DateTime _EndDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.PlanSale left, global::Rock.StaticEntities.PlanSale right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.PlanSale left, global::Rock.StaticEntities.PlanSale right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int PlanSaleID
        {
            get
            {
                return this._PlanSaleID;
            }
            set
            {
                this.OnPropertyChanged("PlanSaleID", this._PlanSaleID, value);
                this._PlanSaleID = value;
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public global::System.DateTime BeginDate
        {
            get
            {
                return this._BeginDate;
            }
            set
            {
                this.OnPropertyChanged("BeginDate", this._BeginDate, value);
                this._BeginDate = value;
            }
        }

        public global::System.DateTime EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                this.OnPropertyChanged("EndDate", this._EndDate, value);
                this._EndDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PlanSale._PlanSaleEntityConfiguration == null))
            {
                PlanSale._PlanSaleEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.PlanSale");
            }
            return PlanSale._PlanSaleEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.PlanSale", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._PlanSaleID,
                        this._Material_MaterialID,
                        this._Quantity,
                        this._BeginDate,
                        this._EndDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._PlanSaleID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Material_MaterialID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Quantity = reader.GetDecimal(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._BeginDate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._EndDate = this.GetDateTime(reader, 4);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._PlanSaleID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Material_MaterialID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Quantity = ((decimal)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._BeginDate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._EndDate = this.GetDateTime(row, 4);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.PlanSale).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.PlanSale)(obj)).isAttached)
                        && (this.PlanSaleID == ((global::Rock.StaticEntities.PlanSale)(obj)).PlanSaleID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _PlanSaleID = new Rock.Orm.Common.PropertyItem("PlanSaleID", "Rock.StaticEntities.PlanSale");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.PlanSale");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.PlanSale");

            protected Rock.Orm.Common.PropertyItem _BeginDate = new Rock.Orm.Common.PropertyItem("BeginDate", "Rock.StaticEntities.PlanSale");

            protected Rock.Orm.Common.PropertyItem _EndDate = new Rock.Orm.Common.PropertyItem("EndDate", "Rock.StaticEntities.PlanSale");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem PlanSaleID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanSaleID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PlanSaleID", _PlanSaleID.EntityConfiguration, _PlanSaleID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BeginDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BeginDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BeginDate", _BeginDate.EntityConfiguration, _BeginDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EndDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EndDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EndDate", _EndDate.EntityConfiguration, _EndDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerPlanQuantityArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerPlanQuantity>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerPlanQuantity\" mappingName=\"CustomerPlanQuantit" +
    "y\" isReadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\"" +
    " isRelation=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerPlanQuantityID" +
    "\" mappingName=\"CustomerPlanQuantityID\" type=\"System.Int32\" mappingColumnType=\"Sy" +
    "stem.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"" +
    "true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fa" +
    "lse\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationK" +
    "ey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Customer\" mappi" +
    "ngName=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" mappingColumnType=\"Syste" +
    "m.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"tru" +
    "e\" queryWhere=\"{CustomerID} = @Customer\" queryType=\"FkReverseQuery\" isRelationKe" +
    "y=\"false\" relatedType=\"Rock.StaticEntities.Customer\" relatedForeignKey=\"Customer" +
    "ID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"Material\" mappingName=\"" +
    "MaterialID\" type=\"Rock.StaticEntities.Material\" mappingColumnType=\"System.Nullab" +
    "le`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" query" +
    "Where=\"{MaterialID} = @Material\" queryType=\"FkReverseQuery\" isRelationKey=\"false" +
    "\" relatedType=\"Rock.StaticEntities.Material\" relatedForeignKey=\"MaterialID\" isSe" +
    "rializationIgnore=\"true\" />\r\n    <Property name=\"Year\" mappingName=\"Year\" type=\"" +
    "System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Month\" mappingName=\"Month\" type=\"System.Int32\" mappingColum" +
    "nType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPri" +
    "maryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPr" +
    "operty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Quant" +
    "ity\" mappingName=\"Quantity\" type=\"System.Decimal\" mappingColumnType=\"System.Deci" +
    "mal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey" +
    "=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelati" +
    "onKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Uplimited\" m" +
    "appingName=\"Uplimited\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" " +
    "isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"fal" +
    "se\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Uplimited1\" mappi" +
    "ngName=\"Uplimited1\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"" +
    "System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" is" +
    "Contained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrie" +
    "ndKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fa" +
    "lse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n " +
    "   <Property name=\"UpLimited2\" mappingName=\"UpLimited2\" type=\"System.Nullable`1[" +
    "System.Decimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInherit" +
    "ed=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQue" +
    "ry=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInde" +
    "xPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\"" +
    " isSerializationIgnore=\"false\" />\r\n    <Property name=\"CurrentLevel\" mappingName" +
    "=\"CurrentLevel\" type=\"System.Nullable`1[System.Int32]\" mappingColumnType=\"System" +
    ".Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"f" +
    "alse\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name" +
    "=\"CreateDate\" mappingName=\"CreateDate\" type=\"System.DateTime\" mappingColumnType=" +
    "\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isP" +
    "rimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\"" +
    " isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</Enti" +
    "tyConfiguration>")]
    public partial class CustomerPlanQuantity : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerPlanQuantityEntityConfiguration;

        protected int _CustomerPlanQuantityID;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected int _Year;

        protected int _Month;

        protected decimal _Quantity;

        protected decimal _Uplimited;

        protected global::System.Decimal? _Uplimited1;

        protected global::System.Decimal? _UpLimited2;

        protected global::System.Int32? _CurrentLevel;

        protected global::System.DateTime _CreateDate;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerPlanQuantity left, global::Rock.StaticEntities.CustomerPlanQuantity right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerPlanQuantity left, global::Rock.StaticEntities.CustomerPlanQuantity right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerPlanQuantityID
        {
            get
            {
                return this._CustomerPlanQuantityID;
            }
            set
            {
                this.OnPropertyChanged("CustomerPlanQuantityID", this._CustomerPlanQuantityID, value);
                this._CustomerPlanQuantityID = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public int Year
        {
            get
            {
                return this._Year;
            }
            set
            {
                this.OnPropertyChanged("Year", this._Year, value);
                this._Year = value;
            }
        }

        public int Month
        {
            get
            {
                return this._Month;
            }
            set
            {
                this.OnPropertyChanged("Month", this._Month, value);
                this._Month = value;
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public decimal Uplimited
        {
            get
            {
                return this._Uplimited;
            }
            set
            {
                this.OnPropertyChanged("Uplimited", this._Uplimited, value);
                this._Uplimited = value;
            }
        }

        public global::System.Decimal? Uplimited1
        {
            get
            {
                return this._Uplimited1;
            }
            set
            {
                this.OnPropertyChanged("Uplimited1", this._Uplimited1, value);
                this._Uplimited1 = value;
            }
        }

        public global::System.Decimal? UpLimited2
        {
            get
            {
                return this._UpLimited2;
            }
            set
            {
                this.OnPropertyChanged("UpLimited2", this._UpLimited2, value);
                this._UpLimited2 = value;
            }
        }

        public global::System.Int32? CurrentLevel
        {
            get
            {
                return this._CurrentLevel;
            }
            set
            {
                this.OnPropertyChanged("CurrentLevel", this._CurrentLevel, value);
                this._CurrentLevel = value;
            }
        }

        public global::System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerPlanQuantity._CustomerPlanQuantityEntityConfiguration == null))
            {
                CustomerPlanQuantity._CustomerPlanQuantityEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerPlanQuantity");
            }
            return CustomerPlanQuantity._CustomerPlanQuantityEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerPlanQuantity", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerPlanQuantity", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerPlanQuantityID,
                        this._Customer_CustomerID,
                        this._Material_MaterialID,
                        this._Year,
                        this._Month,
                        this._Quantity,
                        this._Uplimited,
                        this._Uplimited1,
                        this._UpLimited2,
                        this._CurrentLevel,
                        this._CreateDate};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerPlanQuantityID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Customer_CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Material_MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Year = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Month = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Quantity = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Uplimited = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Uplimited1 = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._UpLimited2 = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._CurrentLevel = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._CreateDate = this.GetDateTime(reader, 10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerPlanQuantityID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Customer_CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Material_MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Year = ((int)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Month = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Quantity = ((decimal)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Uplimited = ((decimal)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Uplimited1 = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._UpLimited2 = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._CurrentLevel = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._CreateDate = this.GetDateTime(row, 10);
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerPlanQuantity).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerPlanQuantity)(obj)).isAttached)
                        && (this.CustomerPlanQuantityID == ((global::Rock.StaticEntities.CustomerPlanQuantity)(obj)).CustomerPlanQuantityID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerPlanQuantityID = new Rock.Orm.Common.PropertyItem("CustomerPlanQuantityID", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _Year = new Rock.Orm.Common.PropertyItem("Year", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _Month = new Rock.Orm.Common.PropertyItem("Month", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _Uplimited = new Rock.Orm.Common.PropertyItem("Uplimited", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _Uplimited1 = new Rock.Orm.Common.PropertyItem("Uplimited1", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _UpLimited2 = new Rock.Orm.Common.PropertyItem("UpLimited2", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _CurrentLevel = new Rock.Orm.Common.PropertyItem("CurrentLevel", "Rock.StaticEntities.CustomerPlanQuantity");

            protected Rock.Orm.Common.PropertyItem _CreateDate = new Rock.Orm.Common.PropertyItem("CreateDate", "Rock.StaticEntities.CustomerPlanQuantity");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerPlanQuantityID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerPlanQuantityID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerPlanQuantityID", _CustomerPlanQuantityID.EntityConfiguration, _CustomerPlanQuantityID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Year
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Year;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Year", _Year.EntityConfiguration, _Year.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Month
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Month;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Month", _Month.EntityConfiguration, _Month.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Uplimited
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Uplimited;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Uplimited", _Uplimited.EntityConfiguration, _Uplimited.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Uplimited1
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Uplimited1;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Uplimited1", _Uplimited1.EntityConfiguration, _Uplimited1.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem UpLimited2
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UpLimited2;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("UpLimited2", _UpLimited2.EntityConfiguration, _UpLimited2.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CurrentLevel
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CurrentLevel;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CurrentLevel", _CurrentLevel.EntityConfiguration, _CurrentLevel.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerPlanApplyArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerPlanApply>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerPlanApply\" mappingName=\"CustomerPlanApply\" isR" +
    "eadOnly=\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRel" +
    "ation=\"false\">\r\n  <Properties>\r\n    <Property name=\"CustomerPlanApplyID\" mapping" +
    "Name=\"CustomerPlanApplyID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" " +
    "isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuer" +
    "y=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" i" +
    "sSerializationIgnore=\"false\" />\r\n    <Property name=\"CustomerPlanQuantity\" mappi" +
    "ngName=\"CustomerPlanQuantityID\" type=\"Rock.StaticEntities.CustomerPlanQuantity\" " +
    "mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\"" +
    " isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLo" +
    "ad=\"true\" isNotNull=\"true\" queryWhere=\"{CustomerPlanQuantityID} = @CustomerPlanQ" +
    "uantity\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.Stat" +
    "icEntities.CustomerPlanQuantity\" relatedForeignKey=\"CustomerPlanQuantityID\" isSe" +
    "rializationIgnore=\"true\" />\r\n    <Property name=\"Quantity\" mappingName=\"Quantity" +
    "\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" isInherited=\"false\" s" +
    "qlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" i" +
    "sReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
    "c=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializat" +
    "ionIgnore=\"false\" />\r\n    <Property name=\"Level\" mappingName=\"Level\" type=\"Syste" +
    "m.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarcha" +
    "r(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false" +
    "\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazy" +
    "Load=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"Reason\" mappingName=\"Reason\" type=\"System.String\" mapp" +
    "ingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Salesman\" mappingName=\"Salesman\" type=\"System.String\" mappingColum" +
    "nType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"fal" +
    "se\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" " +
    "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull" +
    "=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"CreateDate\" mappingName=\"CreateDate\" type=\"System.DateTime\" mappingColumnTyp" +
    "e=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tru" +
    "e\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"S" +
    "tate\" mappingName=\"State\" type=\"System.String\" mappingColumnType=\"System.String\"" +
    " isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"fal" +
    "se\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mapping" +
    "Name=\"Comment\" type=\"System.String\" mappingColumnType=\"System.String\" isInherite" +
    "d=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrimaryKey=\"false\" isQuer" +
    "y=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" " +
    "isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class CustomerPlanApply : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerPlanApplyEntityConfiguration;

        protected int _CustomerPlanApplyID;

        protected global::Rock.StaticEntities.CustomerPlanQuantity _CustomerPlanQuantity;

        protected global::System.Int32? _CustomerPlanQuantity_CustomerPlanQuantityID;

        protected decimal _Quantity;

        protected string _Level;

        protected string _Reason;

        protected string _Salesman;

        protected global::System.DateTime _CreateDate;

        protected string _State;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerPlanApply left, global::Rock.StaticEntities.CustomerPlanApply right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerPlanApply left, global::Rock.StaticEntities.CustomerPlanApply right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerPlanApplyID
        {
            get
            {
                return this._CustomerPlanApplyID;
            }
            set
            {
                this.OnPropertyChanged("CustomerPlanApplyID", this._CustomerPlanApplyID, value);
                this._CustomerPlanApplyID = value;
            }
        }

        public global::System.Int32? CustomerPlanQuantityID
        {
            get
            {
                return _CustomerPlanQuantity_CustomerPlanQuantityID;
            }
            set
            {
                this.OnPropertyChanged("CustomerPlanQuantity", _CustomerPlanQuantity_CustomerPlanQuantityID, value);
                _CustomerPlanQuantity_CustomerPlanQuantityID = value;
                this.SetPropertyUnloaded("CustomerPlanQuantity");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.CustomerPlanQuantity CustomerPlanQuantity
        {
            get
            {
                if (this.IsQueryPropertyLoaded("CustomerPlanQuantity"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.CustomerPlanQuantity _obj;
                    _obj = ((global::Rock.StaticEntities.CustomerPlanQuantity)(this.QueryOne(typeof(global::Rock.StaticEntities.CustomerPlanQuantity), "CustomerPlanQuantity", this)));
                    this.OnQueryOnePropertyChanged("CustomerPlanQuantity", this._CustomerPlanQuantity, _obj);
                    this._CustomerPlanQuantity = _obj;
                }
                return this._CustomerPlanQuantity;
            }
            set
            {
                this.OnQueryOnePropertyChanged("CustomerPlanQuantity", this.CustomerPlanQuantity, value);
                this._CustomerPlanQuantity = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("CustomerPlanQuantity", this._CustomerPlanQuantity_CustomerPlanQuantityID, null);
                    this._CustomerPlanQuantity_CustomerPlanQuantityID = null;
                }
                else
                {
                    this.OnPropertyChanged("CustomerPlanQuantity", this._CustomerPlanQuantity_CustomerPlanQuantityID, value.CustomerPlanQuantityID);
                    this._CustomerPlanQuantity_CustomerPlanQuantityID = value.CustomerPlanQuantityID;
                }
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public string Level
        {
            get
            {
                return this._Level;
            }
            set
            {
                this.OnPropertyChanged("Level", this._Level, value);
                this._Level = value;
            }
        }

        public string Reason
        {
            get
            {
                return this._Reason;
            }
            set
            {
                this.OnPropertyChanged("Reason", this._Reason, value);
                this._Reason = value;
            }
        }

        public string Salesman
        {
            get
            {
                return this._Salesman;
            }
            set
            {
                this.OnPropertyChanged("Salesman", this._Salesman, value);
                this._Salesman = value;
            }
        }

        public global::System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerPlanApply._CustomerPlanApplyEntityConfiguration == null))
            {
                CustomerPlanApply._CustomerPlanApplyEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerPlanApply");
            }
            return CustomerPlanApply._CustomerPlanApplyEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerPlanApply", "CustomerPlanQuantity"))))
            {
                global::Rock.StaticEntities.CustomerPlanQuantity _obj;
                _obj = ((global::Rock.StaticEntities.CustomerPlanQuantity)(this.QueryOne(typeof(global::Rock.StaticEntities.CustomerPlanQuantity), "CustomerPlanQuantity", this)));
                this.OnQueryOnePropertyChanged("CustomerPlanQuantity", this._CustomerPlanQuantity, _obj);
                this._CustomerPlanQuantity = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerPlanApplyID,
                        this._CustomerPlanQuantity_CustomerPlanQuantityID,
                        this._Quantity,
                        this._Level,
                        this._Reason,
                        this._Salesman,
                        this._CreateDate,
                        this._State,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerPlanApplyID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerPlanQuantity_CustomerPlanQuantityID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Quantity = reader.GetDecimal(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Level = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Reason = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Salesman = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._CreateDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._State = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Comment = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerPlanApplyID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerPlanQuantity_CustomerPlanQuantityID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Quantity = ((decimal)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Level = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Reason = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Salesman = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._CreateDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._State = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Comment = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerPlanApply).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerPlanApply)(obj)).isAttached)
                        && (this.CustomerPlanApplyID == ((global::Rock.StaticEntities.CustomerPlanApply)(obj)).CustomerPlanApplyID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerPlanApplyID = new Rock.Orm.Common.PropertyItem("CustomerPlanApplyID", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _CustomerPlanQuantityID = new Rock.Orm.Common.PropertyItem("CustomerPlanQuantity", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _Level = new Rock.Orm.Common.PropertyItem("Level", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _Reason = new Rock.Orm.Common.PropertyItem("Reason", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _Salesman = new Rock.Orm.Common.PropertyItem("Salesman", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _CreateDate = new Rock.Orm.Common.PropertyItem("CreateDate", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.CustomerPlanApply");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.CustomerPlanApply");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerPlanApplyID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerPlanApplyID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerPlanApplyID", _CustomerPlanApplyID.EntityConfiguration, _CustomerPlanApplyID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.CustomerPlanQuantity.@__Columns CustomerPlanQuantity
            {
                get
                {
                    return new global::Rock.StaticEntities.CustomerPlanQuantity.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "CustomerPlanQuantity"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerPlanQuantityID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerPlanQuantityID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerPlanQuantity", _CustomerPlanQuantityID.EntityConfiguration, _CustomerPlanQuantityID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Level
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Level;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Level", _Level.EntityConfiguration, _Level.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Reason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Reason;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Reason", _Reason.EntityConfiguration, _Reason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Salesman
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Salesman;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Salesman", _Salesman.EntityConfiguration, _Salesman.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ContractArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Contract>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Contract\" mappingName=\"Contract\" isReadOnly=\"false\" is" +
    "BatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  " +
    "<Properties>\r\n    <Property name=\"ContractID\" mappingName=\"ContractID\" type=\"Sys" +
    "tem.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"ContractNum\" mappingName=\"ContractNum\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.StaticEntities.Mater" +
    "ial\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sql" +
    "Type=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"f" +
    "alse\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @Material\" queryType=" +
    "\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Material" +
    "\" relatedForeignKey=\"MaterialID\" isSerializationIgnore=\"true\" />\r\n    <Property " +
    "name=\"MaterialGrade\" mappingName=\"MaterialGrade\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Customer\" mappingName=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" ma" +
    "ppingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"i" +
    "nt\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" i" +
    "sFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad" +
    "=\"true\" isNotNull=\"true\" queryWhere=\"{CustomerID} = @Customer\" queryType=\"FkReve" +
    "rseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Customer\" relat" +
    "edForeignKey=\"CustomerID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"P" +
    "riceType\" mappingName=\"PriceType\" type=\"System.String\" mappingColumnType=\"System" +
    ".String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimary" +
    "Key=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProper" +
    "ty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRe" +
    "lationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Contract" +
    "Type\" mappingName=\"ContractType\" type=\"System.String\" mappingColumnType=\"System." +
    "String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryK" +
    "ey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"SignDate\" " +
    "mappingName=\"SignDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnTy" +
    "pe=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"Number\" mappingName=\"Number\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(10\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Quantity\" mappingName=\"Quantity\" type=\"System.Decimal\" mappingColumnType=" +
    "\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tr" +
    "ue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "Price\" mappingName=\"Price\" type=\"System.Nullable`1[System.Decimal]\" mappingColum" +
    "nType=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(1" +
    "8,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"PipePrice\" mappingName=\"PipePrice\" type=\"System.Nullab" +
    "le`1[System.Decimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isIn" +
    "herited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Total\" mappingName=\"" +
    "Total\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.Nullab" +
    "le`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property " +
    "name=\"Measure\" mappingName=\"Measure\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Agent" +
    "\" mappingName=\"Agent\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Ship\" mappingName=\"S" +
    "hip\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" " +
    "sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" i" +
    "sReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
    "c=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializa" +
    "tionIgnore=\"false\" />\r\n    <Property name=\"Payment\" mappingName=\"Payment\" type=\"" +
    "System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nv" +
    "archar(30\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"" +
    "false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=" +
    "\"false\" />\r\n    <Property name=\"EffectiveDate\" mappingName=\"EffectiveDate\" type=" +
    "\"System.DateTime\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlTyp" +
    "e=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Causes\" mappingName=\"Causes\" type=\"System.Strin" +
    "g\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(500\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Closed\" mappingName=\"Closed\" type=\"System.Boolean\" mappingC" +
    "olumnType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"t" +
    "rue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=" +
    "\"Closer\" mappingName=\"Closer\" type=\"System.String\" mappingColumnType=\"System.Str" +
    "ing\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=" +
    "\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelati" +
    "onKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"CloseDate\" m" +
    "appingName=\"CloseDate\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnTy" +
    "pe=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"CreateDate\" mappingName=\"CreateDate\" type=\"System.DateTime\" " +
    "mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"SignNum\" mappingName=\"SignNum\" type=\"System.Nullable`1[System.Int" +
    "32]\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sql" +
    "Type=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"" +
    "false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=" +
    "\"false\" />\r\n    <Property name=\"SignedNum\" mappingName=\"SignedNum\" type=\"System." +
    "Nullable`1[System.Int32]\" mappingColumnType=\"System.Nullable`1[System.Int32]\" is" +
    "Inherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" i" +
    "sSerializationIgnore=\"false\" />\r\n    <Property name=\"OtherDepart\" mappingName=\"O" +
    "therDepart\" type=\"System.Nullable`1[System.Boolean]\" mappingColumnType=\"System.N" +
    "ullable`1[System.Boolean]\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\"" +
    " isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isI" +
    "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"f" +
    "alse\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name" +
    "=\"OtherDepartID\" mappingName=\"OtherDepartID\" type=\"System.Nullable`1[System.Int3" +
    "2]\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlT" +
    "ype=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"f" +
    "alse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
    "LazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"" +
    "false\" />\r\n    <Property name=\"Back\" mappingName=\"Back\" type=\"System.Nullable`1[" +
    "System.Boolean]\" mappingColumnType=\"System.Nullable`1[System.Boolean]\" isInherit" +
    "ed=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerial" +
    "izationIgnore=\"false\" />\r\n    <Property name=\"CommitDate\" mappingName=\"CommitDat" +
    "e\" type=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"System.Nullable`" +
    "1[System.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "State\" mappingName=\"State\" type=\"System.String\" mappingColumnType=\"System.String" +
    "\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrimaryKey=\"fa" +
    "lse\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fal" +
    "se\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mapping" +
    "Name=\"Comment\" type=\"System.String\" mappingColumnType=\"System.String\" isInherite" +
    "d=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrimaryKey=\"false\" isQuer" +
    "y=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" " +
    "isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Contract : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ContractEntityConfiguration;

        protected int _ContractID;

        protected string _ContractNum;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected string _MaterialGrade;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected string _PriceType;

        protected string _ContractType;

        protected global::System.DateTime? _SignDate;

        protected string _Number;

        protected decimal _Quantity;

        protected global::System.Decimal? _Price;

        protected global::System.Decimal? _PipePrice;

        protected global::System.Decimal? _Total;

        protected string _Measure;

        protected string _Agent;

        protected string _Ship;

        protected string _Payment;

        protected global::System.DateTime _EffectiveDate;

        protected string _Causes;

        protected bool _Closed;

        protected string _Closer;

        protected global::System.DateTime? _CloseDate;

        protected global::System.DateTime _CreateDate;

        protected global::System.Int32? _SignNum;

        protected global::System.Int32? _SignedNum;

        protected global::System.Boolean? _OtherDepart;

        protected global::System.Int32? _OtherDepartID;

        protected global::System.Boolean? _Back;

        protected global::System.DateTime? _CommitDate;

        protected string _State;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Contract left, global::Rock.StaticEntities.Contract right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Contract left, global::Rock.StaticEntities.Contract right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ContractID
        {
            get
            {
                return this._ContractID;
            }
            set
            {
                this.OnPropertyChanged("ContractID", this._ContractID, value);
                this._ContractID = value;
            }
        }

        public string ContractNum
        {
            get
            {
                return this._ContractNum;
            }
            set
            {
                this.OnPropertyChanged("ContractNum", this._ContractNum, value);
                this._ContractNum = value;
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public string MaterialGrade
        {
            get
            {
                return this._MaterialGrade;
            }
            set
            {
                this.OnPropertyChanged("MaterialGrade", this._MaterialGrade, value);
                this._MaterialGrade = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public string PriceType
        {
            get
            {
                return this._PriceType;
            }
            set
            {
                this.OnPropertyChanged("PriceType", this._PriceType, value);
                this._PriceType = value;
            }
        }

        public string ContractType
        {
            get
            {
                return this._ContractType;
            }
            set
            {
                this.OnPropertyChanged("ContractType", this._ContractType, value);
                this._ContractType = value;
            }
        }

        public global::System.DateTime? SignDate
        {
            get
            {
                return this._SignDate;
            }
            set
            {
                this.OnPropertyChanged("SignDate", this._SignDate, value);
                this._SignDate = value;
            }
        }

        public string Number
        {
            get
            {
                return this._Number;
            }
            set
            {
                this.OnPropertyChanged("Number", this._Number, value);
                this._Number = value;
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public global::System.Decimal? Price
        {
            get
            {
                return this._Price;
            }
            set
            {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }

        public global::System.Decimal? PipePrice
        {
            get
            {
                return this._PipePrice;
            }
            set
            {
                this.OnPropertyChanged("PipePrice", this._PipePrice, value);
                this._PipePrice = value;
            }
        }

        public global::System.Decimal? Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                this.OnPropertyChanged("Total", this._Total, value);
                this._Total = value;
            }
        }

        public string Measure
        {
            get
            {
                return this._Measure;
            }
            set
            {
                this.OnPropertyChanged("Measure", this._Measure, value);
                this._Measure = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string Ship
        {
            get
            {
                return this._Ship;
            }
            set
            {
                this.OnPropertyChanged("Ship", this._Ship, value);
                this._Ship = value;
            }
        }

        public string Payment
        {
            get
            {
                return this._Payment;
            }
            set
            {
                this.OnPropertyChanged("Payment", this._Payment, value);
                this._Payment = value;
            }
        }

        public global::System.DateTime EffectiveDate
        {
            get
            {
                return this._EffectiveDate;
            }
            set
            {
                this.OnPropertyChanged("EffectiveDate", this._EffectiveDate, value);
                this._EffectiveDate = value;
            }
        }

        public string Causes
        {
            get
            {
                return this._Causes;
            }
            set
            {
                this.OnPropertyChanged("Causes", this._Causes, value);
                this._Causes = value;
            }
        }

        public bool Closed
        {
            get
            {
                return this._Closed;
            }
            set
            {
                this.OnPropertyChanged("Closed", this._Closed, value);
                this._Closed = value;
            }
        }

        public string Closer
        {
            get
            {
                return this._Closer;
            }
            set
            {
                this.OnPropertyChanged("Closer", this._Closer, value);
                this._Closer = value;
            }
        }

        public global::System.DateTime? CloseDate
        {
            get
            {
                return this._CloseDate;
            }
            set
            {
                this.OnPropertyChanged("CloseDate", this._CloseDate, value);
                this._CloseDate = value;
            }
        }

        public global::System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }

        public global::System.Int32? SignNum
        {
            get
            {
                return this._SignNum;
            }
            set
            {
                this.OnPropertyChanged("SignNum", this._SignNum, value);
                this._SignNum = value;
            }
        }

        public global::System.Int32? SignedNum
        {
            get
            {
                return this._SignedNum;
            }
            set
            {
                this.OnPropertyChanged("SignedNum", this._SignedNum, value);
                this._SignedNum = value;
            }
        }

        public global::System.Boolean? OtherDepart
        {
            get
            {
                return this._OtherDepart;
            }
            set
            {
                this.OnPropertyChanged("OtherDepart", this._OtherDepart, value);
                this._OtherDepart = value;
            }
        }

        public global::System.Int32? OtherDepartID
        {
            get
            {
                return this._OtherDepartID;
            }
            set
            {
                this.OnPropertyChanged("OtherDepartID", this._OtherDepartID, value);
                this._OtherDepartID = value;
            }
        }

        public global::System.Boolean? Back
        {
            get
            {
                return this._Back;
            }
            set
            {
                this.OnPropertyChanged("Back", this._Back, value);
                this._Back = value;
            }
        }

        public global::System.DateTime? CommitDate
        {
            get
            {
                return this._CommitDate;
            }
            set
            {
                this.OnPropertyChanged("CommitDate", this._CommitDate, value);
                this._CommitDate = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Contract._ContractEntityConfiguration == null))
            {
                Contract._ContractEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Contract");
            }
            return Contract._ContractEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Contract", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Contract", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ContractID,
                        this._ContractNum,
                        this._Material_MaterialID,
                        this._MaterialGrade,
                        this._Customer_CustomerID,
                        this._PriceType,
                        this._ContractType,
                        this._SignDate,
                        this._Number,
                        this._Quantity,
                        this._Price,
                        this._PipePrice,
                        this._Total,
                        this._Measure,
                        this._Agent,
                        this._Ship,
                        this._Payment,
                        this._EffectiveDate,
                        this._Causes,
                        this._Closed,
                        this._Closer,
                        this._CloseDate,
                        this._CreateDate,
                        this._SignNum,
                        this._SignedNum,
                        this._OtherDepart,
                        this._OtherDepartID,
                        this._Back,
                        this._CommitDate,
                        this._State,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ContractID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ContractNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Material_MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterialGrade = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Customer_CustomerID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._PriceType = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ContractType = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._SignDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Number = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Quantity = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Price = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._PipePrice = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Total = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Measure = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._Agent = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._Ship = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._Payment = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._EffectiveDate = this.GetDateTime(reader, 17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._Causes = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._Closed = reader.GetBoolean(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._Closer = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._CloseDate = this.GetDateTime(reader, 21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._CreateDate = this.GetDateTime(reader, 22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._SignNum = reader.GetInt32(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._SignedNum = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._OtherDepart = reader.GetBoolean(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._OtherDepartID = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._Back = reader.GetBoolean(27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._CommitDate = this.GetDateTime(reader, 28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._State = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._Comment = reader.GetString(30);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ContractID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ContractNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Material_MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterialGrade = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Customer_CustomerID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._PriceType = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ContractType = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._SignDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._Number = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Quantity = ((decimal)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Price = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._PipePrice = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Total = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Measure = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._Agent = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._Ship = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._Payment = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._EffectiveDate = this.GetDateTime(row, 17);
            }
            if ((false == row.IsNull(18)))
            {
                this._Causes = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._Closed = ((bool)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._Closer = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._CloseDate = this.GetDateTime(row, 21);
            }
            if ((false == row.IsNull(22)))
            {
                this._CreateDate = this.GetDateTime(row, 22);
            }
            if ((false == row.IsNull(23)))
            {
                this._SignNum = ((System.Nullable<int>)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._SignedNum = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._OtherDepart = ((System.Nullable<bool>)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._OtherDepartID = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._Back = ((System.Nullable<bool>)(row[27]));
            }
            if ((false == row.IsNull(28)))
            {
                this._CommitDate = this.GetDateTime(row, 28);
            }
            if ((false == row.IsNull(29)))
            {
                this._State = ((string)(row[29]));
            }
            if ((false == row.IsNull(30)))
            {
                this._Comment = ((string)(row[30]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Contract).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Contract)(obj)).isAttached)
                        && (this.ContractID == ((global::Rock.StaticEntities.Contract)(obj)).ContractID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ContractID = new Rock.Orm.Common.PropertyItem("ContractID", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _ContractNum = new Rock.Orm.Common.PropertyItem("ContractNum", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _MaterialGrade = new Rock.Orm.Common.PropertyItem("MaterialGrade", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _PriceType = new Rock.Orm.Common.PropertyItem("PriceType", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _ContractType = new Rock.Orm.Common.PropertyItem("ContractType", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _SignDate = new Rock.Orm.Common.PropertyItem("SignDate", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Number = new Rock.Orm.Common.PropertyItem("Number", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Price = new Rock.Orm.Common.PropertyItem("Price", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _PipePrice = new Rock.Orm.Common.PropertyItem("PipePrice", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Total = new Rock.Orm.Common.PropertyItem("Total", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Measure = new Rock.Orm.Common.PropertyItem("Measure", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Ship = new Rock.Orm.Common.PropertyItem("Ship", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Payment = new Rock.Orm.Common.PropertyItem("Payment", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _EffectiveDate = new Rock.Orm.Common.PropertyItem("EffectiveDate", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Causes = new Rock.Orm.Common.PropertyItem("Causes", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Closed = new Rock.Orm.Common.PropertyItem("Closed", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Closer = new Rock.Orm.Common.PropertyItem("Closer", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _CloseDate = new Rock.Orm.Common.PropertyItem("CloseDate", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _CreateDate = new Rock.Orm.Common.PropertyItem("CreateDate", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _SignNum = new Rock.Orm.Common.PropertyItem("SignNum", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _SignedNum = new Rock.Orm.Common.PropertyItem("SignedNum", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _OtherDepart = new Rock.Orm.Common.PropertyItem("OtherDepart", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _OtherDepartID = new Rock.Orm.Common.PropertyItem("OtherDepartID", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Back = new Rock.Orm.Common.PropertyItem("Back", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _CommitDate = new Rock.Orm.Common.PropertyItem("CommitDate", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.Contract");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Contract");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ContractID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractID", _ContractID.EntityConfiguration, _ContractID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractNum", _ContractNum.EntityConfiguration, _ContractNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialGrade
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialGrade;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialGrade", _MaterialGrade.EntityConfiguration, _MaterialGrade.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PriceType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PriceType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PriceType", _PriceType.EntityConfiguration, _PriceType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractType", _ContractType.EntityConfiguration, _ContractType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SignDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SignDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SignDate", _SignDate.EntityConfiguration, _SignDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Number
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Number;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Number", _Number.EntityConfiguration, _Number.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Price
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Price;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PipePrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PipePrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PipePrice", _PipePrice.EntityConfiguration, _PipePrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Total
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Total;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Total", _Total.EntityConfiguration, _Total.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Measure
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Measure;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Measure", _Measure.EntityConfiguration, _Measure.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Ship
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Ship;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Ship", _Ship.EntityConfiguration, _Ship.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Payment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Payment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Payment", _Payment.EntityConfiguration, _Payment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem EffectiveDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EffectiveDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("EffectiveDate", _EffectiveDate.EntityConfiguration, _EffectiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Causes
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Causes;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Causes", _Causes.EntityConfiguration, _Causes.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Closed
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Closed;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Closed", _Closed.EntityConfiguration, _Closed.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Closer
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Closer;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Closer", _Closer.EntityConfiguration, _Closer.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CloseDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CloseDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CloseDate", _CloseDate.EntityConfiguration, _CloseDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SignNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SignNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SignNum", _SignNum.EntityConfiguration, _SignNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SignedNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SignedNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SignedNum", _SignedNum.EntityConfiguration, _SignedNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OtherDepart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OtherDepart;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OtherDepart", _OtherDepart.EntityConfiguration, _OtherDepart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OtherDepartID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OtherDepartID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OtherDepartID", _OtherDepartID.EntityConfiguration, _OtherDepartID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Back
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Back;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Back", _Back.EntityConfiguration, _Back.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CommitDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CommitDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CommitDate", _CommitDate.EntityConfiguration, _CommitDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class LadeBillArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.LadeBill>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.LadeBill\" mappingName=\"LadeBill\" isReadOnly=\"false\" is" +
    "BatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  " +
    "<Properties>\r\n    <Property name=\"LadeBillID\" mappingName=\"LadeBillID\" type=\"Sys" +
    "tem.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n   " +
    " <Property name=\"LadeBillNum\" mappingName=\"LadeBillNum\" type=\"System.String\" map" +
    "pingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isConta" +
    "ined=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.StaticEntities.Materi" +
    "al\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlT" +
    "ype=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLa" +
    "zyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @Material\" queryType=\"" +
    "FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Material\"" +
    " relatedForeignKey=\"MaterialID\" isSerializationIgnore=\"true\" />\r\n    <Property n" +
    "ame=\"MaterialLevel\" mappingName=\"MaterialLevel\" type=\"System.String\" mappingColu" +
    "mnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property " +
    "name=\"Customer\" mappingName=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" map" +
    "pingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"in" +
    "t\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" is" +
    "FriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"true\" isNotNull=\"true\" queryWhere=\"{CustomerID} = @Customer\" queryType=\"FkRever" +
    "seQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Customer\" relate" +
    "dForeignKey=\"CustomerID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"Co" +
    "ntractID\" mappingName=\"ContractID\" type=\"System.Nullable`1[System.Int32]\" mappin" +
    "gColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"ContractNum\" mappingName=\"ContractNum\" type=\"System.String\"" +
    " mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrien" +
    "dKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fal" +
    "se\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"BillingTime\" mappingName=\"BillingTime\" type=\"System.DateTime\" " +
    "mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"LadeDate\" mappingName=\"LadeDate\" type=\"System.DateTime\" mappingCo" +
    "lumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property " +
    "name=\"LadenPlace\" mappingName=\"LadenPlace\" type=\"System.String\" mappingColumnTyp" +
    "e=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tr" +
    "ue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "PlateNumber\" mappingName=\"PlateNumber\" type=\"System.String\" mappingColumnType=\"S" +
    "ystem.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isContained=\"false\" isP" +
    "rimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndex" +
    "Property=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false" +
    "\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"De" +
    "stination\" mappingName=\"Destination\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Packi" +
    "ng\" mappingName=\"Packing\" type=\"System.String\" mappingColumnType=\"System.String\"" +
    " isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"fal" +
    "se\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"fals" +
    "e\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKe" +
    "y=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ShipType\" mappin" +
    "gName=\"ShipType\" type=\"System.String\" mappingColumnType=\"System.String\" isInheri" +
    "ted=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQue" +
    "ry=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isInde" +
    "xPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\"" +
    " isSerializationIgnore=\"false\" />\r\n    <Property name=\"PlanQuantity\" mappingName" +
    "=\"PlanQuantity\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" isInher" +
    "ited=\"false\" sqlType=\"decimal(18,3\" isContained=\"false\" isPrimaryKey=\"false\" isQ" +
    "uery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ActualQuantity\" mappingN" +
    "ame=\"ActualQuantity\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=" +
    "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,3\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"QuotedPrice\" mappingName=\"QuotedPrice\" type=\"System.Nullable" +
    "`1[System.Decimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInhe" +
    "rited=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" is" +
    "Query=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fal" +
    "se\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"ContractPrice\" mapping" +
    "Name=\"ContractPrice\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=" +
    "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n" +
    "    <Property name=\"PipePrice\" mappingName=\"PipePrice\" type=\"System.Nullable`1[S" +
    "ystem.Decimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInherite" +
    "d=\"false\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuer" +
    "y=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndex" +
    "PropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" " +
    "isSerializationIgnore=\"false\" />\r\n    <Property name=\"PlanTotal\" mappingName=\"Pl" +
    "anTotal\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.Null" +
    "able`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"ActualTotal\" mappingName=\"ActualTotal\" type=\"System.Nullable`1[System.De" +
    "cimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInherited=\"false" +
    "\" sqlType=\"decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerial" +
    "izationIgnore=\"false\" />\r\n    <Property name=\"SettleTotal\" mappingName=\"SettleTo" +
    "tal\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.Nullable" +
    "`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"Measure\" mappingName=\"Measure\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isR" +
    "elationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Agent\" " +
    "mappingName=\"Agent\" type=\"System.String\" mappingColumnType=\"System.String\" isInh" +
    "erited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" is" +
    "Query=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isI" +
    "ndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"fals" +
    "e\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Picker\" mappingName=\"Pi" +
    "cker\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\"" +
    " sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" " +
    "isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
    "sc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializ" +
    "ationIgnore=\"false\" />\r\n    <Property name=\"MeasureID\" mappingName=\"MeasureID\" t" +
    "ype=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false" +
    "\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazy" +
    "Load=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"State\" mappingName=\"State\" type=\"System.String\" mappin" +
    "gColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"Weight\" mappingName=\"Weight\" type=\"System.Boolean\" mappingColumnType=\"" +
    "System.Boolean\" isInherited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryK" +
    "ey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Closed\" ma" +
    "ppingName=\"Closed\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isIn" +
    "herited=\"false\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"" +
    "false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
    "pertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSe" +
    "rializationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\"" +
    " type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlT" +
    "ype=\"nvarchar(250\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializatio" +
    "nIgnore=\"false\" />\r\n    <Property name=\"SettleSing\" mappingName=\"SettleSing\" typ" +
    "e=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=" +
    "\"nvarchar(1\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnor" +
    "e=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class LadeBill : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _LadeBillEntityConfiguration;

        protected int _LadeBillID;

        protected string _LadeBillNum;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected string _MaterialLevel;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected global::System.Int32? _ContractID;

        protected string _ContractNum;

        protected global::System.DateTime _BillingTime;

        protected global::System.DateTime _LadeDate;

        protected string _LadenPlace;

        protected string _PlateNumber;

        protected string _Destination;

        protected string _Packing;

        protected string _ShipType;

        protected decimal _PlanQuantity;

        protected global::System.Decimal? _ActualQuantity;

        protected global::System.Decimal? _QuotedPrice;

        protected global::System.Decimal? _ContractPrice;

        protected global::System.Decimal? _PipePrice;

        protected global::System.Decimal? _PlanTotal;

        protected global::System.Decimal? _ActualTotal;

        protected global::System.Decimal? _SettleTotal;

        protected string _Measure;

        protected string _Agent;

        protected string _Picker;

        protected int _MeasureID;

        protected string _State;

        protected bool _Weight;

        protected bool _Closed;

        protected string _Comment;

        protected string _SettleSing;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.LadeBill left, global::Rock.StaticEntities.LadeBill right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.LadeBill left, global::Rock.StaticEntities.LadeBill right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int LadeBillID
        {
            get
            {
                return this._LadeBillID;
            }
            set
            {
                this.OnPropertyChanged("LadeBillID", this._LadeBillID, value);
                this._LadeBillID = value;
            }
        }

        public string LadeBillNum
        {
            get
            {
                return this._LadeBillNum;
            }
            set
            {
                this.OnPropertyChanged("LadeBillNum", this._LadeBillNum, value);
                this._LadeBillNum = value;
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public string MaterialLevel
        {
            get
            {
                return this._MaterialLevel;
            }
            set
            {
                this.OnPropertyChanged("MaterialLevel", this._MaterialLevel, value);
                this._MaterialLevel = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public global::System.Int32? ContractID
        {
            get
            {
                return this._ContractID;
            }
            set
            {
                this.OnPropertyChanged("ContractID", this._ContractID, value);
                this._ContractID = value;
            }
        }

        public string ContractNum
        {
            get
            {
                return this._ContractNum;
            }
            set
            {
                this.OnPropertyChanged("ContractNum", this._ContractNum, value);
                this._ContractNum = value;
            }
        }

        public global::System.DateTime BillingTime
        {
            get
            {
                return this._BillingTime;
            }
            set
            {
                this.OnPropertyChanged("BillingTime", this._BillingTime, value);
                this._BillingTime = value;
            }
        }

        public global::System.DateTime LadeDate
        {
            get
            {
                return this._LadeDate;
            }
            set
            {
                this.OnPropertyChanged("LadeDate", this._LadeDate, value);
                this._LadeDate = value;
            }
        }

        public string LadenPlace
        {
            get
            {
                return this._LadenPlace;
            }
            set
            {
                this.OnPropertyChanged("LadenPlace", this._LadenPlace, value);
                this._LadenPlace = value;
            }
        }

        public string PlateNumber
        {
            get
            {
                return this._PlateNumber;
            }
            set
            {
                this.OnPropertyChanged("PlateNumber", this._PlateNumber, value);
                this._PlateNumber = value;
            }
        }

        public string Destination
        {
            get
            {
                return this._Destination;
            }
            set
            {
                this.OnPropertyChanged("Destination", this._Destination, value);
                this._Destination = value;
            }
        }

        public string Packing
        {
            get
            {
                return this._Packing;
            }
            set
            {
                this.OnPropertyChanged("Packing", this._Packing, value);
                this._Packing = value;
            }
        }

        public string ShipType
        {
            get
            {
                return this._ShipType;
            }
            set
            {
                this.OnPropertyChanged("ShipType", this._ShipType, value);
                this._ShipType = value;
            }
        }

        public decimal PlanQuantity
        {
            get
            {
                return this._PlanQuantity;
            }
            set
            {
                this.OnPropertyChanged("PlanQuantity", this._PlanQuantity, value);
                this._PlanQuantity = value;
            }
        }

        public global::System.Decimal? ActualQuantity
        {
            get
            {
                return this._ActualQuantity;
            }
            set
            {
                this.OnPropertyChanged("ActualQuantity", this._ActualQuantity, value);
                this._ActualQuantity = value;
            }
        }

        public global::System.Decimal? QuotedPrice
        {
            get
            {
                return this._QuotedPrice;
            }
            set
            {
                this.OnPropertyChanged("QuotedPrice", this._QuotedPrice, value);
                this._QuotedPrice = value;
            }
        }

        public global::System.Decimal? ContractPrice
        {
            get
            {
                return this._ContractPrice;
            }
            set
            {
                this.OnPropertyChanged("ContractPrice", this._ContractPrice, value);
                this._ContractPrice = value;
            }
        }

        public global::System.Decimal? PipePrice
        {
            get
            {
                return this._PipePrice;
            }
            set
            {
                this.OnPropertyChanged("PipePrice", this._PipePrice, value);
                this._PipePrice = value;
            }
        }

        public global::System.Decimal? PlanTotal
        {
            get
            {
                return this._PlanTotal;
            }
            set
            {
                this.OnPropertyChanged("PlanTotal", this._PlanTotal, value);
                this._PlanTotal = value;
            }
        }

        public global::System.Decimal? ActualTotal
        {
            get
            {
                return this._ActualTotal;
            }
            set
            {
                this.OnPropertyChanged("ActualTotal", this._ActualTotal, value);
                this._ActualTotal = value;
            }
        }

        public global::System.Decimal? SettleTotal
        {
            get
            {
                return this._SettleTotal;
            }
            set
            {
                this.OnPropertyChanged("SettleTotal", this._SettleTotal, value);
                this._SettleTotal = value;
            }
        }

        public string Measure
        {
            get
            {
                return this._Measure;
            }
            set
            {
                this.OnPropertyChanged("Measure", this._Measure, value);
                this._Measure = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string Picker
        {
            get
            {
                return this._Picker;
            }
            set
            {
                this.OnPropertyChanged("Picker", this._Picker, value);
                this._Picker = value;
            }
        }

        public int MeasureID
        {
            get
            {
                return this._MeasureID;
            }
            set
            {
                this.OnPropertyChanged("MeasureID", this._MeasureID, value);
                this._MeasureID = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public bool Weight
        {
            get
            {
                return this._Weight;
            }
            set
            {
                this.OnPropertyChanged("Weight", this._Weight, value);
                this._Weight = value;
            }
        }

        public bool Closed
        {
            get
            {
                return this._Closed;
            }
            set
            {
                this.OnPropertyChanged("Closed", this._Closed, value);
                this._Closed = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public string SettleSing
        {
            get
            {
                return this._SettleSing;
            }
            set
            {
                this.OnPropertyChanged("SettleSing", this._SettleSing, value);
                this._SettleSing = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((LadeBill._LadeBillEntityConfiguration == null))
            {
                LadeBill._LadeBillEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.LadeBill");
            }
            return LadeBill._LadeBillEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.LadeBill", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.LadeBill", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._LadeBillID,
                        this._LadeBillNum,
                        this._Material_MaterialID,
                        this._MaterialLevel,
                        this._Customer_CustomerID,
                        this._ContractID,
                        this._ContractNum,
                        this._BillingTime,
                        this._LadeDate,
                        this._LadenPlace,
                        this._PlateNumber,
                        this._Destination,
                        this._Packing,
                        this._ShipType,
                        this._PlanQuantity,
                        this._ActualQuantity,
                        this._QuotedPrice,
                        this._ContractPrice,
                        this._PipePrice,
                        this._PlanTotal,
                        this._ActualTotal,
                        this._SettleTotal,
                        this._Measure,
                        this._Agent,
                        this._Picker,
                        this._MeasureID,
                        this._State,
                        this._Weight,
                        this._Closed,
                        this._Comment,
                        this._SettleSing};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._LadeBillID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._LadeBillNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Material_MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterialLevel = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Customer_CustomerID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ContractID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ContractNum = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._BillingTime = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._LadeDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._LadenPlace = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._PlateNumber = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Destination = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Packing = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._ShipType = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._PlanQuantity = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ActualQuantity = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._QuotedPrice = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._ContractPrice = reader.GetDecimal(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._PipePrice = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._PlanTotal = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._ActualTotal = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._SettleTotal = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._Measure = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._Agent = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._Picker = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._MeasureID = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._State = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._Weight = reader.GetBoolean(27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._Closed = reader.GetBoolean(28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._Comment = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._SettleSing = reader.GetString(30);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._LadeBillID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._LadeBillNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Material_MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterialLevel = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Customer_CustomerID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ContractID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ContractNum = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._BillingTime = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._LadeDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._LadenPlace = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._PlateNumber = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Destination = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Packing = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._ShipType = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._PlanQuantity = ((decimal)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._ActualQuantity = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._QuotedPrice = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._ContractPrice = ((System.Nullable<decimal>)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._PipePrice = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._PlanTotal = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._ActualTotal = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._SettleTotal = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._Measure = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._Agent = ((string)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._Picker = ((string)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._MeasureID = ((int)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._State = ((string)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._Weight = ((bool)(row[27]));
            }
            if ((false == row.IsNull(28)))
            {
                this._Closed = ((bool)(row[28]));
            }
            if ((false == row.IsNull(29)))
            {
                this._Comment = ((string)(row[29]));
            }
            if ((false == row.IsNull(30)))
            {
                this._SettleSing = ((string)(row[30]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.LadeBill).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.LadeBill)(obj)).isAttached)
                        && (this.LadeBillID == ((global::Rock.StaticEntities.LadeBill)(obj)).LadeBillID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _LadeBillID = new Rock.Orm.Common.PropertyItem("LadeBillID", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _LadeBillNum = new Rock.Orm.Common.PropertyItem("LadeBillNum", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _MaterialLevel = new Rock.Orm.Common.PropertyItem("MaterialLevel", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ContractID = new Rock.Orm.Common.PropertyItem("ContractID", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ContractNum = new Rock.Orm.Common.PropertyItem("ContractNum", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _BillingTime = new Rock.Orm.Common.PropertyItem("BillingTime", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _LadeDate = new Rock.Orm.Common.PropertyItem("LadeDate", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _LadenPlace = new Rock.Orm.Common.PropertyItem("LadenPlace", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _PlateNumber = new Rock.Orm.Common.PropertyItem("PlateNumber", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Destination = new Rock.Orm.Common.PropertyItem("Destination", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Packing = new Rock.Orm.Common.PropertyItem("Packing", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ShipType = new Rock.Orm.Common.PropertyItem("ShipType", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _PlanQuantity = new Rock.Orm.Common.PropertyItem("PlanQuantity", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ActualQuantity = new Rock.Orm.Common.PropertyItem("ActualQuantity", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _QuotedPrice = new Rock.Orm.Common.PropertyItem("QuotedPrice", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ContractPrice = new Rock.Orm.Common.PropertyItem("ContractPrice", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _PipePrice = new Rock.Orm.Common.PropertyItem("PipePrice", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _PlanTotal = new Rock.Orm.Common.PropertyItem("PlanTotal", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _ActualTotal = new Rock.Orm.Common.PropertyItem("ActualTotal", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _SettleTotal = new Rock.Orm.Common.PropertyItem("SettleTotal", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Measure = new Rock.Orm.Common.PropertyItem("Measure", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Picker = new Rock.Orm.Common.PropertyItem("Picker", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _MeasureID = new Rock.Orm.Common.PropertyItem("MeasureID", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Weight = new Rock.Orm.Common.PropertyItem("Weight", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Closed = new Rock.Orm.Common.PropertyItem("Closed", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.LadeBill");

            protected Rock.Orm.Common.PropertyItem _SettleSing = new Rock.Orm.Common.PropertyItem("SettleSing", "Rock.StaticEntities.LadeBill");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem LadeBillID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadeBillID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadeBillID", _LadeBillID.EntityConfiguration, _LadeBillID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LadeBillNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadeBillNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadeBillNum", _LadeBillNum.EntityConfiguration, _LadeBillNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialLevel
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialLevel;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialLevel", _MaterialLevel.EntityConfiguration, _MaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractID", _ContractID.EntityConfiguration, _ContractID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractNum", _ContractNum.EntityConfiguration, _ContractNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BillingTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillingTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BillingTime", _BillingTime.EntityConfiguration, _BillingTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LadeDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadeDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadeDate", _LadeDate.EntityConfiguration, _LadeDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LadenPlace
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadenPlace;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadenPlace", _LadenPlace.EntityConfiguration, _LadenPlace.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PlateNumber
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlateNumber;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PlateNumber", _PlateNumber.EntityConfiguration, _PlateNumber.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Destination
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Destination;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Destination", _Destination.EntityConfiguration, _Destination.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Packing
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Packing;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Packing", _Packing.EntityConfiguration, _Packing.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ShipType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShipType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ShipType", _ShipType.EntityConfiguration, _ShipType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PlanQuantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanQuantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PlanQuantity", _PlanQuantity.EntityConfiguration, _PlanQuantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActualQuantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActualQuantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActualQuantity", _ActualQuantity.EntityConfiguration, _ActualQuantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem QuotedPrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _QuotedPrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("QuotedPrice", _QuotedPrice.EntityConfiguration, _QuotedPrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ContractPrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ContractPrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ContractPrice", _ContractPrice.EntityConfiguration, _ContractPrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PipePrice
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PipePrice;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PipePrice", _PipePrice.EntityConfiguration, _PipePrice.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PlanTotal
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanTotal;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PlanTotal", _PlanTotal.EntityConfiguration, _PlanTotal.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ActualTotal
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ActualTotal;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ActualTotal", _ActualTotal.EntityConfiguration, _ActualTotal.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SettleTotal
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SettleTotal;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SettleTotal", _SettleTotal.EntityConfiguration, _SettleTotal.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Measure
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Measure;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Measure", _Measure.EntityConfiguration, _Measure.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Picker
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Picker;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Picker", _Picker.EntityConfiguration, _Picker.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MeasureID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MeasureID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MeasureID", _MeasureID.EntityConfiguration, _MeasureID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Weight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Weight;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Weight", _Weight.EntityConfiguration, _Weight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Closed
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Closed;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Closed", _Closed.EntityConfiguration, _Closed.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SettleSing
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SettleSing;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SettleSing", _SettleSing.EntityConfiguration, _SettleSing.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class MeasureArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Measure>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Measure\" mappingName=\"Measure\" isReadOnly=\"false\" isBa" +
    "tchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n  <P" +
    "roperties>\r\n    <Property name=\"MeasureID\" mappingName=\"MeasureID\" type=\"System." +
    "Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isCont" +
    "ained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" " +
    "isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Pr" +
    "operty name=\"MeasureNum\" mappingName=\"MeasureNum\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.StaticEntities.Material\" ma" +
    "ppingColumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"i" +
    "nt\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" i" +
    "sFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad" +
    "=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @Material\" queryType=\"FkReve" +
    "rseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Material\" relat" +
    "edForeignKey=\"MaterialID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"M" +
    "aterialLevel\" mappingName=\"MaterialLevel\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "Customer\" mappingName=\"CustomerID\" type=\"Rock.StaticEntities.Customer\" mappingCo" +
    "lumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isC" +
    "ontained=\"false\" isPrimaryKey=\"false\" isQuery=\"true\" isReadOnly=\"false\" isFriend" +
    "Key=\"true\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"true\"" +
    " isNotNull=\"true\" queryWhere=\"{CustomerID} = @Customer\" queryType=\"FkReverseQuer" +
    "y\" isRelationKey=\"false\" relatedType=\"Rock.StaticEntities.Customer\" relatedForei" +
    "gnKey=\"CustomerID\" isSerializationIgnore=\"true\" />\r\n    <Property name=\"LadeBill" +
    "ID\" mappingName=\"LadeBillID\" type=\"System.Nullable`1[System.Int32]\" mappingColum" +
    "nType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"CreateTime\" mappingName=\"CreateTime\" type=\"System.DateTime\" mappi" +
    "ngColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"PlanQuantity\" mappingName=\"PlanQuantity\" type=\"System.Nullable`1[Syste" +
    "m.Decimal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInherited=\"f" +
    "alse\" sqlType=\"decimal(18,3\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"f" +
    "alse\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
    "ertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSe" +
    "rializationIgnore=\"false\" />\r\n    <Property name=\"Shiper\" mappingName=\"Shiper\" t" +
    "ype=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlTyp" +
    "e=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadO" +
    "nly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIg" +
    "nore=\"false\" />\r\n    <Property name=\"VehicleNum\" mappingName=\"VehicleNum\" type=\"" +
    "System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nv" +
    "archar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=" +
    "\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
    "isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"Platform\" mappingName=\"Platform\" type=\"System.S" +
    "tring\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(5" +
    "0\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" i" +
    "sFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoa" +
    "d=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" " +
    "/>\r\n    <Property name=\"MeasureUnit\" mappingName=\"MeasureUnit\" type=\"System.Stri" +
    "ng\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"Tare\" mappingName=\"Tare\" type=\"System.Nullable`1[System.Dec" +
    "imal]\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\"" +
    " sqlType=\"decimal(18,3\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"TareTime\" mappingName=\"TareTime\" ty" +
    "pe=\"System.Nullable`1[System.DateTime]\" mappingColumnType=\"System.Nullable`1[Sys" +
    "tem.DateTime]\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Gross" +
    "\" mappingName=\"Gross\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType" +
    "=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,3\" " +
    "isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFr" +
    "iendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"" +
    "false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"GrossTime\" mappingName=\"GrossTime\" type=\"System.Nullable`1[" +
    "System.DateTime]\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" isInher" +
    "ited=\"false\" sqlType=\"datetime\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" i" +
    "sSerializationIgnore=\"false\" />\r\n    <Property name=\"NetWeight\" mappingName=\"Net" +
    "Weight\" type=\"System.Nullable`1[System.Decimal]\" mappingColumnType=\"System.Nulla" +
    "ble`1[System.Decimal]\" isInherited=\"false\" sqlType=\"decimal(18,3\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property" +
    " name=\"LightOperator\" mappingName=\"LightOperator\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"" +
    "false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fals" +
    "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotN" +
    "ull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"HeavyOperator\" mappingName=\"HeavyOperator\" type=\"System.String\" mappingC" +
    "olumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=" +
    "\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNot" +
    "Null=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Proper" +
    "ty name=\"Agent\" mappingName=\"Agent\" type=\"System.String\" mappingColumnType=\"Syst" +
    "em.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrima" +
    "ryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProp" +
    "erty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" is" +
    "RelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"SealNu" +
    "m\" mappingName=\"SealNum\" type=\"System.String\" mappingColumnType=\"System.String\" " +
    "isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"fals" +
    "e\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false" +
    "\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey" +
    "=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"DeliveryTank\" map" +
    "pingName=\"DeliveryTank\" type=\"System.String\" mappingColumnType=\"System.String\" i" +
    "sInherited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false" +
    "\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\"" +
    " isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=" +
    "\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"MeasureType\" mappi" +
    "ngName=\"MeasureType\" type=\"System.String\" mappingColumnType=\"System.String\" isIn" +
    "herited=\"false\" sqlType=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" i" +
    "sQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" is" +
    "IndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"fa" +
    "lse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Closed\" mappingName=\"" +
    "Closed\" type=\"System.Boolean\" mappingColumnType=\"System.Boolean\" isInherited=\"fa" +
    "lse\" sqlType=\"bit\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerialization" +
    "Ignore=\"false\" />\r\n    <Property name=\"Working\" mappingName=\"Working\" type=\"Syst" +
    "em.Boolean\" mappingColumnType=\"System.Boolean\" isInherited=\"false\" sqlType=\"bit\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"State\" mappingName=\"State\" type=\"System.String\" mappingColu" +
    "mnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType=\"Syst" +
    "em.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Audit" +
    "\" mappingName=\"Audit\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Measure : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _MeasureEntityConfiguration;

        protected int _MeasureID;

        protected string _MeasureNum;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected string _MaterialLevel;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected global::System.Int32? _LadeBillID;

        protected global::System.DateTime _CreateTime;

        protected global::System.Decimal? _PlanQuantity;

        protected string _Shiper;

        protected string _VehicleNum;

        protected string _Platform;

        protected string _MeasureUnit;

        protected global::System.Decimal? _Tare;

        protected global::System.DateTime? _TareTime;

        protected global::System.Decimal? _Gross;

        protected global::System.DateTime? _GrossTime;

        protected global::System.Decimal? _NetWeight;

        protected string _LightOperator;

        protected string _HeavyOperator;

        protected string _Agent;

        protected string _SealNum;

        protected string _DeliveryTank;

        protected string _MeasureType;

        protected bool _Closed;

        protected bool _Working;

        protected string _State;

        protected string _Comment;

        protected string _Audit;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Measure left, global::Rock.StaticEntities.Measure right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Measure left, global::Rock.StaticEntities.Measure right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int MeasureID
        {
            get
            {
                return this._MeasureID;
            }
            set
            {
                this.OnPropertyChanged("MeasureID", this._MeasureID, value);
                this._MeasureID = value;
            }
        }

        public string MeasureNum
        {
            get
            {
                return this._MeasureNum;
            }
            set
            {
                this.OnPropertyChanged("MeasureNum", this._MeasureNum, value);
                this._MeasureNum = value;
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public string MaterialLevel
        {
            get
            {
                return this._MaterialLevel;
            }
            set
            {
                this.OnPropertyChanged("MaterialLevel", this._MaterialLevel, value);
                this._MaterialLevel = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public global::System.Int32? LadeBillID
        {
            get
            {
                return this._LadeBillID;
            }
            set
            {
                this.OnPropertyChanged("LadeBillID", this._LadeBillID, value);
                this._LadeBillID = value;
            }
        }

        public global::System.DateTime CreateTime
        {
            get
            {
                return this._CreateTime;
            }
            set
            {
                this.OnPropertyChanged("CreateTime", this._CreateTime, value);
                this._CreateTime = value;
            }
        }

        public global::System.Decimal? PlanQuantity
        {
            get
            {
                return this._PlanQuantity;
            }
            set
            {
                this.OnPropertyChanged("PlanQuantity", this._PlanQuantity, value);
                this._PlanQuantity = value;
            }
        }

        public string Shiper
        {
            get
            {
                return this._Shiper;
            }
            set
            {
                this.OnPropertyChanged("Shiper", this._Shiper, value);
                this._Shiper = value;
            }
        }

        public string VehicleNum
        {
            get
            {
                return this._VehicleNum;
            }
            set
            {
                this.OnPropertyChanged("VehicleNum", this._VehicleNum, value);
                this._VehicleNum = value;
            }
        }

        public string Platform
        {
            get
            {
                return this._Platform;
            }
            set
            {
                this.OnPropertyChanged("Platform", this._Platform, value);
                this._Platform = value;
            }
        }

        public string MeasureUnit
        {
            get
            {
                return this._MeasureUnit;
            }
            set
            {
                this.OnPropertyChanged("MeasureUnit", this._MeasureUnit, value);
                this._MeasureUnit = value;
            }
        }

        public global::System.Decimal? Tare
        {
            get
            {
                return this._Tare;
            }
            set
            {
                this.OnPropertyChanged("Tare", this._Tare, value);
                this._Tare = value;
            }
        }

        public global::System.DateTime? TareTime
        {
            get
            {
                return this._TareTime;
            }
            set
            {
                this.OnPropertyChanged("TareTime", this._TareTime, value);
                this._TareTime = value;
            }
        }

        public global::System.Decimal? Gross
        {
            get
            {
                return this._Gross;
            }
            set
            {
                this.OnPropertyChanged("Gross", this._Gross, value);
                this._Gross = value;
            }
        }

        public global::System.DateTime? GrossTime
        {
            get
            {
                return this._GrossTime;
            }
            set
            {
                this.OnPropertyChanged("GrossTime", this._GrossTime, value);
                this._GrossTime = value;
            }
        }

        public global::System.Decimal? NetWeight
        {
            get
            {
                return this._NetWeight;
            }
            set
            {
                this.OnPropertyChanged("NetWeight", this._NetWeight, value);
                this._NetWeight = value;
            }
        }

        public string LightOperator
        {
            get
            {
                return this._LightOperator;
            }
            set
            {
                this.OnPropertyChanged("LightOperator", this._LightOperator, value);
                this._LightOperator = value;
            }
        }

        public string HeavyOperator
        {
            get
            {
                return this._HeavyOperator;
            }
            set
            {
                this.OnPropertyChanged("HeavyOperator", this._HeavyOperator, value);
                this._HeavyOperator = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string SealNum
        {
            get
            {
                return this._SealNum;
            }
            set
            {
                this.OnPropertyChanged("SealNum", this._SealNum, value);
                this._SealNum = value;
            }
        }

        public string DeliveryTank
        {
            get
            {
                return this._DeliveryTank;
            }
            set
            {
                this.OnPropertyChanged("DeliveryTank", this._DeliveryTank, value);
                this._DeliveryTank = value;
            }
        }

        public string MeasureType
        {
            get
            {
                return this._MeasureType;
            }
            set
            {
                this.OnPropertyChanged("MeasureType", this._MeasureType, value);
                this._MeasureType = value;
            }
        }

        public bool Closed
        {
            get
            {
                return this._Closed;
            }
            set
            {
                this.OnPropertyChanged("Closed", this._Closed, value);
                this._Closed = value;
            }
        }

        public bool Working
        {
            get
            {
                return this._Working;
            }
            set
            {
                this.OnPropertyChanged("Working", this._Working, value);
                this._Working = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public string Audit
        {
            get
            {
                return this._Audit;
            }
            set
            {
                this.OnPropertyChanged("Audit", this._Audit, value);
                this._Audit = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Measure._MeasureEntityConfiguration == null))
            {
                Measure._MeasureEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Measure");
            }
            return Measure._MeasureEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Measure", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Measure", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._MeasureID,
                        this._MeasureNum,
                        this._Material_MaterialID,
                        this._MaterialLevel,
                        this._Customer_CustomerID,
                        this._LadeBillID,
                        this._CreateTime,
                        this._PlanQuantity,
                        this._Shiper,
                        this._VehicleNum,
                        this._Platform,
                        this._MeasureUnit,
                        this._Tare,
                        this._TareTime,
                        this._Gross,
                        this._GrossTime,
                        this._NetWeight,
                        this._LightOperator,
                        this._HeavyOperator,
                        this._Agent,
                        this._SealNum,
                        this._DeliveryTank,
                        this._MeasureType,
                        this._Closed,
                        this._Working,
                        this._State,
                        this._Comment,
                        this._Audit};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._MeasureID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._MeasureNum = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Material_MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterialLevel = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Customer_CustomerID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._LadeBillID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._CreateTime = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._PlanQuantity = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Shiper = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._VehicleNum = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Platform = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._MeasureUnit = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Tare = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._TareTime = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._Gross = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._GrossTime = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._NetWeight = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._LightOperator = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._HeavyOperator = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._Agent = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._SealNum = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._DeliveryTank = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._MeasureType = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._Closed = reader.GetBoolean(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._Working = reader.GetBoolean(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._State = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._Comment = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._Audit = reader.GetString(27);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._MeasureID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._MeasureNum = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Material_MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterialLevel = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Customer_CustomerID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._LadeBillID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._CreateTime = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._PlanQuantity = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Shiper = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._VehicleNum = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Platform = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._MeasureUnit = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Tare = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._TareTime = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._Gross = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._GrossTime = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16)))
            {
                this._NetWeight = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._LightOperator = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._HeavyOperator = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._Agent = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._SealNum = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._DeliveryTank = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._MeasureType = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._Closed = ((bool)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._Working = ((bool)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._State = ((string)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._Comment = ((string)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._Audit = ((string)(row[27]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Measure).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Measure)(obj)).isAttached)
                        && (this.MeasureID == ((global::Rock.StaticEntities.Measure)(obj)).MeasureID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _MeasureID = new Rock.Orm.Common.PropertyItem("MeasureID", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _MeasureNum = new Rock.Orm.Common.PropertyItem("MeasureNum", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _MaterialLevel = new Rock.Orm.Common.PropertyItem("MaterialLevel", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _LadeBillID = new Rock.Orm.Common.PropertyItem("LadeBillID", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _CreateTime = new Rock.Orm.Common.PropertyItem("CreateTime", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _PlanQuantity = new Rock.Orm.Common.PropertyItem("PlanQuantity", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Shiper = new Rock.Orm.Common.PropertyItem("Shiper", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _VehicleNum = new Rock.Orm.Common.PropertyItem("VehicleNum", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Platform = new Rock.Orm.Common.PropertyItem("Platform", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _MeasureUnit = new Rock.Orm.Common.PropertyItem("MeasureUnit", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Tare = new Rock.Orm.Common.PropertyItem("Tare", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _TareTime = new Rock.Orm.Common.PropertyItem("TareTime", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Gross = new Rock.Orm.Common.PropertyItem("Gross", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _GrossTime = new Rock.Orm.Common.PropertyItem("GrossTime", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _NetWeight = new Rock.Orm.Common.PropertyItem("NetWeight", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _LightOperator = new Rock.Orm.Common.PropertyItem("LightOperator", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _HeavyOperator = new Rock.Orm.Common.PropertyItem("HeavyOperator", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _SealNum = new Rock.Orm.Common.PropertyItem("SealNum", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _DeliveryTank = new Rock.Orm.Common.PropertyItem("DeliveryTank", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _MeasureType = new Rock.Orm.Common.PropertyItem("MeasureType", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Closed = new Rock.Orm.Common.PropertyItem("Closed", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Working = new Rock.Orm.Common.PropertyItem("Working", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Measure");

            protected Rock.Orm.Common.PropertyItem _Audit = new Rock.Orm.Common.PropertyItem("Audit", "Rock.StaticEntities.Measure");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem MeasureID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MeasureID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MeasureID", _MeasureID.EntityConfiguration, _MeasureID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MeasureNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MeasureNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MeasureNum", _MeasureNum.EntityConfiguration, _MeasureNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialLevel
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialLevel;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialLevel", _MaterialLevel.EntityConfiguration, _MaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LadeBillID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadeBillID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadeBillID", _LadeBillID.EntityConfiguration, _LadeBillID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CreateTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CreateTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CreateTime", _CreateTime.EntityConfiguration, _CreateTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PlanQuantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanQuantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PlanQuantity", _PlanQuantity.EntityConfiguration, _PlanQuantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Shiper
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Shiper;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Shiper", _Shiper.EntityConfiguration, _Shiper.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem VehicleNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _VehicleNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("VehicleNum", _VehicleNum.EntityConfiguration, _VehicleNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Platform
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Platform;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Platform", _Platform.EntityConfiguration, _Platform.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MeasureUnit
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MeasureUnit;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MeasureUnit", _MeasureUnit.EntityConfiguration, _MeasureUnit.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Tare
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Tare;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Tare", _Tare.EntityConfiguration, _Tare.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem TareTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TareTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("TareTime", _TareTime.EntityConfiguration, _TareTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Gross
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Gross;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Gross", _Gross.EntityConfiguration, _Gross.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem GrossTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _GrossTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("GrossTime", _GrossTime.EntityConfiguration, _GrossTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NetWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NetWeight;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NetWeight", _NetWeight.EntityConfiguration, _NetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LightOperator
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LightOperator;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LightOperator", _LightOperator.EntityConfiguration, _LightOperator.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem HeavyOperator
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HeavyOperator;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("HeavyOperator", _HeavyOperator.EntityConfiguration, _HeavyOperator.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SealNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SealNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SealNum", _SealNum.EntityConfiguration, _SealNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DeliveryTank
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeliveryTank;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DeliveryTank", _DeliveryTank.EntityConfiguration, _DeliveryTank.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MeasureType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MeasureType;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MeasureType", _MeasureType.EntityConfiguration, _MeasureType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Closed
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Closed;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Closed", _Closed.EntityConfiguration, _Closed.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Working
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Working;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Working", _Working.EntityConfiguration, _Working.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Audit
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Audit;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Audit", _Audit.EntityConfiguration, _Audit.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class ReceivecashArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Receivecash>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Receivecash\" mappingName=\"Receivecash\" isReadOnly=\"fal" +
    "se\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false" +
    "\">\r\n  <Properties>\r\n    <Property name=\"ReceivecashID\" mappingName=\"ReceivecashI" +
    "D\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlT" +
    "ype=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"fa" +
    "lse\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isL" +
    "azyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"fa" +
    "lse\" />\r\n    <Property name=\"Customer\" mappingName=\"CustomerID\" type=\"Rock.Stati" +
    "cEntities.Customer\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInheri" +
    "ted=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true" +
    "\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{CustomerID} = @Custo" +
    "mer\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEn" +
    "tities.Customer\" relatedForeignKey=\"CustomerID\" isSerializationIgnore=\"true\" />\r" +
    "\n    <Property name=\"ReceiveDate\" mappingName=\"ReceiveDate\" type=\"System.DateTim" +
    "e\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" is" +
    "Contained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrie" +
    "ndKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fa" +
    "lse\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"Quantity\" mappingName=\"Quantity\" type=\"System.Decimal\" mapping" +
    "ColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContain" +
    "ed=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"" +
    "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" is" +
    "NotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prop" +
    "erty name=\"Payment\" mappingName=\"Payment\" type=\"System.String\" mappingColumnType" +
    "=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "BillNumber\" mappingName=\"BillNumber\" type=\"System.String\" mappingColumnType=\"Sys" +
    "tem.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"false\" isPrim" +
    "aryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" i" +
    "sRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Agent" +
    "\" mappingName=\"Agent\" type=\"System.String\" mappingColumnType=\"System.String\" isI" +
    "nherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" " +
    "isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" i" +
    "sIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"f" +
    "alse\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Payer\" mappingName=\"" +
    "Payer\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false" +
    "\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\"" +
    " isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSeriali" +
    "zationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Comment\" type" +
    "=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"" +
    "nvarchar(250\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnl" +
    "y=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgno" +
    "re=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Receivecash : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _ReceivecashEntityConfiguration;

        protected int _ReceivecashID;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected global::System.DateTime _ReceiveDate;

        protected decimal _Quantity;

        protected string _Payment;

        protected string _BillNumber;

        protected string _Agent;

        protected string _Payer;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Receivecash left, global::Rock.StaticEntities.Receivecash right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Receivecash left, global::Rock.StaticEntities.Receivecash right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ReceivecashID
        {
            get
            {
                return this._ReceivecashID;
            }
            set
            {
                this.OnPropertyChanged("ReceivecashID", this._ReceivecashID, value);
                this._ReceivecashID = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public global::System.DateTime ReceiveDate
        {
            get
            {
                return this._ReceiveDate;
            }
            set
            {
                this.OnPropertyChanged("ReceiveDate", this._ReceiveDate, value);
                this._ReceiveDate = value;
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public string Payment
        {
            get
            {
                return this._Payment;
            }
            set
            {
                this.OnPropertyChanged("Payment", this._Payment, value);
                this._Payment = value;
            }
        }

        public string BillNumber
        {
            get
            {
                return this._BillNumber;
            }
            set
            {
                this.OnPropertyChanged("BillNumber", this._BillNumber, value);
                this._BillNumber = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string Payer
        {
            get
            {
                return this._Payer;
            }
            set
            {
                this.OnPropertyChanged("Payer", this._Payer, value);
                this._Payer = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Receivecash._ReceivecashEntityConfiguration == null))
            {
                Receivecash._ReceivecashEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Receivecash");
            }
            return Receivecash._ReceivecashEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.Receivecash", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._ReceivecashID,
                        this._Customer_CustomerID,
                        this._ReceiveDate,
                        this._Quantity,
                        this._Payment,
                        this._BillNumber,
                        this._Agent,
                        this._Payer,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ReceivecashID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Customer_CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ReceiveDate = this.GetDateTime(reader, 2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Quantity = reader.GetDecimal(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Payment = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._BillNumber = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Agent = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Payer = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Comment = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ReceivecashID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Customer_CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ReceiveDate = this.GetDateTime(row, 2);
            }
            if ((false == row.IsNull(3)))
            {
                this._Quantity = ((decimal)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Payment = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._BillNumber = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Agent = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Payer = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Comment = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Receivecash).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Receivecash)(obj)).isAttached)
                        && (this.ReceivecashID == ((global::Rock.StaticEntities.Receivecash)(obj)).ReceivecashID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _ReceivecashID = new Rock.Orm.Common.PropertyItem("ReceivecashID", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _ReceiveDate = new Rock.Orm.Common.PropertyItem("ReceiveDate", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _Payment = new Rock.Orm.Common.PropertyItem("Payment", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _BillNumber = new Rock.Orm.Common.PropertyItem("BillNumber", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _Payer = new Rock.Orm.Common.PropertyItem("Payer", "Rock.StaticEntities.Receivecash");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Receivecash");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem ReceivecashID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceivecashID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReceivecashID", _ReceivecashID.EntityConfiguration, _ReceivecashID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReceiveDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceiveDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReceiveDate", _ReceiveDate.EntityConfiguration, _ReceiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Payment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Payment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Payment", _Payment.EntityConfiguration, _Payment.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem BillNumber
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNumber;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("BillNumber", _BillNumber.EntityConfiguration, _BillNumber.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Payer
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Payer;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Payer", _Payer.EntityConfiguration, _Payer.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CashRecordArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CashRecord>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CashRecord\" mappingName=\"CashRecord\" isReadOnly=\"false" +
    "\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">" +
    "\r\n  <Properties>\r\n    <Property name=\"CashRecordID\" mappingName=\"CashRecordID\" t" +
    "ype=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=" +
    "\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\"" +
    " isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyL" +
    "oad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\"" +
    " />\r\n    <Property name=\"CustomerID\" mappingName=\"CustomerID\" type=\"System.Int32" +
    "\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained" +
    "=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fa" +
    "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNo" +
    "tNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Proper" +
    "ty name=\"CustomerName\" mappingName=\"CustomerName\" type=\"System.String\" mappingCo" +
    "lumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isContained=" +
    "\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNot" +
    "Null=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"ReceiveQuantity\" mappingName=\"ReceiveQuantity\" type=\"System.Decimal\" map" +
    "pingColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"PayQuantity\" mappingName=\"PayQuantity\" type=\"System.Decimal\" mapp" +
    "ingColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isCont" +
    "ained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKe" +
    "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\"" +
    " isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <P" +
    "roperty name=\"Balance\" mappingName=\"Balance\" type=\"System.Decimal\" mappingColumn" +
    "Type=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=\"fa" +
    "lse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNul" +
    "l=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property n" +
    "ame=\"ChangeDate\" mappingName=\"ChangeDate\" type=\"System.DateTime\" mappingColumnTy" +
    "pe=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false\" " +
    "isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIn" +
    "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"tr" +
    "ue\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"" +
    "ReceivecashID\" mappingName=\"ReceivecashID\" type=\"System.Int32\" mappingColumnType" +
    "=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryK" +
    "ey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPropert" +
    "y=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRela" +
    "tionKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"SalCheckou" +
    "tID\" mappingName=\"SalCheckoutID\" type=\"System.Nullable`1[System.Int32]\" mappingC" +
    "olumnType=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlType=\"int\" is" +
    "Contained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrie" +
    "ndKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fa" +
    "lse\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n " +
    "   <Property name=\"Agent\" mappingName=\"Agent\" type=\"System.String\" mappingColumn" +
    "Type=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"Comment\" mappingName=\"Comment\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrima" +
    "ryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProp" +
    "erty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" is" +
    "RelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityC" +
    "onfiguration>")]
    public partial class CashRecord : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CashRecordEntityConfiguration;

        protected int _CashRecordID;

        protected int _CustomerID;

        protected string _CustomerName;

        protected decimal _ReceiveQuantity;

        protected decimal _PayQuantity;

        protected decimal _Balance;

        protected global::System.DateTime _ChangeDate;

        protected int _ReceivecashID;

        protected global::System.Int32? _SalCheckoutID;

        protected string _Agent;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CashRecord left, global::Rock.StaticEntities.CashRecord right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CashRecord left, global::Rock.StaticEntities.CashRecord right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CashRecordID
        {
            get
            {
                return this._CashRecordID;
            }
            set
            {
                this.OnPropertyChanged("CashRecordID", this._CashRecordID, value);
                this._CashRecordID = value;
            }
        }

        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnPropertyChanged("CustomerID", this._CustomerID, value);
                this._CustomerID = value;
            }
        }

        public string CustomerName
        {
            get
            {
                return this._CustomerName;
            }
            set
            {
                this.OnPropertyChanged("CustomerName", this._CustomerName, value);
                this._CustomerName = value;
            }
        }

        public decimal ReceiveQuantity
        {
            get
            {
                return this._ReceiveQuantity;
            }
            set
            {
                this.OnPropertyChanged("ReceiveQuantity", this._ReceiveQuantity, value);
                this._ReceiveQuantity = value;
            }
        }

        public decimal PayQuantity
        {
            get
            {
                return this._PayQuantity;
            }
            set
            {
                this.OnPropertyChanged("PayQuantity", this._PayQuantity, value);
                this._PayQuantity = value;
            }
        }

        public decimal Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                this.OnPropertyChanged("Balance", this._Balance, value);
                this._Balance = value;
            }
        }

        public global::System.DateTime ChangeDate
        {
            get
            {
                return this._ChangeDate;
            }
            set
            {
                this.OnPropertyChanged("ChangeDate", this._ChangeDate, value);
                this._ChangeDate = value;
            }
        }

        public int ReceivecashID
        {
            get
            {
                return this._ReceivecashID;
            }
            set
            {
                this.OnPropertyChanged("ReceivecashID", this._ReceivecashID, value);
                this._ReceivecashID = value;
            }
        }

        public global::System.Int32? SalCheckoutID
        {
            get
            {
                return this._SalCheckoutID;
            }
            set
            {
                this.OnPropertyChanged("SalCheckoutID", this._SalCheckoutID, value);
                this._SalCheckoutID = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CashRecord._CashRecordEntityConfiguration == null))
            {
                CashRecord._CashRecordEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CashRecord");
            }
            return CashRecord._CashRecordEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CashRecordID,
                        this._CustomerID,
                        this._CustomerName,
                        this._ReceiveQuantity,
                        this._PayQuantity,
                        this._Balance,
                        this._ChangeDate,
                        this._ReceivecashID,
                        this._SalCheckoutID,
                        this._Agent,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CashRecordID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CustomerName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ReceiveQuantity = reader.GetDecimal(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._PayQuantity = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Balance = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ChangeDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ReceivecashID = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._SalCheckoutID = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Agent = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Comment = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CashRecordID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CustomerName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ReceiveQuantity = ((decimal)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._PayQuantity = ((decimal)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Balance = ((decimal)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ChangeDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._ReceivecashID = ((int)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._SalCheckoutID = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Agent = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Comment = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CashRecord).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CashRecord)(obj)).isAttached)
                        && (this.CashRecordID == ((global::Rock.StaticEntities.CashRecord)(obj)).CashRecordID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CashRecordID = new Rock.Orm.Common.PropertyItem("CashRecordID", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("CustomerID", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _CustomerName = new Rock.Orm.Common.PropertyItem("CustomerName", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _ReceiveQuantity = new Rock.Orm.Common.PropertyItem("ReceiveQuantity", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _PayQuantity = new Rock.Orm.Common.PropertyItem("PayQuantity", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _Balance = new Rock.Orm.Common.PropertyItem("Balance", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _ChangeDate = new Rock.Orm.Common.PropertyItem("ChangeDate", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _ReceivecashID = new Rock.Orm.Common.PropertyItem("ReceivecashID", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _SalCheckoutID = new Rock.Orm.Common.PropertyItem("SalCheckoutID", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.CashRecord");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.CashRecord");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CashRecordID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CashRecordID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CashRecordID", _CashRecordID.EntityConfiguration, _CashRecordID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerID", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerName", _CustomerName.EntityConfiguration, _CustomerName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReceiveQuantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceiveQuantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReceiveQuantity", _ReceiveQuantity.EntityConfiguration, _ReceiveQuantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem PayQuantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PayQuantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("PayQuantity", _PayQuantity.EntityConfiguration, _PayQuantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Balance
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Balance;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Balance", _Balance.EntityConfiguration, _Balance.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ChangeDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChangeDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ChangeDate", _ChangeDate.EntityConfiguration, _ChangeDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem ReceivecashID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceivecashID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("ReceivecashID", _ReceivecashID.EntityConfiguration, _ReceivecashID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SalCheckoutID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SalCheckoutID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SalCheckoutID", _SalCheckoutID.EntityConfiguration, _SalCheckoutID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}

namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerUserArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerUser>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerUser\" mappingName=\"CustomerUser\" isReadOnly=\"f" +
    "alse\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"fal" +
    "se\">\r\n  <Properties>\r\n    <Property name=\"CustomerUserID\" mappingName=\"CustomerU" +
    "serID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" " +
    "sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly" +
    "=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
    " isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore" +
    "=\"false\" />\r\n    <Property name=\"CustomerUserName\" mappingName=\"CustomerUserName" +
    "\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sql" +
    "Type=\"nvarchar(50\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isRe" +
    "adOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
    "false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerialization" +
    "Ignore=\"false\" />\r\n    <Property name=\"CompanyName\" mappingName=\"CompanyName\" ty" +
    "pe=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType" +
    "=\"nvarchar(100\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadO" +
    "nly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
    "se\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgn" +
    "ore=\"false\" />\r\n    <Property name=\"Password\" mappingName=\"Password\" type=\"Syste" +
    "m.String\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarcha" +
    "r(20\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false" +
    "\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazy" +
    "Load=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false" +
    "\" />\r\n    <Property name=\"CustomerID\" mappingName=\"CustomerID\" type=\"System.Int3" +
    "2\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContaine" +
    "d=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"f" +
    "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isN" +
    "otNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Prope" +
    "rty name=\"CustomerNum\" mappingName=\"CustomerNum\" type=\"System.String\" mappingCol" +
    "umnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"f" +
    "alse\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false" +
    "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNu" +
    "ll=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties" +
    ">\r\n</EntityConfiguration>")]
    public partial class CustomerUser : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerUserEntityConfiguration;

        protected int _CustomerUserID;

        protected string _CustomerUserName;

        protected string _CompanyName;

        protected string _Password;

        protected int _CustomerID;

        protected string _CustomerNum;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerUser left, global::Rock.StaticEntities.CustomerUser right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerUser left, global::Rock.StaticEntities.CustomerUser right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerUserID
        {
            get
            {
                return this._CustomerUserID;
            }
            set
            {
                this.OnPropertyChanged("CustomerUserID", this._CustomerUserID, value);
                this._CustomerUserID = value;
            }
        }

        public string CustomerUserName
        {
            get
            {
                return this._CustomerUserName;
            }
            set
            {
                this.OnPropertyChanged("CustomerUserName", this._CustomerUserName, value);
                this._CustomerUserName = value;
            }
        }

        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnPropertyChanged("CompanyName", this._CompanyName, value);
                this._CompanyName = value;
            }
        }

        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                this.OnPropertyChanged("Password", this._Password, value);
                this._Password = value;
            }
        }

        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnPropertyChanged("CustomerID", this._CustomerID, value);
                this._CustomerID = value;
            }
        }

        public string CustomerNum
        {
            get
            {
                return this._CustomerNum;
            }
            set
            {
                this.OnPropertyChanged("CustomerNum", this._CustomerNum, value);
                this._CustomerNum = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerUser._CustomerUserEntityConfiguration == null))
            {
                CustomerUser._CustomerUserEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerUser");
            }
            return CustomerUser._CustomerUserEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerUserID,
                        this._CustomerUserName,
                        this._CompanyName,
                        this._Password,
                        this._CustomerID,
                        this._CustomerNum};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerUserID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._CustomerUserName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CompanyName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Password = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._CustomerID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._CustomerNum = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerUserID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._CustomerUserName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._CompanyName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Password = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._CustomerID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._CustomerNum = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerUser).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerUser)(obj)).isAttached)
                        && (this.CustomerUserID == ((global::Rock.StaticEntities.CustomerUser)(obj)).CustomerUserID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerUserID = new Rock.Orm.Common.PropertyItem("CustomerUserID", "Rock.StaticEntities.CustomerUser");

            protected Rock.Orm.Common.PropertyItem _CustomerUserName = new Rock.Orm.Common.PropertyItem("CustomerUserName", "Rock.StaticEntities.CustomerUser");

            protected Rock.Orm.Common.PropertyItem _CompanyName = new Rock.Orm.Common.PropertyItem("CompanyName", "Rock.StaticEntities.CustomerUser");

            protected Rock.Orm.Common.PropertyItem _Password = new Rock.Orm.Common.PropertyItem("Password", "Rock.StaticEntities.CustomerUser");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("CustomerID", "Rock.StaticEntities.CustomerUser");

            protected Rock.Orm.Common.PropertyItem _CustomerNum = new Rock.Orm.Common.PropertyItem("CustomerNum", "Rock.StaticEntities.CustomerUser");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerUserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerUserID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerUserID", _CustomerUserID.EntityConfiguration, _CustomerUserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerUserName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerUserName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerUserName", _CustomerUserName.EntityConfiguration, _CustomerUserName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CompanyName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CompanyName;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CompanyName", _CompanyName.EntityConfiguration, _CompanyName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Password
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Password;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Password", _Password.EntityConfiguration, _Password.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerID", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerNum", _CustomerNum.EntityConfiguration, _CustomerNum.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class CustomerOrderArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.CustomerOrder>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.CustomerOrder\" mappingName=\"CustomerOrder\" isReadOnly=" +
    "\"false\" isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"f" +
    "alse\">\r\n  <Properties>\r\n    <Property name=\"CustomerOrderID\" mappingName=\"Custom" +
    "erOrderID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"fal" +
    "se\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isRead" +
    "Only=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
    "lse\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIg" +
    "nore=\"false\" />\r\n    <Property name=\"Customer\" mappingName=\"CustomerID\" type=\"Ro" +
    "ck.StaticEntities.Customer\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
    "isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQue" +
    "ry=\"true\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{CustomerID} " +
    "= @Customer\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock." +
    "StaticEntities.Customer\" relatedForeignKey=\"CustomerID\" isSerializationIgnore=\"t" +
    "rue\" />\r\n    <Property name=\"Material\" mappingName=\"MaterialID\" type=\"Rock.Stati" +
    "cEntities.Material\" mappingColumnType=\"System.Nullable`1[System.Int32]\" isInheri" +
    "ted=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"true" +
    "\" isReadOnly=\"false\" isFriendKey=\"true\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isLazyLoad=\"true\" isNotNull=\"true\" queryWhere=\"{MaterialID} = @Mater" +
    "ial\" queryType=\"FkReverseQuery\" isRelationKey=\"false\" relatedType=\"Rock.StaticEn" +
    "tities.Material\" relatedForeignKey=\"MaterialID\" isSerializationIgnore=\"true\" />\r" +
    "\n    <Property name=\"MaterialLevel\" mappingName=\"MaterialLevel\" type=\"System.Str" +
    "ing\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\"" +
    " isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />" +
    "\r\n    <Property name=\"OrderDate\" mappingName=\"OrderDate\" type=\"System.DateTime\" " +
    "mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isCon" +
    "tained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendK" +
    "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false" +
    "\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <" +
    "Property name=\"Quantity\" mappingName=\"Quantity\" type=\"System.Decimal\" mappingCol" +
    "umnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18,2\" isContained=" +
    "\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNot" +
    "Null=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"VehicleNum\" mappingName=\"VehicleNum\" type=\"System.String\" mappingColumnT" +
    "ype=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property nam" +
    "e=\"DeliveryDate\" mappingName=\"DeliveryDate\" type=\"System.DateTime\" mappingColumn" +
    "Type=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" isContained=\"false" +
    "\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" is" +
    "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"" +
    "true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name" +
    "=\"Destination\" mappingName=\"Destination\" type=\"System.String\" mappingColumnType=" +
    "\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(100\" isContained=\"false\" i" +
    "sPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isInd" +
    "exProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"fal" +
    "se\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  </Properties>\r\n</E" +
    "ntityConfiguration>")]
    public partial class CustomerOrder : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _CustomerOrderEntityConfiguration;

        protected int _CustomerOrderID;

        protected global::Rock.StaticEntities.Customer _Customer;

        protected global::System.Int32? _Customer_CustomerID;

        protected global::Rock.StaticEntities.Material _Material;

        protected global::System.Int32? _Material_MaterialID;

        protected string _MaterialLevel;

        protected global::System.DateTime _OrderDate;

        protected decimal _Quantity;

        protected string _VehicleNum;

        protected global::System.DateTime _DeliveryDate;

        protected string _Destination;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.CustomerOrder left, global::Rock.StaticEntities.CustomerOrder right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.CustomerOrder left, global::Rock.StaticEntities.CustomerOrder right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int CustomerOrderID
        {
            get
            {
                return this._CustomerOrderID;
            }
            set
            {
                this.OnPropertyChanged("CustomerOrderID", this._CustomerOrderID, value);
                this._CustomerOrderID = value;
            }
        }

        public global::System.Int32? CustomerID
        {
            get
            {
                return _Customer_CustomerID;
            }
            set
            {
                this.OnPropertyChanged("Customer", _Customer_CustomerID, value);
                _Customer_CustomerID = value;
                this.SetPropertyUnloaded("Customer");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Customer Customer
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Customer"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Customer _obj;
                    _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                    this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                    this._Customer = _obj;
                }
                return this._Customer;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Customer", this.Customer, value);
                this._Customer = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, null);
                    this._Customer_CustomerID = null;
                }
                else
                {
                    this.OnPropertyChanged("Customer", this._Customer_CustomerID, value.CustomerID);
                    this._Customer_CustomerID = value.CustomerID;
                }
            }
        }

        public global::System.Int32? MaterialID
        {
            get
            {
                return _Material_MaterialID;
            }
            set
            {
                this.OnPropertyChanged("Material", _Material_MaterialID, value);
                _Material_MaterialID = value;
                this.SetPropertyUnloaded("Material");
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public global::Rock.StaticEntities.Material Material
        {
            get
            {
                if (this.IsQueryPropertyLoaded("Material"))
                {
                }
                else
                {
                    global::Rock.StaticEntities.Material _obj;
                    _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                    this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                    this._Material = _obj;
                }
                return this._Material;
            }
            set
            {
                this.OnQueryOnePropertyChanged("Material", this.Material, value);
                this._Material = value;
                if ((value == null))
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, null);
                    this._Material_MaterialID = null;
                }
                else
                {
                    this.OnPropertyChanged("Material", this._Material_MaterialID, value.MaterialID);
                    this._Material_MaterialID = value.MaterialID;
                }
            }
        }

        public string MaterialLevel
        {
            get
            {
                return this._MaterialLevel;
            }
            set
            {
                this.OnPropertyChanged("MaterialLevel", this._MaterialLevel, value);
                this._MaterialLevel = value;
            }
        }

        public global::System.DateTime OrderDate
        {
            get
            {
                return this._OrderDate;
            }
            set
            {
                this.OnPropertyChanged("OrderDate", this._OrderDate, value);
                this._OrderDate = value;
            }
        }

        public decimal Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                this.OnPropertyChanged("Quantity", this._Quantity, value);
                this._Quantity = value;
            }
        }

        public string VehicleNum
        {
            get
            {
                return this._VehicleNum;
            }
            set
            {
                this.OnPropertyChanged("VehicleNum", this._VehicleNum, value);
                this._VehicleNum = value;
            }
        }

        public global::System.DateTime DeliveryDate
        {
            get
            {
                return this._DeliveryDate;
            }
            set
            {
                this.OnPropertyChanged("DeliveryDate", this._DeliveryDate, value);
                this._DeliveryDate = value;
            }
        }

        public string Destination
        {
            get
            {
                return this._Destination;
            }
            set
            {
                this.OnPropertyChanged("Destination", this._Destination, value);
                this._Destination = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((CustomerOrder._CustomerOrderEntityConfiguration == null))
            {
                CustomerOrder._CustomerOrderEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.CustomerOrder");
            }
            return CustomerOrder._CustomerOrderEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerOrder", "Customer"))))
            {
                global::Rock.StaticEntities.Customer _obj;
                _obj = ((global::Rock.StaticEntities.Customer)(this.QueryOne(typeof(global::Rock.StaticEntities.Customer), "Customer", this)));
                this.OnQueryOnePropertyChanged("Customer", this._Customer, _obj);
                this._Customer = _obj;
            }
            if ((includeLazyLoadQueries
                        || (false == Rock.Orm.Common.MetaDataManager.IsLazyLoad("Rock.StaticEntities.CustomerOrder", "Material"))))
            {
                global::Rock.StaticEntities.Material _obj;
                _obj = ((global::Rock.StaticEntities.Material)(this.QueryOne(typeof(global::Rock.StaticEntities.Material), "Material", this)));
                this.OnQueryOnePropertyChanged("Material", this._Material, _obj);
                this._Material = _obj;
            }
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._CustomerOrderID,
                        this._Customer_CustomerID,
                        this._Material_MaterialID,
                        this._MaterialLevel,
                        this._OrderDate,
                        this._Quantity,
                        this._VehicleNum,
                        this._DeliveryDate,
                        this._Destination};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._CustomerOrderID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Customer_CustomerID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Material_MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterialLevel = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._OrderDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Quantity = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._VehicleNum = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._DeliveryDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Destination = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._CustomerOrderID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Customer_CustomerID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Material_MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterialLevel = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._OrderDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._Quantity = ((decimal)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._VehicleNum = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._DeliveryDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._Destination = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.CustomerOrder).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.CustomerOrder)(obj)).isAttached)
                        && (this.CustomerOrderID == ((global::Rock.StaticEntities.CustomerOrder)(obj)).CustomerOrderID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _CustomerOrderID = new Rock.Orm.Common.PropertyItem("CustomerOrderID", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("Customer", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("Material", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _MaterialLevel = new Rock.Orm.Common.PropertyItem("MaterialLevel", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _OrderDate = new Rock.Orm.Common.PropertyItem("OrderDate", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _Quantity = new Rock.Orm.Common.PropertyItem("Quantity", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _VehicleNum = new Rock.Orm.Common.PropertyItem("VehicleNum", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _DeliveryDate = new Rock.Orm.Common.PropertyItem("DeliveryDate", "Rock.StaticEntities.CustomerOrder");

            protected Rock.Orm.Common.PropertyItem _Destination = new Rock.Orm.Common.PropertyItem("Destination", "Rock.StaticEntities.CustomerOrder");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem CustomerOrderID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerOrderID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerOrderID", _CustomerOrderID.EntityConfiguration, _CustomerOrderID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Customer.@__Columns Customer
            {
                get
                {
                    return new global::Rock.StaticEntities.Customer.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Customer"));
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Customer", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public global::Rock.StaticEntities.Material.@__Columns Material
            {
                get
                {
                    return new global::Rock.StaticEntities.Material.@__Columns(string.Format("{0}_/*{1}*/", aliasName, "Material"));
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Material", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialLevel
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialLevel;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialLevel", _MaterialLevel.EntityConfiguration, _MaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem OrderDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OrderDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("OrderDate", _OrderDate.EntityConfiguration, _OrderDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Quantity
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Quantity;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Quantity", _Quantity.EntityConfiguration, _Quantity.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem VehicleNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _VehicleNum;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("VehicleNum", _VehicleNum.EntityConfiguration, _VehicleNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem DeliveryDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeliveryDate;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("DeliveryDate", _DeliveryDate.EntityConfiguration, _DeliveryDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Destination
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Destination;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Destination", _Destination.EntityConfiguration, _Destination.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
namespace Rock.StaticEntities
{
    using System;
    using System.Xml.Serialization;
    using Rock.Orm.Common;


    [System.SerializableAttribute()]
    public partial class StatementArrayList : Rock.Orm.Common.EntityArrayList<Rock.StaticEntities.Statement>
    {
    }

    [System.SerializableAttribute()]
    [Rock.Orm.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Rock.StaticEntities.Statement\" mappingName=\"Statement\" isReadOnly=\"false\" " +
    "isBatchUpdate=\"false\" isAutoPreLoad=\"false\" batchSize=\"10\" isRelation=\"false\">\r\n" +
    "  <Properties>\r\n    <Property name=\"StatementID\" mappingName=\"StatementID\" type=" +
    "\"System.Int32\" mappingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int" +
    "\" isContained=\"false\" isPrimaryKey=\"true\" isQuery=\"false\" isReadOnly=\"false\" isF" +
    "riendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=" +
    "\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r" +
    "\n    <Property name=\"StatementNun\" mappingName=\"StatementNun\" type=\"System.Strin" +
    "g\" mappingColumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" i" +
    "sContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFri" +
    "endKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"f" +
    "alse\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n " +
    "   <Property name=\"MaterialID\" mappingName=\"MaterialID\" type=\"System.Int32\" mapp" +
    "ingColumnType=\"System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property nam" +
    "e=\"MaterialLevel\" mappingName=\"MaterialLevel\" type=\"System.String\" mappingColumn" +
    "Type=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(30\" isContained=\"fals" +
    "e\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" i" +
    "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=" +
    "\"false\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property na" +
    "me=\"CustomerID\" mappingName=\"CustomerID\" type=\"System.Int32\" mappingColumnType=\"" +
    "System.Int32\" isInherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey" +
    "=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=" +
    "\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelati" +
    "onKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"LadeBillID\" " +
    "mappingName=\"LadeBillID\" type=\"System.Int32\" mappingColumnType=\"System.Int32\" is" +
    "Inherited=\"false\" sqlType=\"int\" isContained=\"false\" isPrimaryKey=\"false\" isQuery" +
    "=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexP" +
    "ropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" is" +
    "SerializationIgnore=\"false\" />\r\n    <Property name=\"NetWeight\" mappingName=\"NetW" +
    "eight\" type=\"System.Decimal\" mappingColumnType=\"System.Decimal\" isInherited=\"fal" +
    "se\" sqlType=\"decimal(18,3\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"fal" +
    "se\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
    "tyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSeria" +
    "lizationIgnore=\"false\" />\r\n    <Property name=\"Price\" mappingName=\"Price\" type=\"" +
    "System.Decimal\" mappingColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"" +
    "decimal(18,2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnl" +
    "y=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
    "\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnor" +
    "e=\"false\" />\r\n    <Property name=\"Amount\" mappingName=\"Amount\" type=\"System.Deci" +
    "mal\" mappingColumnType=\"System.Decimal\" isInherited=\"false\" sqlType=\"decimal(18," +
    "2\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" i" +
    "sFriendKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoa" +
    "d=\"false\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" /" +
    ">\r\n    <Property name=\"SettleTime\" mappingName=\"SettleTime\" type=\"System.DateTim" +
    "e\" mappingColumnType=\"System.DateTime\" isInherited=\"false\" sqlType=\"datetime\" is" +
    "Contained=\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFrie" +
    "ndKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"fa" +
    "lse\" isNotNull=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n  " +
    "  <Property name=\"Multiple\" mappingName=\"Multiple\" type=\"System.String\" mappingC" +
    "olumnType=\"System.String\" isInherited=\"false\" sqlType=\"nvarchar(50\" isContained=" +
    "\"false\" isPrimaryKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"fal" +
    "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNot" +
    "Null=\"true\" isRelationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Propert" +
    "y name=\"State\" mappingName=\"State\" type=\"System.String\" mappingColumnType=\"Syste" +
    "m.String\" isInherited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimar" +
    "yKey=\"false\" isQuery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRe" +
    "lationKey=\"false\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Agent\" m" +
    "appingName=\"Agent\" type=\"System.String\" mappingColumnType=\"System.String\" isInhe" +
    "rited=\"false\" sqlType=\"nvarchar(20\" isContained=\"false\" isPrimaryKey=\"false\" isQ" +
    "uery=\"false\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIn" +
    "dexPropertyDesc=\"false\" isLazyLoad=\"false\" isNotNull=\"true\" isRelationKey=\"false" +
    "\" isSerializationIgnore=\"false\" />\r\n    <Property name=\"Comment\" mappingName=\"Co" +
    "mment\" type=\"System.String\" mappingColumnType=\"System.String\" isInherited=\"false" +
    "\" sqlType=\"nvarchar(250\" isContained=\"false\" isPrimaryKey=\"false\" isQuery=\"false" +
    "\" isReadOnly=\"false\" isFriendKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isLazyLoad=\"false\" isNotNull=\"false\" isRelationKey=\"false\" isSerial" +
    "izationIgnore=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Statement : Rock.Orm.Common.Entity
    {

        protected static Rock.Orm.Common.EntityConfiguration _StatementEntityConfiguration;

        protected int _StatementID;

        protected string _StatementNun;

        protected int _MaterialID;

        protected string _MaterialLevel;

        protected int _CustomerID;

        protected int _LadeBillID;

        protected decimal _NetWeight;

        protected decimal _Price;

        protected decimal _Amount;

        protected global::System.DateTime _SettleTime;

        protected string _Multiple;

        protected string _State;

        protected string _Agent;

        protected string _Comment;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Rock.StaticEntities.Statement left, global::Rock.StaticEntities.Statement right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Rock.StaticEntities.Statement left, global::Rock.StaticEntities.Statement right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int StatementID
        {
            get
            {
                return this._StatementID;
            }
            set
            {
                this.OnPropertyChanged("StatementID", this._StatementID, value);
                this._StatementID = value;
            }
        }

        public string StatementNun
        {
            get
            {
                return this._StatementNun;
            }
            set
            {
                this.OnPropertyChanged("StatementNun", this._StatementNun, value);
                this._StatementNun = value;
            }
        }

        public int MaterialID
        {
            get
            {
                return this._MaterialID;
            }
            set
            {
                this.OnPropertyChanged("MaterialID", this._MaterialID, value);
                this._MaterialID = value;
            }
        }

        public string MaterialLevel
        {
            get
            {
                return this._MaterialLevel;
            }
            set
            {
                this.OnPropertyChanged("MaterialLevel", this._MaterialLevel, value);
                this._MaterialLevel = value;
            }
        }

        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                this.OnPropertyChanged("CustomerID", this._CustomerID, value);
                this._CustomerID = value;
            }
        }

        public int LadeBillID
        {
            get
            {
                return this._LadeBillID;
            }
            set
            {
                this.OnPropertyChanged("LadeBillID", this._LadeBillID, value);
                this._LadeBillID = value;
            }
        }

        public decimal NetWeight
        {
            get
            {
                return this._NetWeight;
            }
            set
            {
                this.OnPropertyChanged("NetWeight", this._NetWeight, value);
                this._NetWeight = value;
            }
        }

        public decimal Price
        {
            get
            {
                return this._Price;
            }
            set
            {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }

        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                this.OnPropertyChanged("Amount", this._Amount, value);
                this._Amount = value;
            }
        }

        public global::System.DateTime SettleTime
        {
            get
            {
                return this._SettleTime;
            }
            set
            {
                this.OnPropertyChanged("SettleTime", this._SettleTime, value);
                this._SettleTime = value;
            }
        }

        public string Multiple
        {
            get
            {
                return this._Multiple;
            }
            set
            {
                this.OnPropertyChanged("Multiple", this._Multiple, value);
                this._Multiple = value;
            }
        }

        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }

        public string Agent
        {
            get
            {
                return this._Agent;
            }
            set
            {
                this.OnPropertyChanged("Agent", this._Agent, value);
                this._Agent = value;
            }
        }

        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                this.OnPropertyChanged("Comment", this._Comment, value);
                this._Comment = value;
            }
        }

        public override Rock.Orm.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Statement._StatementEntityConfiguration == null))
            {
                Statement._StatementEntityConfiguration = Rock.Orm.Common.MetaDataManager.GetEntityConfiguration("Rock.StaticEntities.Statement");
            }
            return Statement._StatementEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._StatementID,
                        this._StatementNun,
                        this._MaterialID,
                        this._MaterialLevel,
                        this._CustomerID,
                        this._LadeBillID,
                        this._NetWeight,
                        this._Price,
                        this._Amount,
                        this._SettleTime,
                        this._Multiple,
                        this._State,
                        this._Agent,
                        this._Comment};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._StatementID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._StatementNun = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._MaterialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterialLevel = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._CustomerID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._LadeBillID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._NetWeight = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Price = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Amount = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._SettleTime = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Multiple = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._State = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Agent = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Comment = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._StatementID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._StatementNun = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._MaterialID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterialLevel = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._CustomerID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._LadeBillID = ((int)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._NetWeight = ((decimal)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Price = ((decimal)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Amount = ((decimal)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._SettleTime = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10)))
            {
                this._Multiple = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._State = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Agent = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Comment = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Rock.StaticEntities.Statement).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Rock.StaticEntities.Statement)(obj)).isAttached)
                        && (this.StatementID == ((global::Rock.StaticEntities.Statement)(obj)).StatementID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected Rock.Orm.Common.PropertyItem _StatementID = new Rock.Orm.Common.PropertyItem("StatementID", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _StatementNun = new Rock.Orm.Common.PropertyItem("StatementNun", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _MaterialID = new Rock.Orm.Common.PropertyItem("MaterialID", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _MaterialLevel = new Rock.Orm.Common.PropertyItem("MaterialLevel", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _CustomerID = new Rock.Orm.Common.PropertyItem("CustomerID", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _LadeBillID = new Rock.Orm.Common.PropertyItem("LadeBillID", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _NetWeight = new Rock.Orm.Common.PropertyItem("NetWeight", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _Price = new Rock.Orm.Common.PropertyItem("Price", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _Amount = new Rock.Orm.Common.PropertyItem("Amount", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _SettleTime = new Rock.Orm.Common.PropertyItem("SettleTime", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _Multiple = new Rock.Orm.Common.PropertyItem("Multiple", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _State = new Rock.Orm.Common.PropertyItem("State", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _Agent = new Rock.Orm.Common.PropertyItem("Agent", "Rock.StaticEntities.Statement");

            protected Rock.Orm.Common.PropertyItem _Comment = new Rock.Orm.Common.PropertyItem("Comment", "Rock.StaticEntities.Statement");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public Rock.Orm.Common.PropertyItem StatementID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StatementID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("StatementID", _StatementID.EntityConfiguration, _StatementID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem StatementNun
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StatementNun;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("StatementNun", _StatementNun.EntityConfiguration, _StatementNun.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialID", _MaterialID.EntityConfiguration, _MaterialID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem MaterialLevel
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialLevel;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("MaterialLevel", _MaterialLevel.EntityConfiguration, _MaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem CustomerID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustomerID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("CustomerID", _CustomerID.EntityConfiguration, _CustomerID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem LadeBillID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LadeBillID;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("LadeBillID", _LadeBillID.EntityConfiguration, _LadeBillID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem NetWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _NetWeight;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("NetWeight", _NetWeight.EntityConfiguration, _NetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Price
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Price;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Amount
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Amount;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Amount", _Amount.EntityConfiguration, _Amount.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem SettleTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SettleTime;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("SettleTime", _SettleTime.EntityConfiguration, _SettleTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Multiple
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Multiple;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Multiple", _Multiple.EntityConfiguration, _Multiple.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem State
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _State;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Agent
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Agent;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Agent", _Agent.EntityConfiguration, _Agent.PropertyConfiguration, aliasName);
                    }
                }
            }

            public Rock.Orm.Common.PropertyItem Comment
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Comment;
                    }
                    else
                    {
                        return new Rock.Orm.Common.PropertyItem("Comment", _Comment.EntityConfiguration, _Comment.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}


#endregion 业务部分

